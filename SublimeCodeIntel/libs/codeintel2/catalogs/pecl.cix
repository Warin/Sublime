<?xml version="1.0" encoding="utf-8"?>

<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
 The contents of this file are subject to the Mozilla Public License
 Version 1.1 (the "License"); you may not use this file except in
 compliance with the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/
 
 Software distributed under the License is distributed on an "AS IS"
 basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 License for the specific language governing rights and limitations
 under the License.
 
 The Original Code is Komodo code.
 
 The Initial Developer of the Original Code is ActiveState Software Inc.
 Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 ActiveState Software Inc. All Rights Reserved.
 
 Contributor(s):
   ActiveState Software Inc
 
 Alternatively, the contents of this file may be used under the terms of
 either the GNU General Public License Version 2 or later (the "GPL"), or
 the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.
 
 ***** END LICENSE BLOCK ***** -->

<codeintel version="2.0" name="PECL" description="A collection of PHP Extensions">
  <file lang="PHP" mtime="1164916200" path="pecl.cix">
    <scope ilk="blob" lang="PHP" name="pecl" id="global">
      <scope ilk="class" name="HttpRequestPool">
        <scope name="__construct" signature="__construct([HttpRequest request[, ...]])" doc="Instantiate a new HttpRequestPool object An&#10;HttpRequestPool is able to send several HttpRequests&#10;in parallel WARNING Don't attach detach HttpRequest" ilk="function" src="http_requestpool_object.c" returns="void"/>
        <scope name="__destruct" signature="__destruct()" doc="Clean up HttpRequestPool object" ilk="function" src="http_requestpool_object.c" returns="void"/>
        <scope name="reset" signature="reset()" doc="Detach all attached HttpRequest objects" ilk="function" src="http_requestpool_object.c" returns="void"/>
        <scope name="attach" signature="attach(HttpRequest request)" doc="Attach an HttpRequest object to this HttpRequestPool&#10;WARNING set all options prior attaching Expects the&#10;parameter to be an HttpRequest" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="detach" signature="detach(HttpRequest request)" doc="Detach an HttpRequest object from this HttpRequestPool&#10;Expects the parameter to be an HttpRequest object&#10;attached to this HttpRequestPool object" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="send" signature="send()" doc="Send all attached HttpRequest objects in parallel&#10;Returns TRUE on success or FALSE on failure Throws&#10;HttpRequestPoolException HttpSocketException&#10;HttpRequestException HttpMalformedHeaderException" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="socketPerform" signature="socketPerform()" doc="Returns TRUE until each request has finished its&#10;transaction Usage lt pre gt lt php class MyPool&#10;extends HttpRequestPool public" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="socketSelect" signature="socketSelect()" doc="See HttpRequestPool socketPerform Returns TRUE on&#10;success or FALSE on failure" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="valid" signature="valid()" doc="Implements Iterator valid" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="current" signature="current()" doc="Implements Iterator current" ilk="function" src="http_requestpool_object.c" returns="HttpRequest"/>
        <scope name="key" signature="key()" doc="Implements Iterator key" ilk="function" src="http_requestpool_object.c" returns="int"/>
        <scope name="next" signature="next()" doc="Implements Iterator next" ilk="function" src="http_requestpool_object.c" returns="void"/>
        <scope name="rewind" signature="rewind()" doc="Implements Iterator rewind" ilk="function" src="http_requestpool_object.c" returns="void"/>
        <scope name="count" signature="count()" doc="Implements Countable Returns the number of attached&#10;HttpRequest objects" ilk="function" src="http_requestpool_object.c" returns="int"/>
        <scope name="getAttachedRequests" signature="getAttachedRequests()" doc="Get attached HttpRequest objects Returns an array&#10;containing all currently attached HttpRequest objects" ilk="function" src="http_requestpool_object.c" returns="array"/>
        <scope name="getFinishedRequests" signature="getFinishedRequests()" doc="Get attached HttpRequest objects that already have&#10;finished their work Returns an array containing all&#10;attached HttpRequest objects that already" ilk="function" src="http_requestpool_object.c" returns="array"/>
      </scope>
      <scope ilk="class" name="HttpRequest">
        <scope name="enablePiplelinig" signature="enablePiplelinig([bool enable = true])" doc="Enables pipelining support for all attached requests if&#10;support in libcurl is given Returns TRUE on success or&#10;FALSE on" ilk="function" src="http_requestpool_object.c" returns="bool"/>
        <scope name="__construct" signature="__construct([string url[, int request_method = HTTP_METH_GET[, array options]]])" doc="Instantiate a new HttpRequest object Accepts a string&#10;as optional parameter containing the target request&#10;url Additionally accepts an optional" ilk="function" src="http_request_object.c" returns="void"/>
        <scope name="setOptions" signature="setOptions([array options])" doc="Set the request options to use See http get for a full&#10;list of available options Accepts an array as" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getOptions" signature="getOptions()" doc="Get currently set options Returns an associative array&#10;containing currently set options" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="setSslOptions" signature="setSslOptions([array options])" doc="Set SSL options Accepts an associative array as&#10;parameter containing any SSL specific options If the&#10;parameter is empty or" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="addSslOptions" signature="addSslOptions(array options)" doc="Set additional SSL options Expects an associative array&#10;as parameter containing additional SSL specific options&#10;Returns TRUE on success or" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getSslOtpions" signature="getSslOtpions()" doc="Get previously set SSL options Returns an associative&#10;array containing any previously set SSL options" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="addHeaders" signature="addHeaders(array headers)" doc="Add request header name value pairs Expects an&#10;associative array as parameter containing additional&#10;header name value pairs Returns TRUE" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="setHeaders" signature="setHeaders([array headers])" doc="Set request header name value pairs Accepts an&#10;associative array as parameter containing header name&#10;value pairs If the parameter" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getHeaders" signature="getHeaders()" doc="Get previously set request headers Returns an&#10;associative array containing all currently set headers" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="setCookies" signature="setCookies([array cookies])" doc="Set cookies Accepts an associative array as parameter&#10;containing cookie name value pairs If the parameter is&#10;empty or omitted" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="addCookies" signature="addCookies(array cookies)" doc="Add cookies Expects an associative array as parameter&#10;containing any cookie name value pairs to add Returns&#10;TRUE on success" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getCookies" signature="getCookies()" doc="Get previously set cookies Returns an associative array&#10;containing any previously set cookies" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="enableCookies" signature="enableCookies()" doc="Enable automatic sending of received cookies Note that&#10;cuutomly set cookies will be sent anyway" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="resetCookies" signature="resetCookies([bool session_only = FALSE])" doc="Reset all automatically received sent cookies Note that&#10;customly set cookies are not affected Accepts an&#10;optional bool parameter specifying" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="setUrl" signature="setUrl(string url)" doc="Set the request URL Expects a string as parameter&#10;specifying the request url Returns TRUE on success or&#10;FALSE on" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getUrl" signature="getUrl()" doc="Get the previously set request URL Returns the&#10;currently set request url as string" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="setMethod" signature="setMethod(int request_method)" doc="Set the request method Expects an int as parameter&#10;specifying the request method to use In PHP&#10;HttpRequest METH otherwise" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getMethod" signature="getMethod()" doc="Get the previously set request method Returns the&#10;currently set request method" ilk="function" src="http_request_object.c" returns="int"/>
        <scope name="setContentType" signature="setContentType(string content_type)" doc="Set the content type the post request should have&#10;Expects a string as parameters containing the content&#10;type of the" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getContentType" signature="getContentType()" doc="Get the previously content type Returns the previously&#10;set content type as string" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="setQueryData" signature="setQueryData([mixed query_data])" doc="Set the URL query parameters to use overwriting&#10;previously set query parameters Affects any request&#10;types Accepts a string or" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getQueryData" signature="getQueryData()" doc="Get the current query data in form of an urlencoded&#10;query string Returns a string containing the&#10;urlencoded query" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="addQueryData" signature="addQueryData(array query_params)" doc="Add parameters to the query parameter list leaving&#10;previously set unchanged Affects any request type&#10;Expects an associative array as" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="addPostFields" signature="addPostFields(array post_data)" doc="Adds POST data entries leaving previously set unchanged&#10;unless a post entry with the same name already exists&#10;Affects only" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="setPostFields" signature="setPostFields([array post_data])" doc="Set the POST data entries overwriting previously set&#10;POST data Affects only POST and custom requests&#10;Accepts an associative array" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getPostFields" signature="getPostFields()" doc="Get previously set POST data Returns the currently set&#10;post fields as associative array" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="setRawPostData" signature="setRawPostData([string raw_post_data])" doc="Set raw post data to send overwriting previously set&#10;raw post data Don't forget to specify a content type&#10;Affects" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="addRawPostData" signature="addRawPostData(string raw_post_data)" doc="Add raw post data leaving previously set raw post data&#10;unchanged Affects only POST and custom requests&#10;Expects a string" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getRawPostData" signature="getRawPostData()" doc="Get previously set raw post data Returns a string&#10;containing the currently set raw post data" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="addPostFile" signature="addPostFile(string name, string file[, string content_type = &quot;application/x-octetstream&quot;])" doc="Add a file to the POST request leaving previously set&#10;files unchanged Affects only POST and custom requests&#10;Cannot be" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="setPostFiles" signature="setPostFiles([array post_files])" doc="Set files to post overwriting previously set post files&#10;Affects only POST and requests Cannot be used with raw&#10;post" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getPostFiles" signature="getPostFiles()" doc="Get all previously added POST files Returns an array&#10;containing currently set post files" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="setPutFile" signature="setPutFile([string file])" doc="Set file to put Affects only PUT requests Accepts a&#10;string as parameter referencing the path to file If&#10;the" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getPutFile" signature="getPutFile()" doc="Get previously set put file Returns a string containing&#10;the path to the currently set put file" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="setPutData" signature="setPutData([string put_data])" doc="Set PUT data to send overwriting previously set PUT&#10;data Affects only PUT requests Only either PUT data or&#10;PUT" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="addPutData" signature="addPutData(string put_data)" doc="Add PUT data leaving previously set PUT data unchanged&#10;Affects only PUT requests Expects a string as&#10;parameter containing the" ilk="function" src="http_request_object.c" returns="bool"/>
        <scope name="getPutData" signature="getPutData()" doc="Get previously set PUT data Returns a string containing&#10;the currently set raw post data" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="getResponseData" signature="getResponseData()" doc="Get all response data after the request has been sent&#10;Returns an associative array with the key quot headers&#10;quot" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="getResponseHeader" signature="getResponseHeader([string name])" doc="Get response header s after the request has been sent&#10;Accepts an string as optional parameter specifying a&#10;certain header" ilk="function" src="http_request_object.c" returns="mixed"/>
        <scope name="getResponseCookies" signature="getResponseCookies([int flags[, array allowed_extras]])" doc="Get response cookie s after the request has been sent&#10;Returns an array of stdClass objects like http parse&#10;cookie" ilk="function" src="http_request_object.c" returns="array"/>
        <scope name="getResponseBody" signature="getResponseBody()" doc="Get the response body after the request has been sent&#10;Returns a string containing the response body If&#10;redirects were" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="getResponseCode" signature="getResponseCode()" doc="Get the response code after the request has been sent&#10;Returns an int representing the response code If&#10;redirects were" ilk="function" src="http_request_object.c" returns="int"/>
        <scope name="getResponseStatus" signature="getResponseStatus()" doc="Get the response status i e the string after the&#10;response code after the message has been sent Returns&#10;a" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="getResponseInfo" signature="getResponseInfo([string name])" doc="Get response info after the request has been sent See&#10;http get for a full list of returned info Accepts" ilk="function" src="http_request_object.c" returns="mixed"/>
        <scope name="getResponseMessage" signature="getResponseMessage()" doc="Get the full response as HttpMessage object after the&#10;request has been sent Returns an HttpMessage object of&#10;the response" ilk="function" src="http_request_object.c" returns="HttpMessage"/>
        <scope name="getRequestMessage" signature="getRequestMessage()" doc="Get sent HTTP message Returns an HttpMessage object&#10;representing the sent request If redirects were&#10;allowed and several responses were" ilk="function" src="http_request_object.c" returns="HttpMessage"/>
        <scope name="getRawRequestMessage" signature="getRawRequestMessage()" doc="Get sent HTTP message Returns an HttpMessage in a form&#10;of a string" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="getRawResponseMessage" signature="getRawResponseMessage()" doc="Get the entire HTTP response Returns the complete web&#10;server response including the headers in a form of a&#10;string" ilk="function" src="http_request_object.c" returns="string"/>
        <scope name="getHistory" signature="getHistory()" doc="Get all sent requests and received responses as an&#10;HttpMessage object If you want to record history set&#10;the instance" ilk="function" src="http_request_object.c" returns="HttpMessage"/>
        <scope name="clearHistory" signature="clearHistory()" doc="Clear the history" ilk="function" src="http_request_object.c" returns="void"/>
        <scope name="send" signature="send()" doc="Send the HTTP request Returns the received response as&#10;HttpMessage object NOTE While an exception may be&#10;thrown the transfer" ilk="function" src="http_request_object.c" returns="HttpMessage"/>
      </scope>
      <scope ilk="class" name="HttpDeflateStream">
        <scope name="__construct" signature="__construct([int flags = 0])" doc="Creates a new HttpDeflateStream object instance Accepts&#10;an optional int parameter specifying how to initialize&#10;the deflate stream" ilk="function" src="http_deflatestream_object.c" returns="void"/>
        <scope name="update" signature="update(string data)" doc="Passes more data through the deflate stream Expects a&#10;string parameter containing a part of the data to&#10;deflate Returns" ilk="function" src="http_deflatestream_object.c" returns="string"/>
        <scope name="flush" signature="flush([string data])" doc="Flushes the deflate stream Returns some deflated data&#10;as string on success or FALSE on failure" ilk="function" src="http_deflatestream_object.c" returns="string"/>
        <scope name="finish" signature="finish([string data])" doc="Finalizes the deflate stream The deflate stream can be&#10;reused after finalizing Returns the final part of&#10;deflated data" ilk="function" src="http_deflatestream_object.c" returns="string"/>
      </scope>
      <scope ilk="class" name="HttpQueryString">
        <scope name="__construct" signature="__construct([bool global = true[, mixed add])" doc="Creates a new HttpQueryString object instance Operates&#10;on and modifies GET and SERVER 'QUERY STRING' if&#10;global is TRUE" ilk="function" src="http_querystring_object.c" returns="void"/>
        <scope name="toString" signature="toString()" doc="Returns the string representation" ilk="function" src="http_querystring_object.c" returns="string"/>
        <scope name="toArray" signature="toArray()" doc="Returns the array representation" ilk="function" src="http_querystring_object.c" returns="array"/>
        <scope name="get" signature="get([string key[, mixed type = 0[, mixed defval = NULL[, bool delete = false]]]])" doc="Get part of the query string The type parameter is&#10;either one of the HttpQueryString TYPE constants or a&#10;type" ilk="function" src="http_querystring_object.c" returns="mixed"/>
        <scope name="set" signature="set(mixed params)" doc="Set query string entry entries NULL values will unset&#10;the variable" ilk="function" src="http_querystring_object.c" returns="string"/>
        <scope name="mod" signature="mod(mixed params)" doc="Copies the query string object and sets provided params&#10;at the clone This is basically shorthand for lt pre gt" ilk="function" src="http_querystring_object.c" returns="HttpQueryString"/>
        <scope name="singleton" signature="singleton([bool global = true])" doc="Get a single instance differentiates between the global&#10;setting" ilk="function" src="http_querystring_object.c" returns="HttpQueryString"/>
        <scope name="xlate" signature="xlate(string ie, string oe)" doc="Converts the query string from the source encoding ie&#10;to the target encoding oe WARNING Don't use any&#10;character set" ilk="function" src="http_querystring_object.c" returns="bool"/>
        <scope name="serialize" signature="serialize()" doc="Implements Serializable" ilk="function" src="http_querystring_object.c" returns="string"/>
        <scope name="unserialize" signature="unserialize(string serialized)" doc="Implements Serializable" ilk="function" src="http_querystring_object.c" returns="void"/>
        <scope name="offsetGet" signature="offsetGet(string offset)" doc="Implements ArrayAccess" ilk="function" src="http_querystring_object.c" returns="mixed"/>
        <scope name="offsetSet" signature="offsetSet(string offset, mixed value)" doc="Implements ArrayAccess" ilk="function" src="http_querystring_object.c" returns="void"/>
        <scope name="offsetExists" signature="offsetExists(string offset)" doc="Implements ArrayAccess" ilk="function" src="http_querystring_object.c" returns="bool"/>
        <scope name="offsetUnset" signature="offsetUnset(string offset)" doc="Implements ArrayAccess" ilk="function" src="http_querystring_object.c" returns="void"/>
      </scope>
      <scope ilk="class" name="HttpInflateStream">
        <scope name="__construct" signature="__construct([int flags = 0])" doc="Creates a new HttpInflateStream object instance Accepts&#10;an optional int parameter specifying how to initialize&#10;the inflate stream" ilk="function" src="http_inflatestream_object.c" returns="void"/>
        <scope name="update" signature="update(string data)" doc="Passes more data through the inflate stream Expects a&#10;string parameter containing a part of the data to&#10;inflate Returns" ilk="function" src="http_inflatestream_object.c" returns="string"/>
        <scope name="flush" signature="flush([string data])" doc="Flush the inflate stream Returns some inflated data as&#10;string on success or FALSE on failure" ilk="function" src="http_inflatestream_object.c" returns="string"/>
        <scope name="finish" signature="finish([string data])" doc="Finalizes the inflate stream The inflate stream can be&#10;reused after finalizing Returns the final part of&#10;inflated data" ilk="function" src="http_inflatestream_object.c" returns="string"/>
      </scope>
      <scope ilk="class" name="HttpResponse">
        <scope name="guessContentType" signature="guessContentType(string magic_file[, int magic_mode = MAGIC_MIME])" doc="Attempts to guess the content type of supplied payload&#10;through libmagic If the attempt is successful the&#10;guessed content type" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setHeader" signature="setHeader(string name[, mixed value[, bool replace = true]])" doc="Send an HTTP header Expects a string parameter&#10;containing the name of the header and a mixed&#10;parameter containing the" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getHeader" signature="getHeader([string name])" doc="Get header s about to be sent Accepts a string as&#10;optional parameter which specifies the name of the&#10;header" ilk="function" src="http_response_object.c" returns="mixed"/>
        <scope name="setCache" signature="setCache(bool cache)" doc="Whether it should be attempted to cache the entity This&#10;will result in necessary caching headers and checks of&#10;clients" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getCache" signature="getCache()" doc="Get current caching setting Returns TRUE if caching&#10;should be attempted else FALSE" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="setGzip" signature="setGzip(bool gzip)" doc="Enable on-thy-fly gzipping of the sent entity Expects a&#10;boolean as parameter indicating if GZip compression&#10;should be enabled Returns" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getGzip" signature="getGzip()" doc="Get current gzipping setting Returns TRUE if GZip&#10;compression is enabled else FALSE" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="setCacheControl" signature="setCacheControl(string control[, int max_age = 0[, bool must_revalidate = true]])" doc="Set a custom cache-control header usually being quot&#10;private quot or quot public quot The max age parameter&#10;controls how" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getCacheControl" signature="getCacheControl()" doc="Get current Cache-Control header setting Returns the&#10;current cache control setting as a string like sent in&#10;a header" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setContentType" signature="setContentType(string content_type)" doc="Set the content-type of the sent entity Expects a&#10;string as parameter specifying the content type of the&#10;sent entity" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getContentType" signature="getContentType()" doc="Get current Content-Type header setting Returns the&#10;currently set content type as string" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setContentDisposition" signature="setContentDisposition(string filename[, bool inline = false])" doc="Set the Content-Disposition The Content-Disposition&#10;header is very useful if the data actually sent came&#10;from a file or something" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getContentDisposition" signature="getContentDisposition()" doc="Get current Content-Disposition setting Returns the&#10;current content disposition as string like sent in a&#10;header" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setETag" signature="setETag(string etag)" doc="Set a custom ETag Use this only if you know what you're&#10;doing Expects an unquoted string as parameter&#10;containing" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getETag" signature="getETag()" doc="Get calculated or previously set custom ETag Returns&#10;the calculated or previously set ETag as unquoted&#10;string" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setLastModified" signature="setLastModified(int timestamp)" doc="Set a custom Last-Modified date Expects an unix&#10;timestamp as parameter representing the last&#10;modification time of the sent entity" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getLastModified" signature="getLastModified()" doc="Get calculated or previously set custom Last-Modified&#10;date Returns the calculated or previously set unix&#10;timestamp" ilk="function" src="http_response_object.c" returns="int"/>
        <scope name="setThrottleDelay" signature="setThrottleDelay(double seconds)" doc="Sets the throttle delay for use with HttpResponse&#10;setBufferSize Provides a basic throttling mechanism&#10;which will yield the current process" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getThrottleDelay" signature="getThrottleDelay()" doc="Get the current throttle delay Returns a double&#10;representing the throttle delay in seconds" ilk="function" src="http_response_object.c" returns="double"/>
        <scope name="setBufferSize" signature="setBufferSize(int bytes)" doc="Sets the send buffer size for use with HttpResponse&#10;setThrottleDelay Provides a basic throttling mechanism&#10;which will yield the current" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getBufferSize" signature="getBufferSize()" doc="Get current buffer size Returns an int representing the&#10;current buffer size in bytes" ilk="function" src="http_response_object.c" returns="int"/>
        <scope name="setData" signature="setData(mixed data)" doc="Set the data to be sent Expects one parameter which&#10;will be converted to a string and contains the data" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getData" signature="getData()" doc="Get the previously set data to be sent Returns a string&#10;containing the previously set data to send" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="setStream" signature="setStream(resource stream)" doc="Set the resource to be sent Expects a resource&#10;parameter referencing an already opened stream from&#10;which the data to" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getStream" signature="getStream()" doc="Get the previously set resource to be sent Returns the&#10;previously set resource" ilk="function" src="http_response_object.c" returns="resource"/>
        <scope name="setFile" signature="setFile(string file)" doc="Set the file to be sent Expects a string as parameter&#10;specifying the path to the file to send Returns" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="getFile" signature="getFile()" doc="Get the previously set file to be sent Returns the&#10;previously set path to the file to send as string" ilk="function" src="http_response_object.c" returns="string"/>
        <scope name="send" signature="send([bool clean_ob = true])" doc="Finally send the entity Accepts an optional boolean&#10;parameter specifying whether the output buffers should&#10;be discarded prior sending A" ilk="function" src="http_response_object.c" returns="bool"/>
        <scope name="capture" signature="capture()" doc="Capture script output Example lt pre gt lt php&#10;HttpResponse setCache true HttpResponse capture script&#10;follows gt lt pre gt" ilk="function" src="http_response_object.c" returns="void"/>
      </scope>
      <scope ilk="class" name="HttpMessage">
        <scope name="__construct" signature="__construct([string message])" doc="Instantiate a new HttpMessage object Accepts an&#10;optional string parameter containing a single or&#10;several consecutive HTTP messages The constructed" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="fromString" signature="fromString(string raw_message[, string class_name = &quot;HttpMessage&quot;])" doc="Create an HttpMessage object from a string Kind of a&#10;static constructor Expects a string parameter&#10;containing a single or" ilk="function" src="http_message_object.c" returns="HttpMessage"/>
        <scope name="getBody" signature="getBody()" doc="Get the body of the parsed HttpMessage Returns the&#10;message body as string" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="setBody" signature="setBody(string body)" doc="Set the body of the HttpMessage NOTE Don't forget to&#10;update any headers accordingly Expects a string&#10;parameter containing the" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="getHeader" signature="getHeader(string header)" doc="Get message header Returns the header value on success&#10;or NULL if the header does not exist" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="getHeaders" signature="getHeaders()" doc="Get Message Headers Returns an associative array&#10;containing the messages HTTP headers" ilk="function" src="http_message_object.c" returns="array"/>
        <scope name="setHeaders" signature="setHeaders(array headers)" doc="Sets new headers Expects an associative array as&#10;parameter containing the new HTTP headers which will&#10;replace all previous HTTP" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="addHeaders" signature="addHeaders(array headers[, bool append = false])" doc="Add headers If append is true headers with the same&#10;name will be separated else overwritten Expects an&#10;associative array" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="getType" signature="getType()" doc="Get Message Type HTTP MSG NONE" ilk="function" src="http_message_object.c" returns="int"/>
        <scope name="setType" signature="setType(int type)" doc="Set Message Type HTTP MSG NONE" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="getResponseCode" signature="getResponseCode()" doc="Get the Response Code of the Message Returns the HTTP&#10;response code if the message is of type HttpMessage&#10;TYPE" ilk="function" src="http_message_object.c" returns="int"/>
        <scope name="setResponseCode" signature="setResponseCode(int code)" doc="Set the response code of an HTTP Response Message&#10;Expects an int parameter with the HTTP response code&#10;Returns TRUE" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="getResponseStatus" signature="getResponseStatus()" doc="Get the Response Status of the message i e the string&#10;following the response code Returns the HTTP response&#10;status" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="setResponseStatus" signature="setResponseStatus(string status)" doc="Set the Response Status of the HTTP message i e the&#10;string following the response code Expects a string&#10;parameter" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="getRequestMethod" signature="getRequestMethod()" doc="Get the Request Method of the Message Returns the&#10;request method name on success or FALSE if the message&#10;is" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="setRequestMethod" signature="setRequestMethod(string method)" doc="Set the Request Method of the HTTP Message Expects a&#10;string parameter containing the request method name&#10;Returns TRUE on" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="getRequestUrl" signature="getRequestUrl()" doc="Get the Request URL of the Message Returns the request&#10;url as string on success or FALSE if the message" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="setRequestUrl" signature="setRequestUrl(string url)" doc="Set the Request URL of the HTTP Message Expects a&#10;string parameters containing the request url Returns&#10;TRUE on success" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="getHttpVersion" signature="getHttpVersion()" doc="Get the HTTP Protocol Version of the Message Returns&#10;the HTTP protocol version as string" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="setHttpVersion" signature="setHttpVersion(string version)" doc="Set the HTTP Protocol version of the Message Expects a&#10;string parameter containing the HTTP protocol version&#10;Returns TRUE on" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="guessContentType" signature="guessContentType(string magic_file[, int magic_mode = MAGIC_MIME])" doc="Attempts to guess the content type of supplied payload&#10;through libmagic Expects a string parameter specifying&#10;the magic mime database" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="getParentMessage" signature="getParentMessage()" doc="Get parent Message Returns the parent HttpMessage on&#10;success or NULL if there's none Throws&#10;HttpRuntimeException" ilk="function" src="http_message_object.c" returns="HttpMessage"/>
        <scope name="send" signature="send()" doc="Send the Message according to its type as Response or&#10;Request This provides limited functionality compared&#10;to HttpRequest and HttpResponse" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="toString" signature="toString([bool include_parent = false])" doc="Get the string representation of the Message Accepts a&#10;bool parameter which specifies whether the returned&#10;string should also contain" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="toMessageTypeObject" signature="toMessageTypeObject(void)" doc="Creates an object regarding to the type of the message&#10;Returns either an HttpRequest or HttpResponse object&#10;on success or" ilk="function" src="http_message_object.c" returns="HttpRequest"/>
        <scope name="count" signature="count()" doc="Implements Countable Returns the number of parent&#10;messages" ilk="function" src="http_message_object.c" returns="int"/>
        <scope name="serialize" signature="serialize()" doc="Implements Serializable Returns the serialized&#10;representation of the HttpMessage" ilk="function" src="http_message_object.c" returns="string"/>
        <scope name="unserialize" signature="unserialize(string serialized)" doc="Implements Serializable Re-constructs the HttpMessage&#10;based upon the serialized string" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="detach" signature="detach(void)" doc="Returns a clone of an HttpMessage object detached from&#10;any parent messages" ilk="function" src="http_message_object.c" returns="HttpMessage"/>
        <scope name="prepend" signature="prepend(HttpMessage message[, bool top = true])" doc="Prepends message s to the HTTP message Expects an&#10;HttpMessage object as parameter Throws&#10;HttpInvalidParamException if the message is located" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="reverse" signature="reverse()" doc="Reorders the message chain in reverse order Returns the&#10;most parent HttpMessage object" ilk="function" src="http_message_object.c" returns="HttpMessage"/>
        <scope name="rewind" signature="rewind(void)" doc="Implements Iterator" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="valid" signature="valid(void)" doc="Implements Iterator" ilk="function" src="http_message_object.c" returns="bool"/>
        <scope name="next" signature="next(void)" doc="Implements Iterator" ilk="function" src="http_message_object.c" returns="void"/>
        <scope name="key" signature="key(void)" doc="Implements Iterator" ilk="function" src="http_message_object.c" returns="int"/>
        <scope name="current" signature="current(void)" doc="Implements Iterator" ilk="function" src="http_message_object.c" returns="HttpMessage"/>
      </scope>
      <scope ilk="class" name="HttpRequestDataShare">
        <scope name="__destruct" signature="__destruct()" doc="Clean up HttpRequestDataShare object" ilk="function" src="http_requestdatashare_object.c" returns="void"/>
        <scope name="count" signature="count()" doc="Implements Countable count" ilk="function" src="http_requestdatashare_object.c" returns="int"/>
        <scope name="singleton" signature="singleton([bool global = false])" doc="Get a single instance differentiates between the global&#10;setting" ilk="function" src="http_requestdatashare_object.c" returns="HttpRequestDataShare"/>
      </scope>
      <scope ilk="class" name="ZipArchive">
        <scope name="open" signature="open(string source [, int flags])" doc="Create new zip using source uri for output return TRUE&#10;on success or the error code" ilk="function" src="php_zip.c" returns="mixed"/>
        <scope name="close" signature="close()" doc="close the zip archive" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="createEmptyDir" signature="createEmptyDir(string dirname)" doc="U Returns the index of the entry named filename in the&#10;archive" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="addFile" signature="addFile(string filepath[, string entryname[, int start [, int length]]])" doc="Add a file in a Zip archive using its path and the name&#10;to use" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="addFromString" signature="addFromString(string name, string content)" doc="Add a file using content and the entry name" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="statName" signature="statName(string filename[, int flags])" doc="Returns the information about a the zip entry filename" ilk="function" src="php_zip.c" returns="array"/>
        <scope name="statIndex" signature="statIndex(int index[, int flags])" doc="Returns the zip entry informations using its index" ilk="function" src="php_zip.c" returns="resource"/>
        <scope name="locateName" signature="locateName(string filename[, int flags])" doc="Returns the index of the entry named filename in the&#10;archive" ilk="function" src="php_zip.c" returns="int"/>
        <scope name="getNameIndex" signature="getNameIndex(int index [, int flags])" doc="Returns the name of the file at position index" ilk="function" src="php_zip.c" returns="string"/>
        <scope name="setArchiveComment" signature="setArchiveComment(string name, string comment)" doc="Set or remove NULL '' the comment of the archive" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="getArchiveComment" signature="getArchiveComment()" doc="Returns the comment of an entry using its index" ilk="function" src="php_zip.c" returns="string"/>
        <scope name="setCommentName" signature="setCommentName(string name, string comment)" doc="Set or remove NULL '' the comment of an entry using its&#10;Name" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="setCommentIndex" signature="setCommentIndex(int index, string comment)" doc="Set or remove NULL '' the comment of an entry using its&#10;index" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="getCommentName" signature="getCommentName(string name)" doc="Returns the comment of an entry using its name" ilk="function" src="php_zip.c" returns="string"/>
        <scope name="getCommentIndex" signature="getCommentIndex(int index)" doc="Returns the comment of an entry using its index" ilk="function" src="php_zip.c" returns="string"/>
        <scope name="deleteIndex" signature="deleteIndex(int index)" doc="Delete a file using its index" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="deleteName" signature="deleteName(string name)" doc="Delete a file using its index" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="renameIndex" signature="renameIndex(int index, string new_name)" doc="Rename an entry selected by its index to new name" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="renameName" signature="renameName(string name, string new_name)" doc="Rename an entry selected by its name to new name" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="unchangeIndex" signature="unchangeIndex(int index)" doc="Changes to the file at position index are reverted" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="unchangeName" signature="unchangeName(string name)" doc="Changes to the file named 'name' are reverted" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="unchangeAll" signature="unchangeAll()" doc="All changes to files and global information in archive&#10;are reverted" ilk="function" src="php_zip.c" returns="bool"/>
        <scope name="unchangeArchive" signature="unchangeArchive()" doc="Revert all global changes to the archive archive For&#10;now this only reverts archive comment changes" ilk="function" src="php_zip.c" returns="bool"/>
      </scope>
      <scope ilk="class" name="pdf">
        <scope name="__construct" signature="__construct()" doc="Constructs a new PDFlib object" ilk="function" src="pdf7.c" returns="bool"/>
      </scope>
      <scope ilk="class" name="OracleCalendar">
        <scope name="__construct" signature="__construct(string host, string user, string pass [, bool persistent [, string authentication [, string compression [, string encryption ] ] ] ])" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name="setConfigFile" signature="setConfigFile(string configfile, string logfile)" doc="" ilk="function" src="ocal.c" returns="bool"/>
        <scope name="getCapabilities" signature="getCapabilities(int capabilityid)" doc="" ilk="function" src="ocal.c" returns="array"/>
        <scope name="getContactsByQuery" signature="getContactsByQuery(OracleCalendarQuery query [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getContactsByUid" signature="getContactsByUid(array uids [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
      </scope>
      <scope ilk="class" name="OracleCalendarAgenda">
        <scope name="storeEvents" signature="storeEvents(string events [, int flags ])" doc="" ilk="function" src="ocal.c" returns="array"/>
        <scope name="deleteEvents" signature="deleteEvents(array uids [, string recurrenceid [, int modifier ] ])" doc="" ilk="function" src="ocal.c" returns="bool"/>
        <scope name="storeTasks" signature="storeTasks(string tasks [, int flags ])" doc="" ilk="function" src="ocal.c" returns="array"/>
        <scope name="deleteTasks" signature="deleteTasks(array uids)" doc="" ilk="function" src="ocal.c" returns="bool"/>
        <scope name="storeContacts" signature="storeContacts(string contacts [, int flags ])" doc="" ilk="function" src="ocal.c" returns="array"/>
        <scope name="deleteContacts" signature="deleteContacts(array uids)" doc="" ilk="function" src="ocal.c" returns="bool"/>
        <scope name="__construct" signature="__construct(OracleCalendar connection, string username)" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name="getName" signature="getName()" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getEmail" signature="getEmail()" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getEventsByRange" signature="getEventsByRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getEventsByAlarmRange" signature="getEventsByAlarmRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getEventsByUid" signature="getEventsByUid(array uids [, int flags [, array properties [, string recurrenceid [, int modifier ] ] ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getTasksByRange" signature="getTasksByRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getTasksByAlarmRange" signature="getTasksByAlarmRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getTasksByUid" signature="getTasksByUid(array uids [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
      </scope>
      <scope ilk="class" name="OracleSysopCalendar">
        <scope name="__construct" signature="__construct(string host, string nodeid, string pass [, bool persistent [, string authentication [, string compression [, string encryption ] ] ] ])" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name="setIdentity" signature="setIdentity(string username)" doc="" ilk="function" src="ocal.c" returns="bool"/>
      </scope>
      <scope ilk="class" name="OracleCalendarCompositeAgenda">
        <scope name=":__construct" signature=":__construct(OracleCalendar calendar)" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name="addAgenda" signature="addAgenda(OracleCalendarAgenda agenda)" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name=":getAgendas" signature=":getAgendas()" doc="" ilk="function" src="ocal.c" returns="array"/>
        <scope name="getEventsByRange" signature="getEventsByRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getEventsByAlarmRange" signature="getEventsByAlarmRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getTasksByRange" signature="getTasksByRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
        <scope name="getTasksByAlarmRange" signature="getTasksByAlarmRange(string start, string end [, int flags [, array properties ] ])" doc="" ilk="function" src="ocal.c" returns="string"/>
      </scope>
      <scope ilk="class" name="OracleCalendarQuery">
        <scope name=":__construct" signature=":__construct(IOracleCalendarCondition condition)" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name="addCondition" signature="addCondition(IOracleCalendarCondition condition [, int operator ])" doc="" ilk="function" src="ocal.c" returns="void"/>
      </scope>
      <scope ilk="class" name="OracleCalendarCondition">
        <scope name=":__construct" signature=":__construct(string property, int operator, string value)" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name=":getProperty" signature=":getProperty()" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name=":getOperator" signature=":getOperator()" doc="" ilk="function" src="ocal.c" returns="void"/>
        <scope name=":getValue" signature=":getValue()" doc="" ilk="function" src="ocal.c" returns="void"/>
      </scope>
      <scope ilk="class" name="SplType">
        <scope name="__construct" signature="__construct(mixed initial_value [, bool strict])" doc="Cronstructs a enum with given value" ilk="function" src="spl_type.c" returns="void"/>
      </scope>
      <scope ilk="class" name="SplEnum">
        <scope name="getConstList" signature="getConstList([bool inc_def = false])" doc="Returns all consts possible values as an array" ilk="function" src="spl_type.c" returns="array"/>
      </scope>
      <scope name="cvsclient_connect" signature="cvsclient_connect(string server, string cvsroot[, int port])" returns="resource" doc="Connect to CVS pserver" ilk="function" src="cvsclient.c"/>
      <scope name="cvsclient_login" signature="cvsclient_login(resource cvsclient, string username, string password)" returns="bool" doc="Authenticate to the CVS pserver" ilk="function" src="cvsclient.c"/>
      <scope name="cvsclient_retrieve" signature="cvsclient_retrieve(resource cvsclient, string module, string path[, string saveto[, string revision]])" returns="mixed" doc="Retrieve specified lt revision gt can also be tag or&#10;branch of filename referred to by lt path gt in" ilk="function" src="cvsclient.c"/>
      <scope name="cvsclient_log" signature="cvsclient_log(resource cvsclient, string module, string filepath[, string revision])" returns="string" doc="Retrieve log message for a particular revision" ilk="function" src="cvsclient.c"/>
      <scope name="gnupg_init" signature="gnupg_init()" returns="resource" doc="inits gnupg and returns a resource" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_setarmor" signature="gnupg_setarmor(int armor)" returns="bool" doc="turn on off armor mode off gt on" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_seterrormode" signature="gnupg_seterrormode(int errormde)" returns="bool" doc="" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_setsignmode" signature="gnupg_setsignmode(int signmode)" returns="bool" doc="sets the mode for signing operations" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_geterror" signature="gnupg_geterror(void)" returns="string" doc="returns the last errormessage" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_getprotocol" signature="gnupg_getprotocol(void)" returns="int" doc="returns the currently used pgp-protocol atm only&#10;OpenPGP is supported" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_keyinfo" signature="gnupg_keyinfo(string pattern)" returns="array" doc="returns an array with informations about all keys that&#10;matches the given pattern" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_addsignkey" signature="gnupg_addsignkey(string key)" returns="bool" doc="" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_adddecryptkey" signature="gnupg_adddecryptkey(string key)" returns="bool" doc="" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_addencryptkey" signature="gnupg_addencryptkey(string key)" returns="bool" doc="" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_clearsignerkeys" signature="gnupg_clearsignerkeys(void)" returns="bool" doc="removes all keys which are set for signing" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_clearencryptkeys" signature="gnupg_clearencryptkeys(void)" returns="bool" doc="removes all keys which are set for encryption" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_sign" signature="gnupg_sign(string text)" returns="string" doc="signs the given test with the key which was set with&#10;setsignerkey before and returns the signed text the&#10;signmode" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_encrypt" signature="gnupg_encrypt(string text)" returns="string" doc="encrypts the given text with the key which was set with&#10;setencryptkey before and returns the encrypted text" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_encrypt_sign" signature="gnupg_encrypt_sign(string text)" returns="string" doc="encrypts and signs the given text with the keys which&#10;weres set with setencryptkey and setsignkey before and&#10;returns the" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_verify" signature="gnupg_verify(string text, string signature [, string &amp;plaintext])" returns="array" doc="verifies the given clearsigned text and returns&#10;information about the result in an array" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_decrypt" signature="gnupg_decrypt(string enctext)" returns="string" doc="decrypts the given enctext" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_decryptverify" signature="gnupg_decryptverify(string enctext, string &amp;plaintext)" returns="string" doc="decrypts the given enctext" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_export" signature="gnupg_export(string pattern)" returns="string" doc="exports the first public key which matches against the&#10;given pattern" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_import" signature="gnupg_import(string key)" returns="array" doc="imports the given key and returns a status-array" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_deletekey" signature="gnupg_deletekey(string key)" returns="book" doc="deletes a key from the keyring" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_gettrustlist" signature="gnupg_gettrustlist(string pattern)" returns="array" doc="searching for trust items which match PATTERN" ilk="function" src="gnupg.c"/>
      <scope name="gnupg_listsignatures" signature="gnupg_listsignatures(string keyid)" returns="array" doc="" ilk="function" src="gnupg.c"/>
      <scope name="cyrus_connect" signature="cyrus_connect([ string host [, string port [, int flags]]])" returns="resource" doc="Connect to a Cyrus IMAP server" ilk="function" src="cyrus.c"/>
      <scope name="cyrus_authenticate" signature="cyrus_authenticate( resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf]]]]])" returns="bool" doc="Authenticate agaings a Cyrus IMAP server" ilk="function" src="cyrus.c"/>
      <scope name="cyrus_bind" signature="cyrus_bind( resource connection, array callbacks)" returns="bool" doc="Bind callbacks to a Cyrus IMAP connection" ilk="function" src="cyrus.c"/>
      <scope name="cyrus_unbind" signature="cyrus_unbind( resource connection, string trigger_name)" returns="bool" doc="Unbind" ilk="function" src="cyrus.c"/>
      <scope name="cyrus_query" signature="cyrus_query( resource connection, string query)" returns="bool" doc="Send a query to a Cyrus IMAP server" ilk="function" src="cyrus.c"/>
      <scope name="cyrus_close" signature="cyrus_close( resource connection)" returns="bool" doc="Close connection to a cyrus server" ilk="function" src="cyrus.c"/>
      <scope name="http_date" signature="http_date([int timestamp])" returns="string" doc="Compose a valid HTTP date regarding RFC looking like&#10;quot Wed Dec GMT quot Accepts an optional unix&#10;timestamp as" ilk="function" src="http_functions.c"/>
      <scope name="http_build_url" signature="http_build_url([mixed url[, mixed parts[, int flags = HTTP_URL_REPLACE[, array &amp;new_url]]]])" returns="string" doc="Build an URL Expexts part s of an URL as first&#10;parameter in form of a string or assoziative array" ilk="function" src="http_functions.c"/>
      <scope name="http_build_str" signature="http_build_str(array query [, string prefix[, string arg_separator]])" returns="string" doc="Opponent to parse str Expects an array as first&#10;argument which represents the parts of the query&#10;string to build" ilk="function" src="http_functions.c"/>
      <scope name="http_negotiate_language" signature="http_negotiate_language(array supported[, array &amp;result])" returns="string" doc="This function negotiates the clients preferred language&#10;based on its Accept-Language HTTP header The qualifier&#10;is recognized and languages without" ilk="function" src="http_functions.c"/>
      <scope name="http_negotiate_charset" signature="http_negotiate_charset(array supported[, array &amp;result])" returns="string" doc="This function negotiates the clients preferred charset&#10;based on its Accept-Charset HTTP header The qualifier&#10;is recognized and charsets without" ilk="function" src="http_functions.c"/>
      <scope name="http_negotiate_ctype" signature="http_negotiate_ctype(array supported[, array &amp;result])" returns="string" doc="This function negotiates the clients preferred content&#10;type based on its Accept HTTP header The qualifier is&#10;recognized and content" ilk="function" src="http_functions.c"/>
      <scope name="http_send_status" signature="http_send_status(int status)" returns="bool" doc="Send HTTP status code Expects an HTTP status code as&#10;parameter Returns TRUE on success or FALSE on failure" ilk="function" src="http_functions.c"/>
      <scope name="http_send_last_modified" signature="http_send_last_modified([int timestamp])" returns="bool" doc="Send a quot Last-Modified quot header with a valid HTTP&#10;date Accepts a unix timestamp converts it to a valid" ilk="function" src="http_functions.c"/>
      <scope name="http_send_content_type" signature="http_send_content_type([string content_type = 'application/x-octetstream'])" returns="bool" doc="Send the Content-Type of the sent entity This is&#10;particularly important if you use the http send API&#10;Accepts an" ilk="function" src="http_functions.c"/>
      <scope name="http_send_content_disposition" signature="http_send_content_disposition(string filename[, bool inline = false])" returns="bool" doc="Send the Content-Disposition The Content-Disposition&#10;header is very useful if the data actually sent came&#10;from a file or something" ilk="function" src="http_functions.c"/>
      <scope name="http_match_modified" signature="http_match_modified([int timestamp[, bool for_range = false]])" returns="bool" doc="Matches the given unix timestamp against the clients&#10;quot If-Modified-Since quot resp quot&#10;If-Unmodified-Since quot HTTP headers Accepts a unix" ilk="function" src="http_functions.c"/>
      <scope name="http_match_etag" signature="http_match_etag(string etag[, bool for_range = false])" returns="bool" doc="Matches the given ETag against the clients quot&#10;If-Match quot resp quot If-None-Match quot HTTP&#10;headers Expects a string parameter" ilk="function" src="http_functions.c"/>
      <scope name="http_cache_last_modified" signature="http_cache_last_modified([int timestamp_or_expires]])" returns="bool" doc="Attempts to cache the sent entity by its last&#10;modification date Accepts a unix timestamp as&#10;parameter which is handled" ilk="function" src="http_functions.c"/>
      <scope name="http_cache_etag" signature="http_cache_etag([string etag])" returns="bool" doc="Attempts to cache the sent entity by its ETag either&#10;supplied or generated by the hash algorithm specified&#10;by the" ilk="function" src="http_functions.c"/>
      <scope name="ob_etaghandler" signature="ob_etaghandler(string data, int mode)" returns="string" doc="For use with ob start Output buffer handler generating&#10;an ETag with the hash algorithm specified with the INI&#10;setting" ilk="function" src="http_functions.c"/>
      <scope name="http_throttle" signature="http_throttle(double sec[, int bytes = 40960])" returns="void" doc="Sets the throttle delay and send buffer size for use&#10;with http send API Provides a basic throttling&#10;mechanism which" ilk="function" src="http_functions.c"/>
      <scope name="http_redirect" signature="http_redirect([string url[, array params[, bool session = false[, int status = 302]]]])" returns="void" doc="Redirect to the given url The supplied url will be&#10;expanded with http build url the params array will be" ilk="function" src="http_functions.c"/>
      <scope name="http_send_data" signature="http_send_data(string data)" returns="bool" doc="Sends raw data with support for multiple range requests&#10;Returns TRUE on success or FALSE on failure" ilk="function" src="http_functions.c"/>
      <scope name="http_send_file" signature="http_send_file(string file)" returns="bool" doc="Sends a file with support for multiple range requests&#10;Expects a string parameter referencing the file to&#10;send Returns TRUE" ilk="function" src="http_functions.c"/>
      <scope name="http_send_stream" signature="http_send_stream(resource stream)" returns="bool" doc="Sends an already opened stream with support for&#10;multiple range requests Expects a resource parameter&#10;referencing the stream to read" ilk="function" src="http_functions.c"/>
      <scope name="http_chunked_decode" signature="http_chunked_decode(string encoded)" returns="string" doc="Decodes a string that was HTTP-chunked encoded Expects&#10;a chunked encoded string as parameter Returns the&#10;decoded string on success" ilk="function" src="http_functions.c"/>
      <scope name="http_parse_message" signature="http_parse_message(string message)" returns="object" doc="Parses a http message s into a simple recursive object&#10;structure Expects a string parameter containing a&#10;single HTTP message" ilk="function" src="http_functions.c"/>
      <scope name="http_parse_headers" signature="http_parse_headers(string header)" returns="array" doc="Parses HTTP headers into an associative array Expects a&#10;string parameter containing HTTP headers Returns an&#10;array on success or" ilk="function" src="http_functions.c"/>
      <scope name="http_parse_cookie" signature="http_parse_cookie(string cookie[, int flags[, array allowed_extras]])" returns="object" doc="Parses HTTP cookies like sent in a response into a&#10;struct Expects a string as parameter containing the&#10;value of" ilk="function" src="http_functions.c"/>
      <scope name="http_build_cookie" signature="http_build_cookie(array cookie)" returns="string" doc="Build a cookie string from an array object like&#10;returned by http parse cookie" ilk="function" src="http_functions.c"/>
      <scope name="http_parse_params" signature="http_parse_params(string param[, int flags = HTTP_PARAMS_DEFAULT])" returns="object" doc="Parse parameter list" ilk="function" src="http_functions.c"/>
      <scope name="http_get_request_headers" signature="http_get_request_headers(void)" returns="array" doc="Get a list of incoming HTTP headers Returns an&#10;associative array of incoming request headers" ilk="function" src="http_functions.c"/>
      <scope name="http_get_request_body" signature="http_get_request_body(void)" returns="string" doc="Get the raw request body e g POST or PUT data This&#10;function can not be used after http get" ilk="function" src="http_functions.c"/>
      <scope name="http_get_request_body_stream" signature="http_get_request_body_stream(void)" returns="resource" doc="Create a stream to read the raw request body e g POST&#10;or PUT data This function can only be" ilk="function" src="http_functions.c"/>
      <scope name="http_match_request_header" signature="http_match_request_header(string header, string value[, bool match_case = false])" returns="bool" doc="Match an incoming HTTP header Expects two string&#10;parameters representing the header name&#10;case-insensitive and the header value that should" ilk="function" src="http_functions.c"/>
      <scope name="http_head" signature="http_head(string url[, array options[, array &amp;info]])" returns="string" doc="Performs an HTTP HEAD request on the supplied url See&#10;http get for a full list of available parameters and" ilk="function" src="http_functions.c"/>
      <scope name="http_post_data" signature="http_post_data(string url, string data[, array options[, array &amp;info]])" returns="string" doc="Performs an HTTP POST request on the supplied url&#10;Expects a string as second parameter containing the&#10;pre-encoded post data" ilk="function" src="http_functions.c"/>
      <scope name="http_post_fields" signature="http_post_fields(string url, array data[, array files[, array options[, array &amp;info]]])" returns="string" doc="Performs an HTTP POST request on the supplied url&#10;Expects an associative array as second parameter which&#10;will be www-form-urlencoded" ilk="function" src="http_functions.c"/>
      <scope name="http_put_file" signature="http_put_file(string url, string file[, array options[, array &amp;info]])" returns="string" doc="Performs an HTTP PUT request on the supplied url&#10;Expects the second parameter to be a string&#10;referencing the file" ilk="function" src="http_functions.c"/>
      <scope name="http_put_stream" signature="http_put_stream(string url, resource stream[, array options[, array &amp;info]])" returns="string" doc="Performs an HTTP PUT request on the supplied url&#10;Expects the second parameter to be a resource&#10;referencing an already" ilk="function" src="http_functions.c"/>
      <scope name="http_put_data" signature="http_put_data(string url, string data[, array options[, array &amp;info]])" returns="string" doc="Performs an HTTP PUT request on the supplied url&#10;Expects the second parameter to be a string containing&#10;the data" ilk="function" src="http_functions.c"/>
      <scope name="http_request" signature="http_request(int method, string url[, string body[, array options[, array &amp;info]]])" returns="string" doc="Performs a custom HTTP request on the supplied url&#10;Expects the first parameter to be an integer&#10;specifying the request" ilk="function" src="http_functions.c"/>
      <scope name="http_request_body_encode" signature="http_request_body_encode(array fields, array files)" returns="string" doc="Generate x-www-form-urlencoded resp form-data encoded&#10;request body Returns encoded string on success or&#10;FALSE on failure" ilk="function" src="http_functions.c"/>
      <scope name="http_request_method_register" signature="http_request_method_register(string method)" returns="int" doc="Register a custom request method Expects a string&#10;parameter containing the request method name to&#10;register Returns the ID of" ilk="function" src="http_functions.c"/>
      <scope name="http_request_method_unregister" signature="http_request_method_unregister(mixed method)" returns="bool" doc="Unregister a previously registered custom request&#10;method Expects either the request method name or ID&#10;Returns TRUE on success or" ilk="function" src="http_functions.c"/>
      <scope name="http_request_method_exists" signature="http_request_method_exists(mixed method)" returns="int" doc="Check if a request method is registered or available by&#10;default Expects either the request method name or ID as" ilk="function" src="http_functions.c"/>
      <scope name="http_request_method_name" signature="http_request_method_name(int method)" returns="string" doc="Get the literal string representation of a standard or&#10;registered request method Expects the request method&#10;ID as parameter Returns" ilk="function" src="http_functions.c"/>
      <scope name="http_inflate" signature="http_inflate(string data)" returns="string" doc="Decompress data compressed with either gzip deflate AKA&#10;zlib or raw deflate encoding Expects a string as&#10;parameter containing the" ilk="function" src="http_functions.c"/>
      <scope name="ob_deflatehandler" signature="ob_deflatehandler(string data, int mode)" returns="string" doc="For use with ob start The deflate output buffer handler&#10;can only be used once It conflicts with ob gzhandler" ilk="function" src="http_functions.c"/>
      <scope name="ob_inflatehandler" signature="ob_inflatehandler(string data, int mode)" returns="string" doc="For use with ob start Same restrictions as with ob&#10;deflatehandler apply" ilk="function" src="http_functions.c"/>
      <scope name="uuid_create" signature="uuid_create([int type])" returns="string" doc="Create a UUID" ilk="function" src="uuid.c"/>
      <scope name="uuid_compare" signature="uuid_compare(string uuid1, string uuid2)" returns="int" doc="Compare two UUIDs" ilk="function" src="uuid.c"/>
      <scope name="uuid_is_null" signature="uuid_is_null(string uuid)" returns="bool" doc="Check for NULL UUID" ilk="function" src="uuid.c"/>
      <scope name="uuid_is_valid" signature="uuid_is_valid(string uuid)" returns="bool" doc="Validate UUID" ilk="function" src="uuid.c"/>
      <scope name="uuid_variant" signature="uuid_variant(string uuid)" returns="int" doc="Get UUID variant" ilk="function" src="uuid.c"/>
      <scope name="uuid_type" signature="uuid_type(string uuid)" returns="int" doc="Get UUID type" ilk="function" src="uuid.c"/>
      <scope name="uuid_time" signature="uuid_time(string uuid)" returns="int" doc="Get UUID creation time as UNIX timestamp" ilk="function" src="uuid.c"/>
      <scope name="uuid_mac" signature="uuid_mac(string uuid)" returns="string" doc="Get UUID creator network MAC address" ilk="function" src="uuid.c"/>
      <scope name="crack_opendict" signature="crack_opendict(string dictionary)" returns="resource" doc="Opens a new cracklib dictionary" ilk="function" src="crack.c"/>
      <scope name="crack_closedict" signature="crack_closedict([resource dictionary])" returns="bool" doc="Closes an open cracklib dictionary" ilk="function" src="crack.c"/>
      <scope name="crack_check" signature="crack_check(string password [, string username [, string gecos [, resource dictionary]]])" returns="bool" doc="Performs an obscure check with the given password" ilk="function" src="crack.c"/>
      <scope name="crack_getlastmessage" signature="crack_getlastmessage(void)" returns="string" doc="Returns the message from the last obscure check" ilk="function" src="crack.c"/>
      <scope name="colorer_open" signature="colorer_open()" returns="object" doc="Creates a colorer object" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_highlight_string" signature="colorer_highlight_string(string str [, string type='' [, bool ret=false]])" returns="string" doc="Highlights code and prints or returns output" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_highlight_file" signature="colorer_highlight_file(string filename [, string type='' [, bool ret=false]])" returns="string" doc="Highlights contents of a file and prints or returns&#10;output" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_direct_markup" signature="colorer_direct_markup([bool value])" returns="bool" doc="Returns current value of direct markup flag and&#10;optionally sets new value" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_hrd_name" signature="colorer_hrd_name([string hrd_name])" returns="string" doc="Returns current HRD setting and optionally sets a new&#10;value" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_type" signature="colorer_type([string type])" returns="string" doc="Returns current file type and optionally sets new value" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_list_types" signature="colorer_list_types(void)" returns="array" doc="Return list of suppported syntaxes" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_set_input_encoding" signature="colorer_set_input_encoding(string encoding)" returns="bool" doc="Set incoding of source text" ilk="function" src="colorer.cpp"/>
      <scope name="colorer_set_output_encoding" signature="colorer_set_output_encoding(string encoding)" returns="bool" doc="Set output incoding" ilk="function" src="colorer.cpp"/>
      <scope name="dazuko_module_loaded" signature="dazuko_module_loaded(void)" returns="bool" doc="Check whether dazuko kernel module is accessable Return&#10;true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_fetch_result" signature="dazuko_fetch_result(resource r_id)" returns="array" doc="Fetch a dazuko result resource return array on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_fetch_thread" signature="dazuko_fetch_thread(resource t_id)" returns="array" doc="Fetch a dazuko thread resource return result array on&#10;success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_flush_result" signature="dazuko_flush_result(resource r_id)" returns="bool" doc="Flush and free a dazuko result resource return true on&#10;success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_register" signature="dazuko_register(string group_name, string access_mode)" returns="bool" doc="Register with dazuko using group group name and&#10;accessmode access mode This is a single threaded API" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_unregister" signature="dazuko_unregister(void)" returns="bool" doc="Unregister single threaded dazuko API This will close&#10;the single threaded dazuko connection" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_set_accessmask" signature="dazuko_set_accessmask(long aceessMask)" returns="bool" doc="SINGLE THREADED Set the dazuko acccess mask in single&#10;threaded mode This controls dazuko's event-listening&#10;behaviour" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_include_path" signature="dazuko_include_path(string addpath)" returns="bool" doc="SINGLE THREADED Add a path to the dazuko path watching&#10;list return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_exclude_path" signature="dazuko_exclude_path(string addpath)" returns="bool" doc="SINGLE THREADED Add a path to dazuko's list of paths to&#10;exclude return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_remove_paths" signature="dazuko_remove_paths(void)" returns="bool" doc="SINGLE THREADED Remove all paths from dazuko's include&#10;and exclude lists return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_get_access" signature="dazuko_get_access(void)" returns="resource" doc="SINGLE THREADED Watch events in the include paths using&#10;previously defined access mask Register new event as&#10;result resource and" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_return_access" signature="dazuko_return_access(resource r_id, long deny_access)" returns="bool" doc="SINGLE THREADED Controls whether dazuko should tell the&#10;kernel to deny access or not If dazuko was opened in&#10;read" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_register" signature="dazuko_thread_register(string group_name, string access_mode)" returns="resource" doc="Register a new dazuko thread and return a thread&#10;resource on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_unregister" signature="dazuko_thread_unregister(resource t_id)" returns="bool" doc="Unregister a dazuko thread 't id' and return true on&#10;success dazuko thread unregister is also called from&#10;the destructor" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_set_accessmask" signature="dazuko_thread_set_accessmask(resource t_id, long access_mask)" returns="bool" doc="Set the access mask for a dazuko thread 't id' and&#10;return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_include_path" signature="dazuko_thread_include_path(resource t_id, string addpath)" returns="bool" doc="Assign a new path to be included to thread 't id' and&#10;return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_exclue_path" signature="dazuko_thread_exclue_path(resource t_id, string addpath)" returns="bool" doc="Assign a new path to be excluded from thread 't id' and&#10;return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_remove_paths" signature="dazuko_thread_remove_paths(resource t_id)" returns="bool" doc="Remove all included and excluded paths from thread 't&#10;id' Return true on success" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_get_access" signature="dazuko_thread_get_access(resource t_id)" returns="resource" doc="Listen for new events in thread 't id' return new&#10;events as dazuko result resource" ilk="function" src="dazuko.c"/>
      <scope name="dazuko_thread_return_access" signature="dazuko_thread_return_access(resource t_id, resource r_id, long deny_access)" returns="bool" doc="Tell the kernel whether to deny or permit access for&#10;thread 't id' on result 'r id' If dazuko thread" ilk="function" src="dazuko.c"/>
      <scope name="Tk" signature="Tk([string path_to_elf])" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="p" signature="p(...)" returns="wmIconbitma" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_Callback" signature="Tk_Callback(string function_name, [mixed param[...]])" returns="string" doc="" ilk="function" src="tk.c"/>
      <scope name="Obj-&gt;getID" signature="Obj-&gt;getID()" returns="string" doc="return name of widget class" ilk="function" src="tk.c"/>
      <scope name="Tk_Shell" signature="Tk_Shell([...])" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_Addslashes" signature="Tk_Addslashes(string buffer)" returns="string" doc="" ilk="function" src="tk.c"/>
      <scope name="Tcl_ListToArray" signature="Tcl_ListToArray(string tcl_list)" returns="array" doc="" ilk="function" src="tk.c"/>
      <scope name="e" signature="e([int level [, int right_level]])" returns="xmms_volum" doc="" ilk="function" src="xmms.c"/>
      <scope name="Tk_Bisque" signature="Tk_Bisque(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_ChooseColor" signature="Tk_ChooseColor(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_ChooseDirectory" signature="Tk_ChooseDirectory(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_Dialog" signature="Tk_Dialog(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="d" signature="d(mixed songs)" returns="xmms_ad" doc="Add entries to playlist" ilk="function" src="xmms.c"/>
      <scope name="Tk_EventInfo" signature="Tk_EventInfo(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_FocusFollowsMouse" signature="Tk_FocusFollowsMouse(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_FocusNext" signature="Tk_FocusNext(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_FocusPrev" signature="Tk_FocusPrev(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_FontFamilies" signature="Tk_FontFamilies(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_FontNames" signature="Tk_FontNames(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_GetOpenFile" signature="Tk_GetOpenFile(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_GetSaveFile" signature="Tk_GetSaveFile(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_ImageNames" signature="Tk_ImageNames(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_ImageTypes" signature="Tk_ImageTypes(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_MessageBox" signature="Tk_MessageBox(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="r" signature="r(void)" returns="xmms_clea" doc="Clear playlist" ilk="function" src="xmms.c"/>
      <scope name="Tk_OptionGet" signature="Tk_OptionGet(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_OptionMenu" signature="Tk_OptionMenu(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_OptionReadFile" signature="Tk_OptionReadFile(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_Popup" signature="Tk_Popup(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="g" signature="g(...)" returns="dta" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_SelectionGet" signature="Tk_SelectionGet(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_SelectionHandle" signature="Tk_SelectionHandle(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_SelectionOwn" signature="Tk_SelectionOwn(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_Send" signature="Tk_Send(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_SetPalette" signature="Tk_SetPalette(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Tk_UseInputMethods" signature="Tk_UseInputMethods(...)" returns="mixed" doc="" ilk="function" src="tk.c"/>
      <scope name="Bitmap" signature="Bitmap(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Button" signature="Button(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Canvas" signature="Canvas(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Checkbutton" signature="Checkbutton(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Entry" signature="Entry(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Font" signature="Font(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Frame" signature="Frame(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Label" signature="Label(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Labelframe" signature="Labelframe(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Listbox" signature="Listbox(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Menu" signature="Menu(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Menubutton" signature="Menubutton(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Message" signature="Message(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Panedwindow" signature="Panedwindow(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Photo" signature="Photo(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Radiobutton" signature="Radiobutton(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Scale" signature="Scale(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Scrollbar" signature="Scrollbar(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Spinbox" signature="Spinbox(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Text" signature="Text(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Textcopy" signature="Textcopy(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Textcut" signature="Textcut(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Textpaste" signature="Textpaste(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="Toplevel" signature="Toplevel(...)" returns="new" doc="" ilk="function" src="tk.c"/>
      <scope name="t" signature="t( resource module, string type, string name[, int lang] )" returns="res_ge" doc="Get a resource lang is experimental is neutral is user&#10;default is system default see winnt h LANG amp SUBLANG" ilk="function" src="res.c"/>
      <scope name="h" signature="h(...)" returns="searc" doc="" ilk="function" src="tk.c"/>
      <scope name="l" signature="l(...)" returns="yviewScrol" doc="" ilk="function" src="tk.c"/>
      <scope name="s" signature="s(...)" returns="wmColormapwindow" doc="" ilk="function" src="tk.c"/>
      <scope name="x" signature="x(...)" returns="inde" doc="" ilk="function" src="tk.c"/>
      <scope name="k" signature="k(...)" returns="wmIconmas" doc="" ilk="function" src="tk.c"/>
      <scope name="y" signature="y(...)" returns="wmIconif" doc="" ilk="function" src="tk.c"/>
      <scope name="n" signature="n([string skin_file])" returns="xmms_ski" doc="" ilk="function" src="xmms.c"/>
      <scope name="a" signature="a(...)" returns="delt" doc="" ilk="function" src="tk.c"/>
      <scope name="o" signature="o(...)" returns="yviewMovet" doc="" ilk="function" src="tk.c"/>
      <scope name="b" signature="b(...)" returns="gra" doc="" ilk="function" src="tk.c"/>
      <scope name="m" signature="m(...)" returns="wmSizefro" doc="" ilk="function" src="tk.c"/>
      <scope name="w" signature="w(...)" returns="yvie" doc="" ilk="function" src="tk.c"/>
      <scope name="ncurses_addch" signature="ncurses_addch(int ch)" returns="int" doc="Adds character at current position and advance cursor" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_waddch" signature="ncurses_waddch(resource window, int ch)" returns="int" doc="Adds character at current position in a window and&#10;advance cursor" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_color_set" signature="ncurses_color_set(int pair)" returns="int" doc="Sets fore- and background color" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_delwin" signature="ncurses_delwin(resource window)" returns="bool" doc="Deletes a ncurses window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_end" signature="ncurses_end(void)" returns="int" doc="Stops using ncurses clean up the screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_getch" signature="ncurses_getch(void)" returns="int" doc="Reads a character from keyboard" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_has_colors" signature="ncurses_has_colors(void)" returns="bool" doc="Checks if terminal has colors" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_init" signature="ncurses_init(void)" returns="int" doc="Initializes ncurses" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_init_pair" signature="ncurses_init_pair(int pair, int fg, int bg)" returns="int" doc="Allocates a color pair" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_move" signature="ncurses_move(int y, int x)" returns="int" doc="Moves output position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_newpad" signature="ncurses_newpad(int rows, int cols)" returns="resource" doc="Creates a new pad window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_prefresh" signature="ncurses_prefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)" returns="int" doc="Copys a region from a pad into the virtual screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_pnoutrefresh" signature="ncurses_pnoutrefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)" returns="int" doc="Copys a region from a pad into the virtual screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_newwin" signature="ncurses_newwin(int rows, int cols, int y, int x)" returns="int" doc="Creates a new window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_refresh" signature="ncurses_refresh(int ch)" returns="int" doc="Refresh screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_start_color" signature="ncurses_start_color(void)" returns="int" doc="Starts using colors" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_standout" signature="ncurses_standout(void)" returns="int" doc="Starts using 'standout' attribute" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_standend" signature="ncurses_standend(void)" returns="int" doc="Stops using 'standout' attribute" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_baudrate" signature="ncurses_baudrate(void)" returns="int" doc="Returns baudrate of terminal" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_beep" signature="ncurses_beep(void)" returns="int" doc="Let the terminal beep" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_can_change_color" signature="ncurses_can_change_color(void)" returns="bool" doc="Checks if we can change terminals colors" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_cbreak" signature="ncurses_cbreak(void)" returns="bool" doc="Switches of input buffering" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_clear" signature="ncurses_clear(void)" returns="bool" doc="Clears screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_clrtobot" signature="ncurses_clrtobot(void)" returns="bool" doc="Clears screen from current position to bottom" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_clrtoeol" signature="ncurses_clrtoeol(void)" returns="bool" doc="Clears screen from current position to end of line" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_reset_prog_mode" signature="ncurses_reset_prog_mode(void)" returns="int" doc="Resets the prog mode saved by def prog mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_reset_shell_mode" signature="ncurses_reset_shell_mode(void)" returns="int" doc="Resets the shell mode saved by def shell mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_def_prog_mode" signature="ncurses_def_prog_mode(void)" returns="int" doc="Saves terminals program mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_def_shell_mode" signature="ncurses_def_shell_mode(void)" returns="int" doc="Saves terminal shell mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_delch" signature="ncurses_delch(void)" returns="int" doc="Deletes character at current position move rest of line&#10;left" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_deleteln" signature="ncurses_deleteln(void)" returns="int" doc="Deletes line at current position move rest of screen up" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_doupdate" signature="ncurses_doupdate(void)" returns="int" doc="Writes all prepared refreshes to terminal" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_echo" signature="ncurses_echo(void)" returns="int" doc="Activates keyboard input echo" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_erase" signature="ncurses_erase(void)" returns="int" doc="Erases terminal screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_erasechar" signature="ncurses_erasechar(void)" returns="string" doc="Returns current erase character" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_flash" signature="ncurses_flash(void)" returns="int" doc="Flashes terminal screen visual bell" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_flushinp" signature="ncurses_flushinp(void)" returns="int" doc="Flushes keyboard input buffer" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_has_ic" signature="ncurses_has_ic(void)" returns="int" doc="Checks for insert- and delete-capabilities" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_has_il" signature="ncurses_has_il(void)" returns="int" doc="Checks for line insert- and delete-capabilities" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_inch" signature="ncurses_inch(void)" returns="string" doc="Gets character and attribute at current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_insertln" signature="ncurses_insertln(void)" returns="int" doc="Inserts a line move rest of screen down" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_isendwin" signature="ncurses_isendwin(void)" returns="int" doc="Ncurses is in endwin mode normal screen output may be&#10;performed" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_killchar" signature="ncurses_killchar(void)" returns="string" doc="Returns current line kill character" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_nl" signature="ncurses_nl(void)" returns="int" doc="Translates newline and carriage return line feed" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_nocbreak" signature="ncurses_nocbreak(void)" returns="int" doc="Switches terminal to cooked mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_noecho" signature="ncurses_noecho(void)" returns="int" doc="Switches off keyboard input echo" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_nonl" signature="ncurses_nonl(void)" returns="int" doc="Do not ranslate newline and carriage return line feed" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_noraw" signature="ncurses_noraw(void)" returns="bool" doc="Switches terminal out of raw mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_raw" signature="ncurses_raw(void)" returns="int" doc="Switches terminal into raw mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_meta" signature="ncurses_meta(resource window, bool 8bit)" returns="int" doc="Enables Disable -bit meta key information" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_werase" signature="ncurses_werase(resource window)" returns="int" doc="Erase window contents" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_resetty" signature="ncurses_resetty(void)" returns="int" doc="Restores saved terminal state" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_savetty" signature="ncurses_savetty(void)" returns="int" doc="Saves terminal state" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_termattrs" signature="ncurses_termattrs(void)" returns="int" doc="Returns a logical OR of all attribute flags supported&#10;by terminal" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_use_default_colors" signature="ncurses_use_default_colors(void)" returns="int" doc="Assigns terminal default colors to color id -" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_attr" signature="ncurses_slk_attr(void)" returns="int" doc="Returns current soft label keys attribute" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_clear" signature="ncurses_slk_clear(void)" returns="int" doc="Clears soft label keys from screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_noutrefresh" signature="ncurses_slk_noutrefresh(void)" returns="int" doc="Copies soft label keys to virtual screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_refresh" signature="ncurses_slk_refresh(void)" returns="int" doc="Copies soft label keys to screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_restore" signature="ncurses_slk_restore(void)" returns="int" doc="Restores soft label keys" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_touch" signature="ncurses_slk_touch(void)" returns="int" doc="Forces output when ncurses slk noutrefresh is performed" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_set" signature="ncurses_slk_set(int labelnr, string label, int format)" returns="bool" doc="Sets function key labels" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_attroff" signature="ncurses_attroff(int attributes)" returns="int" doc="Turns off the given attributes" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_attron" signature="ncurses_attron(int attributes)" returns="int" doc="Turns on the given attributes" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_attrset" signature="ncurses_attrset(int attributes)" returns="int" doc="Sets given attributes" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_bkgd" signature="ncurses_bkgd(int attrchar)" returns="int" doc="Sets background property for terminal screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_curs_set" signature="ncurses_curs_set(int visibility)" returns="int" doc="Sets cursor state" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_delay_output" signature="ncurses_delay_output(int milliseconds)" returns="int" doc="Delays output on terminal using padding characters" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_echochar" signature="ncurses_echochar(int character)" returns="int" doc="Single character output including refresh" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_halfdelay" signature="ncurses_halfdelay(int tenth)" returns="int" doc="Puts terminal into halfdelay mode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_has_key" signature="ncurses_has_key(int keycode)" returns="int" doc="Checks for presence of a function key on terminal&#10;keyboard" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_insch" signature="ncurses_insch(int character)" returns="int" doc="Inserts character moving rest of line including&#10;character at current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_insdelln" signature="ncurses_insdelln(int count)" returns="int" doc="Inserts lines before current line scrolling down&#10;negative numbers delete and scroll up" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mouseinterval" signature="ncurses_mouseinterval(int milliseconds)" returns="int" doc="Sets timeout for mouse button clicks" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_napms" signature="ncurses_napms(int milliseconds)" returns="int" doc="Sleep" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_scrl" signature="ncurses_scrl(int count)" returns="int" doc="Scrolls window content up or down without changing&#10;current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_attroff" signature="ncurses_slk_attroff(int intarg)" returns="int" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_attron" signature="ncurses_slk_attron(int intarg)" returns="int" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_attrset" signature="ncurses_slk_attrset(int intarg)" returns="int" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_color" signature="ncurses_slk_color(int intarg)" returns="int" doc="Sets color for soft label keys" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_slk_init" signature="ncurses_slk_init(int intarg)" returns="int" doc="Inits soft label keys" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_typeahead" signature="ncurses_typeahead(int fd)" returns="int" doc="Specifys different filedescriptor for typeahead&#10;checking" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_ungetch" signature="ncurses_ungetch(int keycode)" returns="int" doc="Puts a character back into the input stream" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_vidattr" signature="ncurses_vidattr(int intarg)" returns="int" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_use_extended_names" signature="ncurses_use_extended_names(bool flag)" returns="int" doc="Controls use of extended names in terminfo descriptions" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_bkgdset" signature="ncurses_bkgdset(int attrchar)" returns="void" doc="Controls screen background" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_filter" signature="ncurses_filter(void)" returns="void" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_noqiflush" signature="ncurses_noqiflush(void)" returns="int" doc="Do not flush on signal characters" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_qiflush" signature="ncurses_qiflush(void)" returns="void" doc="Flushes on signal characters" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_timeout" signature="ncurses_timeout(int millisec)" returns="void" doc="Sets timeout for special key sequences" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_use_env" signature="ncurses_use_env(int flag)" returns="void" doc="Controls use of environment information about terminal&#10;size" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_addstr" signature="ncurses_addstr(string text)" returns="int" doc="Outputs text at current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_putp" signature="ncurses_putp(string text)" returns="int" doc="" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_scr_dump" signature="ncurses_scr_dump(string filename)" returns="int" doc="Dumps screen content to file" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_scr_init" signature="ncurses_scr_init(string filename)" returns="int" doc="Initializes screen from file dump" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_scr_restore" signature="ncurses_scr_restore(string filename)" returns="int" doc="Restores screen from file dump" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_scr_set" signature="ncurses_scr_set(string filename)" returns="int" doc="Inherits screen from file dump" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvaddch" signature="ncurses_mvaddch(int y, int x, int c)" returns="int" doc="Moves current position and add character" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvaddchnstr" signature="ncurses_mvaddchnstr(int y, int x, string s, int n)" returns="int" doc="Moves position and add attrributed string with&#10;specified length" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_addchnstr" signature="ncurses_addchnstr(string s, int n)" returns="int" doc="Adds attributed string with specified length at current&#10;position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvaddchstr" signature="ncurses_mvaddchstr(int y, int x, string s)" returns="int" doc="Moves position and add attributed string" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_addchstr" signature="ncurses_addchstr(string s)" returns="int" doc="Adds attributed string at current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvaddnstr" signature="ncurses_mvaddnstr(int y, int x, string s, int n)" returns="int" doc="Moves position and add string with specified length" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_addnstr" signature="ncurses_addnstr(string s, int n)" returns="int" doc="Adds string with specified length at current position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvaddstr" signature="ncurses_mvaddstr(int y, int x, string s)" returns="int" doc="Moves position and add string" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvdelch" signature="ncurses_mvdelch(int y, int x)" returns="int" doc="Moves position and delete character shift rest of line&#10;left" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvgetch" signature="ncurses_mvgetch(int y, int x)" returns="int" doc="Moves position and get character at new position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvinch" signature="ncurses_mvinch(int y, int x)" returns="int" doc="Moves position and get attributed character at new&#10;position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_insstr" signature="ncurses_insstr(string text)" returns="int" doc="Inserts string at current position moving rest of line&#10;right" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_instr" signature="ncurses_instr(string &amp;buffer)" returns="int" doc="Reads string from terminal screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvhline" signature="ncurses_mvhline(int y, int x, int attrchar, int n)" returns="int" doc="Sets new position and draw a horizontal line using an&#10;attributed character and max n characters long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvvline" signature="ncurses_mvvline(int y, int x, int attrchar, int n)" returns="int" doc="Sets new position and draw a vertical line using an&#10;attributed character and max n characters long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvcur" signature="ncurses_mvcur(int old_y,int old_x, int new_y, int new_x)" returns="int" doc="Moves cursor immediately" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_init_color" signature="ncurses_init_color(int color, int r, int g, int b)" returns="int" doc="Sets new RGB value for color" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_color_content" signature="ncurses_color_content(int color, int &amp;r, int &amp;g, int &amp;b)" returns="int" doc="Gets the RGB value for color" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_pair_content" signature="ncurses_pair_content(int pair, int &amp;f, int &amp;b)" returns="int" doc="Gets the RGB value for color" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_border" signature="ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)" returns="int" doc="Draws a border around the screen using attributed&#10;characters" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wborder" signature="ncurses_wborder(resource window, int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)" returns="int" doc="Draws a border around the window using attributed&#10;characters" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_assume_default_colors" signature="ncurses_assume_default_colors(int fg, int bg)" returns="int" doc="Defines default colors for color" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_define_key" signature="ncurses_define_key(string definition, int keycode)" returns="int" doc="Defines a keycode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_hline" signature="ncurses_hline(int charattr, int n)" returns="int" doc="Draws a horizontal line at current position using an&#10;attributed character and max n characters long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_vline" signature="ncurses_vline(int charattr, int n)" returns="int" doc="Draws a vertical line at current position using an&#10;attributed character and max n characters long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_whline" signature="ncurses_whline(resource window, int charattr, int n)" returns="int" doc="Draws a horizontal line in a window at current position&#10;using an attributed character and max n characters long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wvline" signature="ncurses_wvline(resource window, int charattr, int n)" returns="int" doc="Draws a vertical line in a window at current position&#10;using an attributed character and max n characters&#10;long" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_keyok" signature="ncurses_keyok(int keycode, int enable)" returns="int" doc="Enables or disable a keycode" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mvwaddstr" signature="ncurses_mvwaddstr(resource window, int y, int x, string text)" returns="int" doc="Adds string at new position in window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wrefresh" signature="ncurses_wrefresh(resource window)" returns="int" doc="Refreshes window on terminal screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_termname" signature="ncurses_termname(void)" returns="string" doc="Returns terminal name" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_longname" signature="ncurses_longname(void)" returns="string" doc="Returns terminal description" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mousemask" signature="ncurses_mousemask(int newmask, int &amp;oldmask)" returns="int" doc="Returns and sets mouse options" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_getmouse" signature="ncurses_getmouse(array &amp;mevent)" returns="bool" doc="Reads mouse event from queue The content of mevent is&#10;cleared before new data is added" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_ungetmouse" signature="ncurses_ungetmouse(array mevent)" returns="int" doc="Pushes mouse event to queue" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_mouse_trafo" signature="ncurses_mouse_trafo(int &amp;y, int &amp;x, bool toscreen)" returns="bool" doc="Transforms coordinates" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wmouse_trafo" signature="ncurses_wmouse_trafo(resource window, int &amp;y, int &amp;x, bool toscreen)" returns="bool" doc="Transforms window stdscr coordinates" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_getyx" signature="ncurses_getyx(resource window, int &amp;y, int &amp;x)" returns="void" doc="Returns the current cursor position for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_getmaxyx" signature="ncurses_getmaxyx(resource window, int &amp;y, int &amp;x)" returns="void" doc="Returns the size of a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wmove" signature="ncurses_wmove(resource window, int y, int x)" returns="int" doc="Moves windows output position" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_keypad" signature="ncurses_keypad(resource window, bool bf)" returns="int" doc="Turns keypad on or off" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wcolor_set" signature="ncurses_wcolor_set(resource window, int color_pair)" returns="int" doc="Sets windows color pairings" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wclear" signature="ncurses_wclear(resource window)" returns="int" doc="Clears window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wnoutrefresh" signature="ncurses_wnoutrefresh(resource window)" returns="int" doc="Copies window to virtual screen" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_waddstr" signature="ncurses_waddstr(resource window, string str [, int n])" returns="int" doc="Outputs text at current postion in window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wgetch" signature="ncurses_wgetch(resource window)" returns="int" doc="Reads a character from keyboard window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wattroff" signature="ncurses_wattroff(resource window, int attrs)" returns="int" doc="Turns off attributes for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wattron" signature="ncurses_wattron(resource window, int attrs)" returns="int" doc="Turns on attributes for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wattrset" signature="ncurses_wattrset(resource window, int attrs)" returns="int" doc="Set the attributes for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wstandend" signature="ncurses_wstandend(resource window)" returns="int" doc="End standout mode for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_wstandout" signature="ncurses_wstandout(resource window)" returns="int" doc="Enter standout mode for a window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_new_panel" signature="ncurses_new_panel(resource window)" returns="resource" doc="Create a new panel and associate it with window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_del_panel" signature="ncurses_del_panel(resource panel)" returns="bool" doc="Remove panel from the stack and delete it but not the&#10;associated window" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_hide_panel" signature="ncurses_hide_panel(resource panel)" returns="int" doc="Remove panel from the stack making it invisible" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_show_panel" signature="ncurses_show_panel(resource panel)" returns="int" doc="Places an invisible panel on top of the stack making it&#10;visible" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_top_panel" signature="ncurses_top_panel(resource panel)" returns="int" doc="Moves a visible panel to the top of the stack" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_bottom_panel" signature="ncurses_bottom_panel(resource panel)" returns="int" doc="Moves a visible panel to the bottom of the stack" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_move_panel" signature="ncurses_move_panel(resource panel, int startx, int starty)" returns="int" doc="Moves a panel so that it's upper-left corner is at&#10;startx starty" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_replace_panel" signature="ncurses_replace_panel(resource panel, resource window)" returns="int" doc="Replaces the window associated with panel" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_panel_above" signature="ncurses_panel_above(resource panel)" returns="resource" doc="Returns the panel above panel If panel is null returns&#10;the bottom panel in the stack" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_panel_below" signature="ncurses_panel_below(resource panel)" returns="resource" doc="Returns the panel below panel If panel is null returns&#10;the top panel in the stack" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_panel_window" signature="ncurses_panel_window(resource panel)" returns="resource" doc="Returns the window associated with panel" ilk="function" src="ncurses_functions.c"/>
      <scope name="ncurses_update_panels" signature="ncurses_update_panels(void)" returns="void" doc="Refreshes the virtual screen to reflect the relations&#10;between panels in the stack" ilk="function" src="ncurses_functions.c"/>
      <scope name="confirm_pdo_informix_compiled" signature="confirm_pdo_informix_compiled(string arg)" returns="string" doc="Return a string to confirm that the module is compiled&#10;in" ilk="function" src="pdo_informix.c"/>
      <scope name="ca_convert" signature="ca_convert(string arg, long conversion)" returns="string" doc="Return a hex or character converted string" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_open" signature="ca_open([string device])" returns="resource" doc="Open a coin acceptor device" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_init" signature="ca_init(resource fd)" returns="bool" doc="Initialize a coin acceptor by fd descriptor" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_read" signature="ca_read(resource fd)" returns="array" doc="Read from coin acceptor by fd descriptor" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_reset" signature="ca_reset(resource fd, int slot)" returns="bool" doc="Reset slot given by fd" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_lock" signature="ca_lock(resource fd)" returns="bool" doc="Reject coins" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_unlock" signature="ca_unlock(resource fd)" returns="bool" doc="Free coin acceptor" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_accept_coins" signature="ca_accept_coins(resource fd)" returns="bool" doc="Does coin acceptor accept coins -" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_prom_get" signature="ca_prom_get(resource fd, string key)" returns="string" doc="Get a specified field from prom" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_prom_set" signature="ca_prom_set(resource fd, string key, string value[, long write_mode])" returns="bool" doc="Set a specified key to value" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_command" signature="ca_command(resource fd, string command[, long delay])" returns="string" doc="Get a specified field from prom" ilk="function" src="coin_acceptor.c"/>
      <scope name="ca_close" signature="ca_close(resource fd)" returns="void" doc="Close the descriptor given by fd" ilk="function" src="coin_acceptor.c"/>
      <scope name="ssh2_shell" signature="ssh2_shell(resource session[, string term_type[, array env[, int width, int height[, int width_height_type]]]])" returns="stream" doc="Open a shell at the remote end and allocate a channel&#10;for it" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_exec" signature="ssh2_exec(resource session, string command[, string pty[, array env[, int width[, int heightp[, int width_height_type]]]]])" returns="stream" doc="Execute a command at the remote end and allocate a&#10;channel for it This function has a dirty little secret" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_scp_recv" signature="ssh2_scp_recv(resource session, string remote_file, string local_file)" returns="bool" doc="Request a file via SCP" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_scp_send" signature="ssh2_scp_send(resource session, string local_file, string remote_file[, int create_mode = 0644])" returns="stream" doc="Send a file via SCP" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_tunnel" signature="ssh2_tunnel(resource session, string host, int port)" returns="stream" doc="Tunnel to remote TCP IP host port" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_fetch_stream" signature="ssh2_fetch_stream(stream channel, int streamid)" returns="stream" doc="Fetch an extended data stream" ilk="function" src="ssh2_fopen_wrappers.c"/>
      <scope name="ssh2_sftp" signature="ssh2_sftp(resource session)" returns="resource" doc="Request the SFTP subsystem from an already connected&#10;SSH server" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_rename" signature="ssh2_sftp_rename(resource sftp, string from, string to)" returns="bool" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_unlink" signature="ssh2_sftp_unlink(resource sftp, string filename)" returns="bool" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_mkdir" signature="ssh2_sftp_mkdir(resource sftp, string filename[, int mode[, int recursive]])" returns="bool" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_rmdir" signature="ssh2_sftp_rmdir(resource sftp, string filename)" returns="bool" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_stat" signature="ssh2_sftp_stat(resource sftp, string path)" returns="array" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_lstat" signature="ssh2_sftp_lstat(resource sftp, string path)" returns="array" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_symlink" signature="ssh2_sftp_symlink(resource sftp, string target, string link)" returns="bool" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_readlink" signature="ssh2_sftp_readlink(resource sftp, string link)" returns="string" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_sftp_realpath" signature="ssh2_sftp_realpath(resource sftp, string filename)" returns="string" doc="" ilk="function" src="ssh2_sftp.c"/>
      <scope name="ssh2_connect" signature="ssh2_connect(string host[, int port[, array methods[, array callbacks]]])" returns="resource" doc="Establish a connection to a remote SSH server and&#10;return a resource on success false on error" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_methods_negotiated" signature="ssh2_methods_negotiated(resource session)" returns="array" doc="Return list of negotiaed methods" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_fingerprint" signature="ssh2_fingerprint(resource session[, int flags])" returns="string" doc="Returns a server hostkey hash from an active session&#10;Defaults to MD fingerprint encoded as ASCII hex values" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_auth_none" signature="ssh2_auth_none(resource session, string username)" returns="array" doc="Attempt quot none quot authentication returns a list of&#10;allowed methods on failed authentication false on utter&#10;failure or true" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_auth_password" signature="ssh2_auth_password(resource session, string username, string password)" returns="bool" doc="Authenticate over SSH using a plain password" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_auth_pubkey_file" signature="ssh2_auth_pubkey_file(resource session, string username, string pubkeyfile, string privkeyfile[, string passphrase])" returns="bool" doc="Authenticate using a public key" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_auth_hostbased_file" signature="ssh2_auth_hostbased_file(resource session, string username, string local_hostname, string pubkeyfile, string privkeyfile[, string passphrase[, string local_username]])" returns="bool" doc="Authenticate using a hostkey" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_forward_listen" signature="ssh2_forward_listen(resource session, int port[, string host[, long max_connections]])" returns="resource" doc="Bind a port on the remote server and listen for&#10;connections" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_forward_accept" signature="ssh2_forward_accept(resource listener[, string &amp;shost[, long &amp;sport]])" returns="stream" doc="Accept a connection created by a listener" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_poll" signature="ssh2_poll(array &amp;polldes[, int timeout])" returns="int" doc="Poll the channels listeners streams for events Returns&#10;number of descriptors which returned non-zero revents&#10;Input array should be of" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_publickey_init" signature="ssh2_publickey_init(resource connection)" returns="resource" doc="Initialize the publickey subsystem" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_publickey_add" signature="ssh2_publickey_add(resource pkey, string algoname, string blob[, bool overwrite=FALSE [,array attributes=NULL]])" returns="bool" doc="Add an additional publickey" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_publickey_remove" signature="ssh2_publickey_remove(resource pkey, string algoname, string blob)" returns="bool" doc="Remove a publickey entry" ilk="function" src="ssh2.c"/>
      <scope name="ssh2_publickey_list" signature="ssh2_publickey_list(resource pkey)" returns="array" doc="List currently installed publickey entries" ilk="function" src="ssh2.c"/>
      <scope name="close" signature="close()" returns="boolean" doc="Closes xmlreader - current frees resources until&#10;xmlTextReaderClose is fixed in libxml" ilk="function" src="php_xmlreader.c"/>
      <scope name="getAttribute" signature="getAttribute(string name)" returns="string" doc="Get value of an attribute from current element" ilk="function" src="php_xmlreader.c"/>
      <scope name="getAttributeNo" signature="getAttributeNo(int index)" returns="string" doc="Get value of an attribute at index from current element" ilk="function" src="php_xmlreader.c"/>
      <scope name="getAttributeNs" signature="getAttributeNs(string name, string namespaceURI)" returns="string" doc="Get value of a attribute via name and namespace from&#10;current element" ilk="function" src="php_xmlreader.c"/>
      <scope name="getParserProperty" signature="getParserProperty(int property)" returns="boolean" doc="Indicates wether given property one of the parser&#10;option constants is set or not on parser" ilk="function" src="php_xmlreader.c"/>
      <scope name="isValid" signature="isValid()" returns="boolean" doc="Returns boolean indicating if parsed document is valid&#10;or not Must set XMLREADER LOADDTD or XMLREADER&#10;VALIDATE parser option prior" ilk="function" src="php_xmlreader.c"/>
      <scope name="lookupNamespace" signature="lookupNamespace(string prefix)" returns="string" doc="Return namespaceURI for associated prefix on current&#10;node" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToAttribute" signature="moveToAttribute(string name)" returns="boolean" doc="Positions reader at specified attribute - Returns TRUE&#10;on success and FALSE on failure" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToAttributeNo" signature="moveToAttributeNo(int index)" returns="boolean" doc="Positions reader at attribute at spcecified index&#10;Returns TRUE on success and FALSE on failure" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToAttributeNs" signature="moveToAttributeNs(string name, string namespaceURI)" returns="boolean" doc="Positions reader at attribute spcified by name and&#10;namespaceURI Returns TRUE on success and FALSE on&#10;failure" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToElement" signature="moveToElement()" returns="boolean" doc="Moves the position of the current instance to the node&#10;that contains the current Attribute node" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToFirstAttribute" signature="moveToFirstAttribute()" returns="boolean" doc="Moves the position of the current instance to the first&#10;attribute associated with the current node" ilk="function" src="php_xmlreader.c"/>
      <scope name="moveToNextAttribute" signature="moveToNextAttribute()" returns="boolean" doc="Moves the position of the current instance to the next&#10;attribute associated with the current node" ilk="function" src="php_xmlreader.c"/>
      <scope name="read" signature="read()" returns="boolean" doc="Moves the position of the current instance to the next&#10;node in the stream" ilk="function" src="php_xmlreader.c"/>
      <scope name="next" signature="next([string localname])" returns="boolean" doc="Moves the position of the current instance to the next&#10;node in the stream" ilk="function" src="php_xmlreader.c"/>
      <scope name="open" signature="open(string URI)" returns="boolean" doc="Sets the URI that the the XMLReader will parse" ilk="function" src="php_xmlreader.c"/>
      <scope name="setParserProperty" signature="setParserProperty(int property, boolean value)" returns="boolean" doc="Sets parser property one of the parser option constants&#10;Properties must be set after open or XML and before the" ilk="function" src="php_xmlreader.c"/>
      <scope name="setRelaxNGSchemaSource" signature="setRelaxNGSchemaSource(string source)" returns="boolean" doc="Sets the string that the the XMLReader will parse" ilk="function" src="php_xmlreader.c"/>
      <scope name="XML" signature="XML(string source)" returns="boolean" doc="Sets the string that the the XMLReader will parse" ilk="function" src="php_xmlreader.c"/>
      <scope name="expand" signature="expand()" returns="boolean" doc="Moves the position of the current instance to the next&#10;node in the stream" ilk="function" src="php_xmlreader.c"/>
      <scope name="zip_open" signature="zip_open(string filename)" returns="resource" doc="Create new zip using source uri for output" ilk="function" src="php_zip.c"/>
      <scope name="zip_close" signature="zip_close(resource zip)" returns="void" doc="Close a Zip archive" ilk="function" src="php_zip.c"/>
      <scope name="zip_read" signature="zip_read(resource zip)" returns="resource" doc="Returns the next file in the archive" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_open" signature="zip_entry_open(resource zip_dp, resource zip_entry [, string mode])" returns="bool" doc="Open a Zip File pointed by the resource entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_close" signature="zip_entry_close(resource zip_ent)" returns="void" doc="Close a zip entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_read" signature="zip_entry_read(resource zip_entry [, int len])" returns="mixed" doc="Read from an open directory entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_name" signature="zip_entry_name(resource zip_entry)" returns="string" doc="Return the name given a ZZip entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_compressedsize" signature="zip_entry_compressedsize(resource zip_entry)" returns="int" doc="Return the compressed size of a ZZip entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_filesize" signature="zip_entry_filesize(resource zip_entry)" returns="int" doc="Return the actual filesize of a ZZip entry" ilk="function" src="php_zip.c"/>
      <scope name="zip_entry_compressionmethod" signature="zip_entry_compressionmethod(resource zip_entry)" returns="string" doc="Return a string containing the compression method used&#10;on a particular entry" ilk="function" src="php_zip.c"/>
      <scope name="getFromName" signature="getFromName(string entryname[, int len [, int flags]])" returns="string" doc="get the contents of an entry using its name" ilk="function" src="php_zip.c"/>
      <scope name="getFromIndex" signature="getFromIndex(string entryname[, int len [, int flags]])" returns="string" doc="get the contents of an entry using its index" ilk="function" src="php_zip.c"/>
      <scope name="getStream" signature="getStream(string entryname)" returns="resource" doc="get a stream for an entry using its name" ilk="function" src="php_zip.c"/>
      <scope name="bitset_empty" signature="bitset_empty(integer bitcount)" returns="string" doc="Return an empty bitset represented in a binary string&#10;Optional parameter bitcount preallocates memory for&#10;bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_incl" signature="bitset_incl(string bitset, integer bit)" returns="void" doc="Includes bit into bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_excl" signature="bitset_excl(string bitset, integer bit)" returns="void" doc="Excludes bit into bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_in" signature="bitset_in(string bitset, integer bit)" returns="bool" doc="Checks if bit in bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_fill" signature="bitset_fill(integer bitcount)" returns="string" doc="Return a bitset represented in a binary string Bitcount&#10;sets first bitcount bits" ilk="function" src="bitset.c"/>
      <scope name="bitset_intersection" signature="bitset_intersection(string bitset1, string bitset2)" returns="string" doc="Return an intersection of two bitsets" ilk="function" src="bitset.c"/>
      <scope name="bitset_union" signature="bitset_union(string bitset1, string bitset2)" returns="string" doc="Return an union of two bitsets" ilk="function" src="bitset.c"/>
      <scope name="bitset_invert" signature="bitset_invert(string bitset, integer size)" returns="void" doc="Invert bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_subset" signature="bitset_subset(string bitset1, string bitset2)" returns="bool" doc="Return TRUE if bitset is a subset of bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_equal" signature="bitset_equal(string bitset1, string bitset2)" returns="bool" doc="Return TRUE if bitset and bitset are equal Please note&#10;that quot quot and quot quot are equal" ilk="function" src="bitset.c"/>
      <scope name="bitset_to_string" signature="bitset_to_string(string bitset)" returns="string" doc="Return a human readable string representation of a&#10;bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_from_string" signature="bitset_from_string(string source_str)" returns="string" doc="Return a bitset calculated from a string" ilk="function" src="bitset.c"/>
      <scope name="bitset_to_hash" signature="bitset_to_hash(string bitset)" returns="array" doc="Return bitset mapped to an array" ilk="function" src="bitset.c"/>
      <scope name="bitset_from_hash" signature="bitset_from_hash(array bit_array)" returns="string" doc="Maps an array of bits to a bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_to_array" signature="bitset_to_array(string bitset)" returns="array" doc="Return bitset represented as an array of bits" ilk="function" src="bitset.c"/>
      <scope name="bitset_from_array" signature="bitset_from_array(array bit_array)" returns="string" doc="Converts an array of bits to a bitset" ilk="function" src="bitset.c"/>
      <scope name="bitset_is_empty" signature="bitset_is_empty(string bitset)" returns="bool" doc="Return TRUE if bitset is empty" ilk="function" src="bitset.c"/>
      <scope name="stats_cdf_t" signature="stats_cdf_t(float par1, float par2, int which)" returns="float" doc="Calculates any one parameter of the T distribution&#10;given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_gennch" signature="stats_stat_gennch(int n)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_gamma" signature="stats_cdf_gamma(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the gamma distribution&#10;given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_chisquare" signature="stats_cdf_chisquare(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the chi-square&#10;distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_beta" signature="stats_cdf_beta(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the beta distribution&#10;given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_binomial" signature="stats_cdf_binomial(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the binomial&#10;distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_noncentral_chisquare" signature="stats_cdf_noncentral_chisquare(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the non-central&#10;chi-square distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_f" signature="stats_cdf_f(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the F distribution&#10;given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_noncentral_f" signature="stats_cdf_noncentral_f(float par1, float par2, float par3, float par4, int which)" returns="float" doc="Calculates any one parameter of the Non-central F&#10;distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_noncentral_t" signature="stats_stat_noncentral_t(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the noncentral t&#10;distribution give values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_negative_binomial" signature="stats_cdf_negative_binomial(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the negative binomial&#10;distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_poisson" signature="stats_cdf_poisson(float par1, float par2, float par3, int which)" returns="float" doc="Calculates any one parameter of the Poisson&#10;distribution given values for the others" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_laplace" signature="stats_cdf_laplace(float par1, float par2, float par3, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_cauchy" signature="stats_cdf_cauchy(float par1, float par2, float par3, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_logistic" signature="stats_cdf_logistic(float par1, float par2, float par3, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_weibull" signature="stats_cdf_weibull(float par1, float par2, float par3, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_uniform" signature="stats_cdf_uniform(float par1, float par2, float par3, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_cdf_exponential" signature="stats_cdf_exponential(float par1, float par2, int which)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_setall" signature="stats_rand_setall(int iseed1, int iseed2)" returns="void" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_get_seeds" signature="stats_rand_get_seeds(void)" returns="array" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_iuniform" signature="stats_rand_gen_iuniform(int low, int high)" returns="int" doc="Generates integer uniformly distributed between LOW&#10;inclusive and HIGH inclusive" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_funiform" signature="stats_rand_gen_funiform(float low, float high)" returns="float" doc="Generates uniform float between low exclusive and high&#10;exclusive" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_int" signature="stats_rand_gen_int(void)" returns="int" doc="Generates random integer between and" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_ranf" signature="stats_rand_ranf(void)" returns="float" doc="Returns a random floating point number from a uniform&#10;distribution over - endpoints of this interval are not&#10;returned using" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_beta" signature="stats_rand_gen_beta(float a, float b)" returns="float" doc="Generates beta random deviate Returns a random deviate&#10;from the beta distribution with parameters A and B The&#10;density of" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_chisquare" signature="stats_rand_gen_chisquare(float df)" returns="float" doc="Generates random deviate from the distribution of a&#10;chisquare with quot df quot degrees of freedom random&#10;variable" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_exponential" signature="stats_rand_gen_exponential(float av)" returns="float" doc="Generates a single random deviate from an exponential&#10;distribution with mean quot av quot" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_f" signature="stats_rand_gen_f(float dfn, float dfd)" returns="float" doc="Generates a random deviate from the F variance ratio&#10;distribution with quot dfn quot degrees of freedom in&#10;the numerator" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_gamma" signature="stats_rand_gen_gamma(float a, float r)" returns="float" doc="Generates random deviates from the gamma distribution&#10;whose density is A R Gamma R X R- Exp -A X Parameters" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_noncenral_chisquare" signature="stats_rand_gen_noncenral_chisquare(float df, float xnonc)" returns="float" doc="Generates random deviate from the distribution of a&#10;noncentral chisquare with quot df quot degrees of&#10;freedom and noncentrality parameter" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_noncentral_f" signature="stats_rand_gen_noncentral_f(float dfn, float dfd, float xnonc)" returns="float" doc="Generates a random deviate from the noncentral F&#10;variance ratio distribution with quot dfn quot degrees&#10;of freedom in the" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_normal" signature="stats_rand_gen_normal(float av, float sd)" returns="float" doc="Generates a single random deviate from a normal&#10;distribution with mean av and standard deviation sd sd&#10;gt Method Renames" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_phrase_to_seeds" signature="stats_rand_phrase_to_seeds(string phrase)" returns="array" doc="Uses a phrase characted string to generate two seeds&#10;for the RGN random number generator Trailing blanks&#10;are eliminated before" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_ibinomial" signature="stats_rand_gen_ibinomial(int n, float pp)" returns="int" doc="Generates a single random deviate from a binomial&#10;distribution whose number of trials is quot n quot n&#10;gt and" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_ibinomial_negative" signature="stats_rand_gen_ibinomial_negative(int n, float p)" returns="int" doc="Generates a single random deviate from a negative&#10;binomial distribution Arguments n - the number of&#10;trials in the negative" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_ipoisson" signature="stats_rand_gen_ipoisson(float mu)" returns="int" doc="Generates a single random deviate from a Poisson&#10;distribution with mean quot mu quot mu gt" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_noncentral_t" signature="stats_rand_gen_noncentral_t(float df, float xnonc)" returns="float" doc="Generates a single random deviate from a noncentral T&#10;distribution xnonc - noncentrality parameter df must&#10;be gt" ilk="function" src="statistics.c"/>
      <scope name="stats_rand_gen_t" signature="stats_rand_gen_t(float df)" returns="float" doc="Generates a single random deviate from a T distribution&#10;df must be gt" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_normal" signature="stats_dens_normal(float x, float ave, float stdev)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_cauchy" signature="stats_dens_cauchy(float x, float ave, float stdev)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_laplace" signature="stats_dens_laplace(float x, float ave, float stdev)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_logistic" signature="stats_dens_logistic(float x, float ave, float stdev)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_beta" signature="stats_dens_beta(float x, float a, float b)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_weibull" signature="stats_dens_weibull(float x, float a, float b)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_den_uniform" signature="stats_den_uniform(float x, float a, float b)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_chisquare" signature="stats_dens_chisquare(float x, float dfr)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_t" signature="stats_dens_t(float x, float dfr)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_gamma" signature="stats_dens_gamma(float x, float shape, float scale)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_exponential" signature="stats_dens_exponential(float x, float scale)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_f" signature="stats_dens_f(float x, float dfr1, float dfr2)" returns="float" doc="" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_pmf_binomial" signature="stats_dens_pmf_binomial(float x, float n, float pi)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_pmf_poisson" signature="stats_dens_pmf_poisson(float x, float lb)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_negative_binomial" signature="stats_dens_negative_binomial(float x, float n, float pi)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_dens_pmf_hypergeometric" signature="stats_dens_pmf_hypergeometric(float n1, float n2, float N1, float N2)" returns="float" doc="" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_powersum" signature="stats_stat_powersum(array arr, float power)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_innerproduct" signature="stats_stat_innerproduct(array arr1, array arr2)" returns="float" doc="" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_independent_t" signature="stats_stat_independent_t(array arr1, array arr2)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_paired_t" signature="stats_stat_paired_t(array arr1, array arr2)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_percentile" signature="stats_stat_percentile(float df, float xnonc)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_correlation" signature="stats_stat_correlation(array arr1, array arr2)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_stat_binomial_coef" signature="stats_stat_binomial_coef(int x, int n)" returns="float" doc="Not documented" ilk="function" src="statistics.c"/>
      <scope name="stats_variance" signature="stats_variance(array a [, bool sample])" returns="float" doc="Returns the population variance" ilk="function" src="statistics.c"/>
      <scope name="stats_standard_deviation" signature="stats_standard_deviation(array a[, bool sample = false])" returns="float" doc="Returns the standard deviation" ilk="function" src="statistics.c"/>
      <scope name="stats_absolute_deviation" signature="stats_absolute_deviation(array a)" returns="float" doc="Returns the absolute deviation of an array of values" ilk="function" src="statistics.c"/>
      <scope name="stats_harmonic_mean" signature="stats_harmonic_mean(array a)" returns="float" doc="Returns the harmonic mean of an array of values" ilk="function" src="statistics.c"/>
      <scope name="stats_skew" signature="stats_skew(array a)" returns="float" doc="Computes the skewness of the data in the array" ilk="function" src="statistics.c"/>
      <scope name="stats_kurtosis" signature="stats_kurtosis(array a)" returns="float" doc="Computes the kurtosis of the data in the array" ilk="function" src="statistics.c"/>
      <scope name="stats_covariance" signature="stats_covariance(array a, array b)" returns="float" doc="Computes the covariance of two data sets" ilk="function" src="statistics.c"/>
      <scope name="radius_auth_open" signature="radius_auth_open(string arg)" returns="ressource" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_acct_open" signature="radius_acct_open(string arg)" returns="ressource" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_close" signature="radius_close(radh)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_strerror" signature="radius_strerror(radh)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_config" signature="radius_config(desc, configfile)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_add_server" signature="radius_add_server(desc, hostname, port, secret, timeout, maxtries)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_create_request" signature="radius_create_request(desc, code)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_string" signature="radius_put_string(desc, type, str)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_int" signature="radius_put_int(desc, type, int)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_attr" signature="radius_put_attr(desc, type, data)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_addr" signature="radius_put_addr(desc, type, addr)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_vendor_string" signature="radius_put_vendor_string(desc, vendor, type, str)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_vendor_int" signature="radius_put_vendor_int(desc, vendor, type, int)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_vendor_attr" signature="radius_put_vendor_attr(desc, vendor, type, data)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_put_vendor_addr" signature="radius_put_vendor_addr(desc, vendor, type, addr)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_send_request" signature="radius_send_request(desc)" returns="bool" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_get_attr" signature="radius_get_attr(desc)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_get_vendor_attr" signature="radius_get_vendor_attr(data)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_cvt_addr" signature="radius_cvt_addr(data)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_cvt_int" signature="radius_cvt_int(data)" returns="int" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_cvt_string" signature="radius_cvt_string(data)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_request_authenticator" signature="radius_request_authenticator(radh)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_server_secret" signature="radius_server_secret(radh)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_demangle" signature="radius_demangle(radh, mangled)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="radius_demangle_mppe_key" signature="radius_demangle_mppe_key(radh, mangled)" returns="string" doc="" ilk="function" src="radius.c"/>
      <scope name="cybermut_creerformulairecm" signature="cybermut_creerformulairecm(string url_cm, string version, string tpe, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton)" returns="string" doc="Returns a string containing source HTML of the form of&#10;request for payment This result corresponds to the&#10;last parameter" ilk="function" src="cybermut.c"/>
      <scope name="cybermut_testmac" signature="cybermut_testmac(string code_mac, string version, string tpe, string cdate, string montant, string ref_commande, string texte_libre, string code_retour)" returns="bool" doc="Returns a boolean attesting that the authentification&#10;proceeded well TRUE if the received message is&#10;authenticated and FALSE if not" ilk="function" src="cybermut.c"/>
      <scope name="cybermut_creerreponsecm" signature="cybermut_creerreponsecm(string sentence)" returns="string" doc="Returns a string containing the message of&#10;acknowledgement of delivery headers and body of the&#10;message This result corresponds to" ilk="function" src="cybermut.c"/>
      <scope name="apc_cache_info" signature="apc_cache_info([string type] [, bool limited])" returns="array" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_clear_cache" signature="apc_clear_cache()" returns="void" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_sma_info" signature="apc_sma_info()" returns="array" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_store" signature="apc_store(string key, zval var [, ttl ])" returns="int" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_fetch" signature="apc_fetch(string key)" returns="mixed" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_delete" signature="apc_delete(string key)" returns="mixed" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_define_constants" signature="apc_define_constants(string key, array constants [,bool case-sensitive])" returns="mixed" doc="" ilk="function" src="php_apc.c"/>
      <scope name="apc_load_constants" signature="apc_load_constants(string key [, bool case-sensitive])" returns="mixed" doc="" ilk="function" src="php_apc.c"/>
      <scope name="event_init" signature="event_init([int priorities [, string engine]])" returns="string" doc="Initializes a specified scheduler if engine is&#10;specified else picks the quot best quot available" ilk="function" src="event.c"/>
      <scope name="event_have_events" signature="event_have_events(void)" returns="bool" doc="Returns true if there are any scheduled events false&#10;otherwise" ilk="function" src="event.c"/>
      <scope name="event_dispatch" signature="event_dispatch([int flags])" returns="int" doc="Dispatches events" ilk="function" src="event.c"/>
      <scope name="event_handle_signal" signature="event_handle_signal(int signalnum, mixed callback, mixed arg)" returns="event" doc="Create a new event to handle signals" ilk="function" src="event.c"/>
      <scope name="event_new" signature="event_new(resource stream, int events, mixed callback, mixed arg)" returns="event" doc="Create a new event and set it" ilk="function" src="event.c"/>
      <scope name="event_set" signature="event_set(resource event, resource stream, int events, mixed callback, mixed arg)" returns="bool" doc="Create a new event and set it" ilk="function" src="event.c"/>
      <scope name="event_schedule" signature="event_schedule(resource event [, int timeout_secs [, int timeout usecs]])" returns="bool" doc="Schedules an event with an optional timeout" ilk="function" src="event.c"/>
      <scope name="event_deschedule" signature="event_deschedule(resource event)" returns="bool" doc="Deschedule an event it can then be re-set and re-added" ilk="function" src="event.c"/>
      <scope name="event_free" signature="event_free(resource event)" returns="void" doc="Destroy an event" ilk="function" src="event.c"/>
      <scope name="event_priority_set" signature="event_priority_set(resource event, int pri)" returns="bool" doc="Change the priority of an event that is not currently&#10;scheduled" ilk="function" src="event.c"/>
      <scope name="event_pending" signature="event_pending(resource event, long mask [, int timeout_secs [, int timeout_usecs]])" returns="int" doc="Check if an event is pending or scheduled returns&#10;potential event mask" ilk="function" src="event.c"/>
      <scope name="event_timeout" signature="event_timeout(mixed callback, mixed cbarg, int seconds [, int usecs, [ int flags]])" returns="event" doc="Arranges for callback to be called after a certain time&#10;delay" ilk="function" src="event.c"/>
      <scope name="spread_connect" signature="spread_connect(string spreaddaemon [, string private_name])" returns="int" doc="Open a persistent connection to a spread daemon Returns&#10;resource id" ilk="function" src="php_spread.c"/>
      <scope name="spread_multicast" signature="spread_multicast( string groupname " returns="int" doc="Multicast a message to spread group s returns bytes&#10;sent" ilk="function" src="php_spread.c"/>
      <scope name="spread_close" signature="spread_close([resource id])" returns="int" doc="closes a spread connection" ilk="function" src="php_spread.c"/>
      <scope name="yaz_connect" signature="yaz_connect(string zurl [, array options])" returns="resource" doc="Create target with given zurl Returns positive id if&#10;successful" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_close" signature="yaz_close(resource id)" returns="bool" doc="Destory and close target" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_search" signature="yaz_search(resource id, string type, string query)" returns="bool" doc="Specify query of type for search - returns true if&#10;successful" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_present" signature="yaz_present(resource id)" returns="bool" doc="Retrieve records" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_wait" signature="yaz_wait([array options])" returns="bool" doc="Process events" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_errno" signature="yaz_errno(resource id)" returns="int" doc="Return last error number gt for bib- diagnostic lt for&#10;other error for no error" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_error" signature="yaz_error(resource id)" returns="string" doc="Return last error message" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_addinfo" signature="yaz_addinfo(resource id)" returns="string" doc="Return additional info for last error empty string if&#10;none" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_hits" signature="yaz_hits(resource id [, array searchresult])" returns="int" doc="Return number of hits result count for last search" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_record" signature="yaz_record(resource id, int pos, string type)" returns="string" doc="Return record information at given result set position" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_syntax" signature="yaz_syntax(resource id, string syntax)" returns="void" doc="Set record syntax for retrieval" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_element" signature="yaz_element(resource id, string elementsetname)" returns="void" doc="Set Element-Set-Name for retrieval" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_schema" signature="yaz_schema(resource id, string schema)" returns="void" doc="Set Schema for retrieval" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_set_option" signature="yaz_set_option(resource id, mixed options)" returns="void" doc="Set Option s for connection" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_get_option" signature="yaz_get_option(resource id, string name)" returns="string" doc="Set Option s for connection" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_range" signature="yaz_range(resource id, int start, int number)" returns="void" doc="Set result set start point and number of records to&#10;request" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_sort" signature="yaz_sort(resource id, string sortspec)" returns="void" doc="Set result set sorting criteria" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_itemorder" signature="yaz_itemorder(resource id, array package)" returns="void" doc="Sends Item Order request" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_es" signature="yaz_es(resource id, string type, array package)" returns="void" doc="Sends Extended Services Request" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_scan" signature="yaz_scan(resource id, type, query [, flags])" returns="void" doc="Sends Scan Request" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_es_result" signature="yaz_es_result(resource id)" returns="array" doc="Inspects Extended Services Result" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_scan_result" signature="yaz_scan_result(resource id [, array options])" returns="array" doc="Inspects Scan Result" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_ccl_conf" signature="yaz_ccl_conf(resource id, array package)" returns="void" doc="Configure CCL package" ilk="function" src="php_yaz.c"/>
      <scope name="yaz_ccl_parse" signature="yaz_ccl_parse(resource id, string query, array res)" returns="bool" doc="Parse a CCL query" ilk="function" src="php_yaz.c"/>
      <scope name="ares_version" signature="ares_version()" returns="string" doc="Get libares version" ilk="function" src="ares.c"/>
      <scope name="ares_init" signature="ares_init([array options])" returns="resource" doc="Create an ares resource" ilk="function" src="ares.c"/>
      <scope name="ares_destroy" signature="ares_destroy(resource ares)" returns="void" doc="Destroy the ares handle" ilk="function" src="ares.c"/>
      <scope name="ares_strerror" signature="ares_strerror(int status)" returns="string" doc="Get description of status code" ilk="function" src="ares.c"/>
      <scope name="ares_mkquery" signature="ares_mkquery(string name, int dnsclass, int type, int id, int rd)" returns="string" doc="Compose a custom query" ilk="function" src="ares.c"/>
      <scope name="ares_search" signature="ares_search(resource ares, mixed callback, string name[, int type = ARES_T_A[, int dnsclass = ARES_C_IN]])" returns="resource" doc="Issue a domain search for name" ilk="function" src="ares.c"/>
      <scope name="ares_query" signature="ares_query(resource ares, mixed callback, string name[, int type = ARES_T_A[, int dnsclass = ARES_C_IN]])" returns="resource" doc="Issue a single DNS query" ilk="function" src="ares.c"/>
      <scope name="ares_send" signature="ares_send(resource ares, mixed callback, string buf)" returns="resource" doc="Send custom query" ilk="function" src="ares.c"/>
      <scope name="ares_gethostbyname" signature="ares_gethostbyname(resource ares, mixed callback, string name[, int family = AF_INET])" returns="resource" doc="Get host by name" ilk="function" src="ares.c"/>
      <scope name="ares_gethostbyaddr" signature="ares_gethostbyaddr(resuorce ares, mixed callback, string address[, int family = ARES_AF_INET])" returns="resource" doc="Get host by address" ilk="function" src="ares.c"/>
      <scope name="ares_getnameinfo" signature="ares_getnameinfo(resource ares, mixed callback, int flags, string addr[, int family = ARES_AF_INET[, int port = 0]])" returns="resource" doc="Get name info" ilk="function" src="ares.c"/>
      <scope name="ares_result" signature="ares_result(resource query, int &amp;errno, string &amp;error)" returns="mixed" doc="Check a query for its result" ilk="function" src="ares.c"/>
      <scope name="ares_packet" signature="ares_packet(resource query)" returns="object" doc="Check a query for its question packet" ilk="function" src="ares.c"/>
      <scope name="ares_cancel" signature="ares_cancel(resource ares)" returns="void" doc="Cancel pending queries" ilk="function" src="ares.c"/>
      <scope name="ares_process_all" signature="ares_process_all(resource ares[, int max_timeout_ms])" returns="void" doc="Process all pending queries" ilk="function" src="ares.c"/>
      <scope name="ares_process_once" signature="ares_process_once(resource ares[, int max_timout_ms])" returns="bool" doc="Process once and return whether it should be called&#10;again" ilk="function" src="ares.c"/>
      <scope name="ares_process" signature="ares_process(resource ares, array read, array write)" returns="void" doc="Process call" ilk="function" src="ares.c"/>
      <scope name="ares_fds" signature="ares_fds(resource ares, array &amp;read, array &amp;write)" returns="int" doc="Get file descriptors" ilk="function" src="ares.c"/>
      <scope name="ares_parse_a_reply" signature="ares_parse_a_reply(string reply)" returns="array" doc="Parse an A reply" ilk="function" src="ares.c"/>
      <scope name="ares_parse_aaaa_reply" signature="ares_parse_aaaa_reply(string reply)" returns="array" doc="Parse an AAAA reply" ilk="function" src="ares.c"/>
      <scope name="ares_parse_ptr_reply" signature="ares_parse_ptr_reply(string reply)" returns="array" doc="Parse a PTR reply" ilk="function" src="ares.c"/>
      <scope name="ares_expand_name" signature="ares_expand_name(string name)" returns="string" doc="Expand a DNS encoded name into a human readable dotted&#10;string" ilk="function" src="ares.c"/>
      <scope name="ares_expand_string" signature="ares_expand_string(string buf)" returns="string" doc="Expand a DNS encoded string into a human readable" ilk="function" src="ares.c"/>
      <scope name="cybercash_encr" signature="cybercash_encr(string wmk, string sk, string data)" returns="array" doc="Cybercash encrypt" ilk="function" src="cybercash.c"/>
      <scope name="cybercash_decr" signature="cybercash_decr(string wmp, string sk, string data)" returns="array" doc="Cybercash decrypt" ilk="function" src="cybercash.c"/>
      <scope name="cybercash_base64_encode" signature="cybercash_base64_encode(string data)" returns="string" doc="base encode data for cybercash" ilk="function" src="cybercash.c"/>
      <scope name="cybercash_base64_decode" signature="cybercash_base64_decode(string data)" returns="string" doc="base decode data for cybercash" ilk="function" src="cybercash.c"/>
      <scope name="fribidi_log2vis" signature="fribidi_log2vis(string logical_str, long direction, long charset)" returns="string" doc="Convert a logical string to a visual one" ilk="function" src="fribidi.c"/>
      <scope name="fribidi_charset_info" signature="fribidi_charset_info(int charset)" returns="array" doc="Returns an array containing information about the&#10;specified charset" ilk="function" src="fribidi.c"/>
      <scope name="fribidi_get_charsets" signature="fribidi_get_charsets()" returns="array" doc="Returns an array containing available charsets" ilk="function" src="fribidi.c"/>
      <scope name="xmlwriter_set_indent" signature="xmlwriter_set_indent(resource xmlwriter, bool indent)" returns="bool" doc="Toggle indentation on off - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_set_indent_string" signature="xmlwriter_set_indent_string(resource xmlwriter, string indentString)" returns="bool" doc="Set string used for indenting - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_attribute" signature="xmlwriter_start_attribute(resource xmlwriter, string name)" returns="bool" doc="Create start attribute - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_attribute" signature="xmlwriter_end_attribute(resource xmlwriter)" returns="bool" doc="End attribute - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_attribute_ns" signature="xmlwriter_start_attribute_ns(resource xmlwriter, string prefix, string name, string uri)" returns="bool" doc="Create start namespaced attribute - returns FALSE on&#10;error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_attribute" signature="xmlwriter_write_attribute(resource xmlwriter, string name, string content)" returns="bool" doc="Write full attribute - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_attribute_ns" signature="xmlwriter_write_attribute_ns(resource xmlwriter, string prefix, string name, string uri, string content)" returns="bool" doc="Write full namespaced attribute - returns FALSE on&#10;error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_element" signature="xmlwriter_start_element(resource xmlwriter, string name)" returns="bool" doc="Create start element tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_element_ns" signature="xmlwriter_start_element_ns(resource xmlwriter, string prefix, string name, string uri)" returns="bool" doc="Create start namespaced element tag - returns FALSE on&#10;error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_element" signature="xmlwriter_end_element(resource xmlwriter)" returns="bool" doc="End current element - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_full_end_element" signature="xmlwriter_full_end_element(resource xmlwriter)" returns="bool" doc="End current element - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_element" signature="xmlwriter_write_element(resource xmlwriter, string name, string content)" returns="bool" doc="Write full element tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_element_ns" signature="xmlwriter_write_element_ns(resource xmlwriter, string prefix, string name, string uri, string content)" returns="bool" doc="Write full namesapced element tag - returns FALSE on&#10;error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_pi" signature="xmlwriter_start_pi(resource xmlwriter, string target)" returns="bool" doc="Create start PI tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_pi" signature="xmlwriter_end_pi(resource xmlwriter)" returns="bool" doc="End current PI - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_pi" signature="xmlwriter_write_pi(resource xmlwriter, string target, string content)" returns="bool" doc="Write full PI tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_cdata" signature="xmlwriter_start_cdata(resource xmlwriter)" returns="bool" doc="Create start CDATA tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_cdata" signature="xmlwriter_end_cdata(resource xmlwriter)" returns="bool" doc="End current CDATA - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_cdata" signature="xmlwriter_write_cdata(resource xmlwriter, string content)" returns="bool" doc="Write full CDATA tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_raw" signature="xmlwriter_write_raw(resource xmlwriter, string content)" returns="bool" doc="Write text - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_text" signature="xmlwriter_text(resource xmlwriter, string content)" returns="bool" doc="Write text - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_comment" signature="xmlwriter_start_comment(resource xmlwriter)" returns="bool" doc="Create start comment - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_comment" signature="xmlwriter_end_comment(resource xmlwriter)" returns="bool" doc="Create end comment - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_comment" signature="xmlwriter_write_comment(resource xmlwriter, string content)" returns="bool" doc="Write full comment tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_document" signature="xmlwriter_start_document(resource xmlwriter, string version, string encoding, string standalone)" returns="bool" doc="Create document tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_document" signature="xmlwriter_end_document(resource xmlwriter)" returns="bool" doc="End current document - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_dtd" signature="xmlwriter_start_dtd(resource xmlwriter, string name, string pubid, string sysid)" returns="bool" doc="Create start DTD tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_dtd" signature="xmlwriter_end_dtd(resource xmlwriter)" returns="bool" doc="End current DTD - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_dtd" signature="xmlwriter_write_dtd(resource xmlwriter, string name, string pubid, string sysid, string subset)" returns="bool" doc="Write full DTD tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_dtd_element" signature="xmlwriter_start_dtd_element(resource xmlwriter, string name)" returns="bool" doc="Create start DTD element - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_dtd_element" signature="xmlwriter_end_dtd_element(resource xmlwriter)" returns="bool" doc="End current DTD element - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_dtd_element" signature="xmlwriter_write_dtd_element(resource xmlwriter, string name, string content)" returns="bool" doc="Write full DTD element tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_dtd_attlist" signature="xmlwriter_start_dtd_attlist(resource xmlwriter, string name)" returns="bool" doc="Create start DTD AttList - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_dtd_attlist" signature="xmlwriter_end_dtd_attlist(resource xmlwriter)" returns="bool" doc="End current DTD AttList - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_dtd_attlist" signature="xmlwriter_write_dtd_attlist(resource xmlwriter, string name, string content)" returns="bool" doc="Write full DTD AttList tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_start_dtd_entity" signature="xmlwriter_start_dtd_entity(resource xmlwriter, string name, bool isparam)" returns="bool" doc="Create start DTD Entity - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_end_dtd_entity" signature="xmlwriter_end_dtd_entity(resource xmlwriter)" returns="bool" doc="End current DTD Entity - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_write_dtd_entity" signature="xmlwriter_write_dtd_entity(resource xmlwriter, string name, string content)" returns="bool" doc="Write full DTD Entity tag - returns FALSE on error" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_open_uri" signature="xmlwriter_open_uri(resource xmlwriter, string source)" returns="resource" doc="Create new xmlwriter using source uri for output" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_open_memory" signature="xmlwriter_open_memory()" returns="resource" doc="Create new xmlwriter using memory for string output" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_output_memory" signature="xmlwriter_output_memory(resource xmlwriter [,bool flush])" returns="string" doc="Output current buffer as string" ilk="function" src="php_xmlwriter.c"/>
      <scope name="xmlwriter_flush" signature="xmlwriter_flush(resource xmlwriter [,bool empty])" returns="mixed" doc="Output current buffer" ilk="function" src="php_xmlwriter.c"/>
      <scope name="svn_checkout" signature="svn_checkout(string repos, string targetpath [, int revision])" returns="bool" doc="Checks out a particular revision from repos into&#10;targetpath" ilk="function" src="svn.c"/>
      <scope name="svn_diff" signature="svn_diff(string path1, int rev1, string path2, int rev2)" returns="mixed" doc="Recursively diffs two paths Returns an array consisting&#10;of two streams the first is the diff output and the&#10;second" ilk="function" src="svn.c"/>
      <scope name="svn_cleanup" signature="svn_cleanup(string workingdir)" returns="bool" doc="Recursively cleanup a working copy directory finishing&#10;any incomplete operations removing lockfiles etc" ilk="function" src="svn.c"/>
      <scope name="svn_fs_revision_prop" signature="svn_fs_revision_prop(resource fs, int revnum, string propname)" returns="string" doc="Fetches the value of a named property" ilk="function" src="svn.c"/>
      <scope name="svn_fs_youngest_rev" signature="svn_fs_youngest_rev(resource fs)" returns="resource" doc="Returns the number of the youngest revision in the&#10;filesystem" ilk="function" src="svn.c"/>
      <scope name="svn_fs_revision_root" signature="svn_fs_revision_root(resource fs, int revnum)" returns="resource" doc="Get a handle on a specific version of the repository&#10;root" ilk="function" src="svn.c"/>
      <scope name="svn_fs_file_contents" signature="svn_fs_file_contents(resource fsroot, string path)" returns="resource" doc="Returns a stream to access the contents of a file from&#10;a given version of the fs" ilk="function" src="svn.c"/>
      <scope name="svn_fs_file_length" signature="svn_fs_file_length(resource fsroot, string path)" returns="int" doc="Returns the length of a file from a given version of&#10;the fs" ilk="function" src="svn.c"/>
      <scope name="svn_fs_node_prop" signature="svn_fs_node_prop(resource fsroot, string path, string propname)" returns="long" doc="Returns the value of a property for a node" ilk="function" src="svn.c"/>
      <scope name="svn_fs_node_created_rev" signature="svn_fs_node_created_rev(resource fsroot, string path)" returns="long" doc="Returns the revision in which path under fsroot was&#10;created" ilk="function" src="svn.c"/>
      <scope name="svn_fs_dir_entries" signature="svn_fs_dir_entries(resource fsroot, string path)" returns="array" doc="Enumerates the directory entries under path returns a&#10;hash of dir names to file type" ilk="function" src="svn.c"/>
      <scope name="svn_fs_check_path" signature="svn_fs_check_path(resource fsroot, string path)" returns="int" doc="Determines what kind of item lives at path in a given&#10;repository fsroot" ilk="function" src="svn.c"/>
      <scope name="svn_repos_fs" signature="svn_repos_fs(resource repos)" returns="resource" doc="Gets a handle on the filesystem for a repository" ilk="function" src="svn.c"/>
      <scope name="svn_repos_open" signature="svn_repos_open(string path)" returns="resource" doc="Open a shared lock on a repository" ilk="function" src="svn.c"/>
      <scope name="svn_repos_create" signature="svn_repos_create(string path [, array config [, array fsconfig]])" returns="resource" doc="Create a new subversion repository at path" ilk="function" src="svn.c"/>
      <scope name="svn_repos_recover" signature="svn_repos_recover(string path)" returns="bool" doc="Run recovery procedures on the repository located at&#10;path" ilk="function" src="svn.c"/>
      <scope name="svn_repos_hotcopy" signature="svn_repos_hotcopy(string repospath, string destpath, bool cleanlogs)" returns="bool" doc="Make a hot-copy of the repos at repospath copy it to&#10;destpath" ilk="function" src="svn.c"/>
      <scope name="svn_commit" signature="svn_commit(string log, array targets [, bool dontrecurse])" returns="array" doc="Make a hot-copy of the repos at repospath copy it to&#10;destpath" ilk="function" src="svn.c"/>
      <scope name="svn_add" signature="svn_add(string path [, bool recursive [, bool force]])" returns="array" doc="Schedule the addition of a file in a working directory" ilk="function" src="svn.c"/>
      <scope name="svn_status" signature="svn_status(string path [, bool recursive [, bool get_all [, bool update [, bool no_ignore]]]])" returns="array" doc="Schedule the addition of a file in a working directory" ilk="function" src="svn.c"/>
      <scope name="svn_update" signature="svn_update(string path [, int revno [, bool recurse]])" returns="array" doc="Update working copy at path to revno" ilk="function" src="svn.c"/>
      <scope name="svn_repos_fs_begin_txn_for_commit" signature="svn_repos_fs_begin_txn_for_commit(resource repos, long rev, string author, string log_msg)" returns="resource" doc="create a new transaction" ilk="function" src="svn.c"/>
      <scope name="svn_repos_fs_commit_txn" signature="svn_repos_fs_commit_txn(resource txn)" returns="long" doc="commits a transaction and returns the new revision" ilk="function" src="svn.c"/>
      <scope name="svn_fs_txn_root" signature="svn_fs_txn_root(resource txn)" returns="resource" doc="creates and returns a transaction root" ilk="function" src="svn.c"/>
      <scope name="svn_fs_make_file" signature="svn_fs_make_file(resource root, string path)" returns="boolean" doc="creates a new empty file returns true if all is ok&#10;false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_make_dir" signature="svn_fs_make_dir(resource root, string path)" returns="boolean" doc="creates a new empty directory returns true if all is ok&#10;false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_apply_text" signature="svn_fs_apply_text(resource root, string path)" returns="resource" doc="creates and returns a stream that will be used to&#10;replace the content of an existing file" ilk="function" src="svn.c"/>
      <scope name="svn_fs_copy" signature="svn_fs_copy(resource from_root, string from_path, resourse to_root, string to_path)" returns="boolean" doc="copies a file or a directory returns true if all is ok&#10;false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_delete" signature="svn_fs_delete(resource root, string path)" returns="boolean" doc="deletes a file or a directory return true if all is ok&#10;false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_begin_txn2" signature="svn_fs_begin_txn2(resource repos, long rev)" returns="resource" doc="create a new transaction" ilk="function" src="svn.c"/>
      <scope name="svn_fs_is_file" signature="svn_fs_is_file(resource root, string path)" returns="boolean" doc="return true if the path points to a file false&#10;otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_is_dir" signature="svn_fs_is_dir(resource root, string path)" returns="boolean" doc="return true if the path points to a directory false&#10;otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_change_node_prop" signature="svn_fs_change_node_prop(resource root, string path, string name, string value)" returns="boolean" doc="return true if everything is ok false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_contents_changed" signature="svn_fs_contents_changed(resource root1, string path1, resource root2, string path2)" returns="boolean" doc="return true if content is different false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_props_changed" signature="svn_fs_props_changed(resource root1, string path1, resource root2, string path2)" returns="boolean" doc="return true if props are different false otherwise" ilk="function" src="svn.c"/>
      <scope name="svn_fs_abort_txn" signature="svn_fs_abort_txn(resource txn)" returns="boolean" doc="abort a transaction returns true if everything is ok&#10;false othewise" ilk="function" src="svn.c"/>
      <scope name="calcul_hmac" signature="calcul_hmac(string clent , string codesiret , string montant , string reference , string validite , string taxe , string devise , string langue)" returns="string" doc="Getting a calcul hmac key" ilk="function" src="php_spplus.c"/>
      <scope name="nthmac" signature="nthmac(string clent , string data)" returns="string" doc="Getting a nthmac key Note that data is data quot&#10;codesiret reference langue devise montant taxe&#10;validite quot" ilk="function" src="php_spplus.c"/>
      <scope name="signerurlpaiement" signature="signerurlpaiement(string clent , string data)" returns="string" doc="Getting a url for the paiement redirection Note that&#10;data is data quot codesiret reference langue devise&#10;montant taxe validite" ilk="function" src="php_spplus.c"/>
      <scope name="calculhmac" signature="calculhmac(string clent , string data)" returns="string" doc="Getting a calculhmac key Note that data is data quot&#10;codesiret reference langue devise montant taxe&#10;validite quot" ilk="function" src="php_spplus.c"/>
      <scope name="md5" signature="md5(string str, [ bool raw_output])" returns="string" doc="Calculate the md hash of a string" ilk="function" src="hash_md.c"/>
      <scope name="md5_file" signature="md5_file(string filename [, bool raw_output])" returns="string" doc="Calculate the md hash of given filename" ilk="function" src="hash_md.c"/>
      <scope name="hash" signature="hash(string algo, string data[, bool raw_output = false])" returns="string" doc="Generate a hash of a given input string Returns&#10;lowercase hexits by default" ilk="function" src="hash.c"/>
      <scope name="hash_file" signature="hash_file(string algo, string filename[, bool raw_output = false])" returns="string" doc="Generate a hash of a given file Returns lowercase&#10;hexits by default" ilk="function" src="hash.c"/>
      <scope name="hash_hmac" signature="hash_hmac(string algo, string data, string key[, bool raw_output = false])" returns="string" doc="Generate a hash of a given input string with a key&#10;using HMAC Returns lowercase hexits by default" ilk="function" src="hash.c"/>
      <scope name="hash_hmac_file" signature="hash_hmac_file(string algo, string filename, string key[, bool raw_output = false])" returns="string" doc="Generate a hash of a given file with a key using HMAC&#10;Returns lowercase hexits by default" ilk="function" src="hash.c"/>
      <scope name="hash_init" signature="hash_init(string algo[, int options, string key])" returns="resource" doc="Initialize a hashing context" ilk="function" src="hash.c"/>
      <scope name="hash_update" signature="hash_update(resource context, string data)" returns="bool" doc="Pump data into the hashing algorithm" ilk="function" src="hash.c"/>
      <scope name="hash_update_stream" signature="hash_update_stream(resource context, resource handle[, integer length])" returns="int" doc="Pump data into the hashing algorithm from an open&#10;stream" ilk="function" src="hash.c"/>
      <scope name="hash_update_file" signature="hash_update_file(resource context, string filename[, resource context])" returns="bool" doc="Pump data into the hashing algorithm from a file" ilk="function" src="hash.c"/>
      <scope name="hash_final" signature="hash_final(resource context[, bool raw_output=false])" returns="string" doc="Output resulting digest" ilk="function" src="hash.c"/>
      <scope name="hash_algos" signature="hash_algos(void)" returns="array" doc="Return a list of registered hashing algorithms" ilk="function" src="hash.c"/>
      <scope name="sha1" signature="sha1(string str [, bool raw_output])" returns="string" doc="Calculate the sha hash of a string" ilk="function" src="hash_sha.c"/>
      <scope name="sha1_file" signature="sha1_file(string filename [, bool raw_output])" returns="string" doc="Calculate the sha hash of given filename" ilk="function" src="hash_sha.c"/>
      <scope name="mailparse_uudecode_all" signature="mailparse_uudecode_all(resource fp)" returns="array" doc="Scans the data from fp and extract each embedded&#10;uuencoded file Returns an array listing filename&#10;information" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_rfc822_parse_addresses" signature="mailparse_rfc822_parse_addresses(string addresses)" returns="array" doc="Parse addresses and returns a hash containing that data" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_determine_best_xfer_encoding" signature="mailparse_determine_best_xfer_encoding(resource fp)" returns="string" doc="Figures out the best way of encoding the content read&#10;from the file pointer fp which must be seek-able" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_stream_encode" signature="mailparse_stream_encode(resource sourcefp, resource destfp, string encoding)" returns="boolean" doc="Streams data from source file pointer apply encoding&#10;and write to destfp" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_parse" signature="mailparse_msg_parse(resource mimepart, string data)" returns="void" doc="Incrementally parse data into buffer" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_parse_file" signature="mailparse_msg_parse_file(string filename)" returns="resource" doc="Parse file and return a resource representing the&#10;structure" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_free" signature="mailparse_msg_free(resource mimepart)" returns="void" doc="Frees a handle allocated by mailparse msg create" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_create" signature="mailparse_msg_create(void)" returns="int" doc="Returns a handle that can be used to parse a message" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_get_structure" signature="mailparse_msg_get_structure(resource mimepart)" returns="array" doc="Returns an array of mime section names in the supplied&#10;message" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_extract_part" signature="mailparse_msg_extract_part(resource mimepart, string msgbody[, string callbackfunc])" returns="void" doc="Extracts decodes a message section If callbackfunc is&#10;not specified the contents will be sent to quot stdout&#10;quot" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_extract_whole_part_file" signature="mailparse_msg_extract_whole_part_file(resource mimepart, string filename [, string callbackfunc])" returns="string" doc="Extracts a message section including headers without&#10;decoding the transfer encoding" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_extract_part_file" signature="mailparse_msg_extract_part_file(resource mimepart, string filename [, string callbackfunc])" returns="string" doc="Extracts decodes a message section decoding the&#10;transfer encoding" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_get_part_data" signature="mailparse_msg_get_part_data(resource mimepart)" returns="array" doc="Returns an associative array of info about the message" ilk="function" src="mailparse.c"/>
      <scope name="mailparse_msg_get_part" signature="mailparse_msg_get_part(resource mimepart, string mimesection)" returns="int" doc="Returns a handle on a given section in a mimemessage" ilk="function" src="mailparse.c"/>
      <scope name="filter_has_var" signature="filter_has_var(constant type, string variable_name)" returns="mixed" doc="Returns true if the variable with the name 'name'&#10;exists in source" ilk="function" src="filter.c"/>
      <scope name="filter_input" signature="filter_input(constant type, string variable_name [, long filter [, mixed options]])" returns="mixed" doc="Returns the filtered variable 'name' from source type" ilk="function" src="filter.c"/>
      <scope name="filter_var" signature="filter_var(mixed variable [, long filter [, mixed options]])" returns="mixed" doc="Returns the filtered version of the vriable" ilk="function" src="filter.c"/>
      <scope name="filter_input_array" signature="filter_input_array(constant type, [, mixed options]])" returns="mixed" doc="Returns an array with all arguments defined in&#10;'definition'" ilk="function" src="filter.c"/>
      <scope name="filter_var_array" signature="filter_var_array(array data, [, mixed options]])" returns="mixed" doc="Returns an array with all arguments defined in&#10;'definition'" ilk="function" src="filter.c"/>
      <scope name="tclink_send" signature="tclink_send(array params)" returns="void" doc="Send the transaction in for processing" ilk="function" src="php_tclink.c"/>
      <scope name="tclink_getversion" signature="tclink_getversion()" returns="string" doc="returns the API version information" ilk="function" src="php_tclink.c"/>
      <scope name="huffman_encode" signature="huffman_encode(string text)" returns="string" doc="Encode text using Huffman algorithm" ilk="function" src="huffman.c"/>
      <scope name="huffman_decode" signature="huffman_decode(string encoded)" returns="string" doc="Decode encoded text using Huffman algorithm" ilk="function" src="huffman.c"/>
      <scope name="huffman_encode_file" signature="huffman_encode_file(string file_in, string file_out)" returns="boolean" doc="Encode file using Huffman algorithm" ilk="function" src="huffman.c"/>
      <scope name="huffman_decode_file" signature="huffman_decode_file(string file_in, string file_out)" returns="boolean" doc="Decode encoded file using Huffman algorithm" ilk="function" src="huffman.c"/>
      <scope name="zeroconf_register" signature="zeroconf_register(string type, int port [, array txtrecords[, int ethinterface]])" returns="zeroconfref" doc="Register a service on the local network txtrecords&#10;should be an array of key value pairs where key is an" ilk="function" src="zeroconf.c"/>
      <scope name="zeroconf_browse" signature="zeroconf_browse(mixed type [, int timeout_usec[, int ethinterface]])" returns="array" doc="browse for services of type if type is an array browse&#10;for all services in the array" ilk="function" src="zeroconf.c"/>
      <scope name="zeroconf_get_all_services" signature="zeroconf_get_all_services(int timeout_usec)" returns="array" doc="This uses a metaquery to get a list of all services&#10;available on the local network Machines on the local" ilk="function" src="zeroconf.c"/>
      <scope name="zeroconf_browse_session_create" signature="zeroconf_browse_session_create(string type, function callback)" returns="browse_session" doc="create a session to browse for services of type call&#10;zeroconf browse session process to run the session&#10;callback will" ilk="function" src="zeroconf.c"/>
      <scope name="geoip_database_info" signature="geoip_database_info( [ int database ] )" returns="string" doc="Returns GeoIP Database information" ilk="function" src="geoip.c"/>
      <scope name="geoip_country_code_by_name" signature="geoip_country_code_by_name( string hostname )" returns="string" doc="Return the Country Code found in the GeoIP Database" ilk="function" src="geoip.c"/>
      <scope name="geoip_country_name_by_name" signature="geoip_country_name_by_name( string hostname )" returns="string" doc="Returns the Country name found in the GeoIP Database" ilk="function" src="geoip.c"/>
      <scope name="geoip_org_by_name" signature="geoip_org_by_name( string hostname )" returns="string" doc="Returns the Organization Name found in the GeoIP&#10;Database" ilk="function" src="geoip.c"/>
      <scope name="geoip_record_by_name" signature="geoip_record_by_name( string hostname )" returns="array" doc="Returns the detailed City information found in the&#10;GeoIP Database" ilk="function" src="geoip.c"/>
      <scope name="geoip_id_by_name" signature="geoip_id_by_name( string hostname )" returns="integer" doc="Returns the Net Speed found in the GeoIP Database" ilk="function" src="geoip.c"/>
      <scope name="geoip_region_by_name" signature="geoip_region_by_name( string hostname )" returns="array" doc="Returns the Country Code and region found in the GeoIP&#10;Database" ilk="function" src="geoip.c"/>
      <scope name="transliterate_filters_get" signature="transliterate_filters_get(void)" returns="array" doc="Returns an array with all available filters" ilk="function" src="translit.c"/>
      <scope name="transliterate" signature="transliterate(string string, array filter_list [, string charset_in [, string charset_out]])" returns="string" doc="Executes the specified filters on the input string" ilk="function" src="translit.c"/>
      <scope name="pop3_open" signature="pop3_open(string server_name, string user_name, string password)" returns="resource" doc="" ilk="function" src="pop3.c"/>
      <scope name="tidy_parse_string" signature="tidy_parse_string(string input)" returns="bool" doc="Parse a document stored in a string" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_error_buffer" signature="tidy_get_error_buffer([boolean detailed])" returns="string" doc="Return warnings and errors which occured parsing the&#10;specified document" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_output" signature="tidy_get_output()" returns="string" doc="Return a string representing the parsed tidy markup" ilk="function" src="tidy.c"/>
      <scope name="tidy_parse_file" signature="tidy_parse_file(string file [, bool use_include_path])" returns="boolean" doc="Parse markup in file or URI" ilk="function" src="tidy.c"/>
      <scope name="tidy_clean_repair" signature="tidy_clean_repair()" returns="boolean" doc="Execute configured cleanup and repair operations on&#10;parsed markup" ilk="function" src="tidy.c"/>
      <scope name="tidy_repair_string" signature="tidy_repair_string(string data [, string config_file])" returns="boolean" doc="Repair a string using an optionally provided&#10;configuration file" ilk="function" src="tidy.c"/>
      <scope name="tidy_repair_file" signature="tidy_repair_file(string filename [, string config_file [, bool use_include_path]])" returns="boolean" doc="Repair a file using an optionally provided&#10;configuration file" ilk="function" src="tidy.c"/>
      <scope name="tidy_diagnose" signature="tidy_diagnose()" returns="boolean" doc="Run configured diagnostics on parsed and repaired&#10;markup" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_release" signature="tidy_get_release()" returns="string" doc="Get release date version for Tidy library" ilk="function" src="tidy.c"/>
      <scope name="tidy_reset_config" signature="tidy_reset_config()" returns="string" doc="Restore Tidy configuration to default values" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_config" signature="tidy_get_config()" returns="array" doc="Get current Tidy configuarion" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_status" signature="tidy_get_status()" returns="int" doc="Get status of specfied document" ilk="function" src="tidy.c"/>
      <scope name="tidy_get_html_ver" signature="tidy_get_html_ver()" returns="int" doc="Get the Detected HTML version for the specified&#10;document" ilk="function" src="tidy.c"/>
      <scope name="tidy_is_xhtml" signature="tidy_is_xhtml()" returns="boolean" doc="Indicates if the document is a generic non HTML XHTML&#10;XML document" ilk="function" src="tidy.c"/>
      <scope name="tidy_error_count" signature="tidy_error_count()" returns="int" doc="Returns the Number of Tidy errors encountered for&#10;specified document" ilk="function" src="tidy.c"/>
      <scope name="tidy_warning_count" signature="tidy_warning_count()" returns="int" doc="Returns the Number of Tidy warnings encountered for&#10;specified document" ilk="function" src="tidy.c"/>
      <scope name="tidy_access_count" signature="tidy_access_count()" returns="int" doc="Returns the Number of Tidy accessibility warnings&#10;encountered for specified document" ilk="function" src="tidy.c"/>
      <scope name="tidy_config_count" signature="tidy_config_count()" returns="int" doc="Returns the Number of Tidy configuration errors&#10;encountered for specified document" ilk="function" src="tidy.c"/>
      <scope name="tidy_load_config" signature="tidy_load_config(string filename, string encoding)" returns="void" doc="Load an ASCII Tidy configuration file with the&#10;specified encoding" ilk="function" src="tidy.c"/>
      <scope name="tidy_set_encoding" signature="tidy_set_encoding(string encoding)" returns="boolean" doc="Set the input output character encoding for parsing&#10;markup Values include ascii latin raw utf iso mac win&#10;utf le" ilk="function" src="tidy.c"/>
      <scope name="tidy_save_config" signature="tidy_save_config(string filename)" returns="boolean" doc="Save current settings to named file Only non-default&#10;values are written" ilk="function" src="tidy.c"/>
      <scope name="tidy_setopt" signature="tidy_setopt(string option, mixed newvalue)" returns="boolean" doc="Updates the configuration settings for the specified&#10;tidy document" ilk="function" src="tidy.c"/>
      <scope name="tidy_getopt" signature="tidy_getopt(string option)" returns="mixed" doc="Returns the value of the specified configuration option&#10;for the tidy document" ilk="function" src="tidy.c"/>
      <scope name="enchant_broker_init" signature="enchant_broker_init()" returns="resource" doc="create a new broker object capable of requesting" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_free" signature="enchant_broker_free(resource broker)" returns="boolean" doc="Destroys the broker object and its dictionnaries" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_get_error" signature="enchant_broker_get_error(resource broker)" returns="string" doc="Returns the last error of the broker" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_list_dicts" signature="enchant_broker_list_dicts(resource broker)" returns="string" doc="Returns the last error of the broker" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_request_dict" signature="enchant_broker_request_dict(resource broker, string tag)" returns="resource" doc="create a new dictionary using tag the non-empty&#10;language tag you wish to request a dictionary for quot&#10;en US" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_request_pwl_dict" signature="enchant_broker_request_pwl_dict(resource dict, string filename)" returns="resource" doc="creates a dictionary using a PWL file A PWL file is&#10;personal word file one word per line It must" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_free_dict" signature="enchant_broker_free_dict(resource dict)" returns="resource" doc="Free the dictionary resource" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_dict_exists" signature="enchant_broker_dict_exists(resource broker, string tag)" returns="bool" doc="Wether a dictionary exists or not Using non-empty tag" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_set_ordering" signature="enchant_broker_set_ordering(resource broker, string tag, string ordering)" returns="bool" doc="Declares a preference of dictionaries to use for the&#10;language described referred to by 'tag' The ordering&#10;is a comma" ilk="function" src="enchant.c"/>
      <scope name="enchant_broker_describe" signature="enchant_broker_describe(resource broker)" returns="array" doc="Enumerates the Enchant providers and tells you some&#10;rudimentary information about them The same info is&#10;provided through phpinfo" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_quick_check" signature="enchant_dict_quick_check(resource dict, string word [, array &amp;suggestions])" returns="bool" doc="If the word is correctly spelled return true otherwise&#10;return false if suggestions variable is provided fill&#10;it with spelling" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_check" signature="enchant_dict_check(resource dict, string word)" returns="bool" doc="If the word is correctly spelled return true otherwise&#10;return false" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_suggest" signature="enchant_dict_suggest(resource dict, string word)" returns="array" doc="Will return a list of values if any of those&#10;pre-conditions are not met" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_add_to_personal" signature="enchant_dict_add_to_personal(resource dict, string word)" returns="void" doc="add 'word' to personal word list" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_add_to_session" signature="enchant_dict_add_to_session(resource dict, string word)" returns="void" doc="add 'word' to this spell-checking session" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_is_in_session" signature="enchant_dict_is_in_session(resource dict, string word)" returns="bool" doc="whether or not 'word' exists in this spelling-session" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_store_replacement" signature="enchant_dict_store_replacement(resource dict, string mis, string cor)" returns="void" doc="add a correction for 'mis' using 'cor' Notes that you&#10;replaced mis with cor so it's possibly more likely&#10;that" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_get_error" signature="enchant_dict_get_error(resource dict)" returns="string" doc="Returns the last error of the current spelling-session" ilk="function" src="enchant.c"/>
      <scope name="enchant_dict_describe" signature="enchant_dict_describe(resource dict)" returns="array" doc="Describes an individual dictionary 'dict'" ilk="function" src="enchant.c"/>
      <scope name="clips_function_call" signature="clips_function_call(string function_name [, string arguments])" returns="bool" doc="Allows CLIPS system functions deffunctions and generic&#10;functions to be called from PHP" ilk="function" src="clips.c"/>
      <scope name="clips_load" signature="clips_load(string file)" returns="bool" doc="Load a set of constructs into CLIPS from a file" ilk="function" src="clips.c"/>
      <scope name="clips_bload" signature="clips_bload(string file)" returns="bool" doc="Load a set of constructs into CLIPS from a binary CLIPS&#10;file" ilk="function" src="clips.c"/>
      <scope name="clips_bsave" signature="clips_bsave(string file)" returns="bool" doc="Save a binary image of constructs currently in the&#10;CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_build" signature="clips_build(string construct_string)" returns="bool" doc="Allows a construct to be defined" ilk="function" src="clips.c"/>
      <scope name="clips_eval" signature="clips_eval(string expression)" returns="bool" doc="Allows an expression to be evaluated" ilk="function" src="clips.c"/>
      <scope name="clips_save" signature="clips_save(string filename)" returns="bool" doc="Saves a set of constructs to the specified file" ilk="function" src="clips.c"/>
      <scope name="clips_get_auto_float_dividend" signature="clips_get_auto_float_dividend()" returns="bool" doc="Get the current value of the auto-float dividend&#10;behavior Equivalent of the CLIPS&#10;get-auto-float-dividend command" ilk="function" src="clips.c"/>
      <scope name="clips_get_dynamic_constraint_checking" signature="clips_get_dynamic_constraint_checking()" returns="bool" doc="Get the current value of the dynamic constraint&#10;checking behavior Equivalent of the CLIPS&#10;get-dynamic-constraint-checking command" ilk="function" src="clips.c"/>
      <scope name="clips_get_static_constraint_checking" signature="clips_get_static_constraint_checking()" returns="bool" doc="Get the current value of the static constraint checking&#10;behavior Equivalent of the CLIPS&#10;get-static-constraint-checking command" ilk="function" src="clips.c"/>
      <scope name="clips_get_sequence_operator_recognition" signature="clips_get_sequence_operator_recognition()" returns="bool" doc="Get the current value of the sequence operator&#10;recognition behavior Equivalent of the CLIPS&#10;get-sequence-operator-recognition command" ilk="function" src="clips.c"/>
      <scope name="clips_set_auto_float_dividend" signature="clips_set_auto_float_dividend(bool value)" returns="void" doc="Set the auto-float dividend behavior Equivalent of the&#10;CLIPS set-auto-float-dividend command" ilk="function" src="clips.c"/>
      <scope name="clips_set_dynamic_constraint_checking" signature="clips_set_dynamic_constraint_checking(bool value)" returns="void" doc="Set the dynamic constraint checking behavior Equivalent&#10;of the CLIPS set-dynamic-constraint-checking command" ilk="function" src="clips.c"/>
      <scope name="clips_set_sequence_operator_recognition" signature="clips_set_sequence_operator_recognition(bool value)" returns="void" doc="Set the sequence operator recognition behavior&#10;Equivalent of the CLIPS&#10;set-sequence-operator-recognition command" ilk="function" src="clips.c"/>
      <scope name="clips_set_static_constraint_checking" signature="clips_set_static_constraint_checking(bool value)" returns="void" doc="Set the static constraint checking behavior Equivalent&#10;of the CLIPS set-static-constraint-checking command" ilk="function" src="clips.c"/>
      <scope name="clips_reset" signature="clips_reset()" returns="void" doc="Reset the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_clear" signature="clips_clear()" returns="void" doc="Clear the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_run" signature="clips_run([int run_limit])" returns="int" doc="Execute rules in the agenda returns the number of rules&#10;that were fired" ilk="function" src="clips.c"/>
      <scope name="clips_dribble_active" signature="clips_dribble_active()" returns="bool" doc="Determines if the storing of dribble information is&#10;active" ilk="function" src="clips.c"/>
      <scope name="clips_dribble_off" signature="clips_dribble_off()" returns="bool" doc="Turns off the storing of dribble information" ilk="function" src="clips.c"/>
      <scope name="clips_dribble_on" signature="clips_dribble_on(string filename)" returns="bool" doc="Allows the dribble function of CLIPS to be turned on" ilk="function" src="clips.c"/>
      <scope name="clips_deftemplate_module" signature="clips_deftemplate_module(string deftemplate)" returns="string" doc="Get the name of the module in which a deftemplate is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_deftemplate_list" signature="clips_get_deftemplate_list([string module])" returns="array" doc="Returns a list of all deftemplates" ilk="function" src="clips.c"/>
      <scope name="clips_is_deftemplate_deletable" signature="clips_is_deftemplate_deletable(string deftemplate)" returns="bool" doc="Indicates whether or not a particular deftemplate can&#10;be deleted" ilk="function" src="clips.c"/>
      <scope name="clips_undeftemplate" signature="clips_undeftemplate(string deftemplate)" returns="bool" doc="Removes a deftemplate from CLIPS" ilk="function" src="clips.c"/>
      <scope name="clips_get_fact_list" signature="clips_get_fact_list([string type [, string module]])" returns="array" doc="Retrieve the fact list" ilk="function" src="clips.c"/>
      <scope name="clips_assert" signature="clips_assert(array values [, string deftemplate [, string module]])" returns="int" doc="Assert a fact returns the fact index of the created&#10;fact" ilk="function" src="clips.c"/>
      <scope name="clips_get_fact_duplication" signature="clips_get_fact_duplication()" returns="bool" doc="Get the current value of the fact duplication behavior" ilk="function" src="clips.c"/>
      <scope name="clips_get_fact_list_changed" signature="clips_get_fact_list_changed()" returns="bool" doc="Determines if any changes to the fact list have&#10;occurred" ilk="function" src="clips.c"/>
      <scope name="clips_load_facts" signature="clips_load_facts(string file)" returns="bool" doc="Loads a set of facts from a file into the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_load_facts_from_string" signature="clips_load_facts_from_string(string str)" returns="bool" doc="Loads a set of facts from a string into the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_save_facts" signature="clips_save_facts(string file [, int save_scope])" returns="bool" doc="Loads a set of facts from a string into the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_set_fact_duplication" signature="clips_set_fact_duplication(bool value)" returns="void" doc="Set the fact duplication behavior Equivalent of the&#10;CLIPS set-fact-duplication command" ilk="function" src="clips.c"/>
      <scope name="clips_set_fact_list_changed" signature="clips_set_fact_list_changed(bool value)" returns="void" doc="Set the internal boolean flag which indicates when&#10;changes to the fact list have occurred" ilk="function" src="clips.c"/>
      <scope name="clips_deffacts_module" signature="clips_deffacts_module(string deffacts_name)" returns="string" doc="Get the name of the module in which a particular&#10;deffacts is defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_deffacts_list" signature="clips_get_deffacts_list([string module])" returns="array" doc="Retrieve an array of the names of the deffacts in the&#10;CLIPS environment Limits by module if a module name" ilk="function" src="clips.c"/>
      <scope name="clips_is_deffacts_deletable" signature="clips_is_deffacts_deletable(string deffacts_name)" returns="array" doc="Tell whether or not a particular deffacts can be&#10;deleted" ilk="function" src="clips.c"/>
      <scope name="undeffacts" signature="undeffacts(string deffacts_name)" returns="bool" doc="Remove a deffacts construct from the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_refresh" signature="clips_refresh(string defrule)" returns="bool" doc="Refreshes a rule" ilk="function" src="clips.c"/>
      <scope name="clips_remove_break" signature="clips_remove_break(string defrule)" returns="bool" doc="Removes a breakpoint for the specified defrule" ilk="function" src="clips.c"/>
      <scope name="clips_set_break" signature="clips_set_break(string defrule)" returns="void" doc="Adds a breakpoint for the specified defrule" ilk="function" src="clips.c"/>
      <scope name="clips_defrule_has_breakpoint" signature="clips_defrule_has_breakpoint(string defrule)" returns="bool" doc="Tell whether or not a particular defrule has a&#10;breakpoint set" ilk="function" src="clips.c"/>
      <scope name="clips_defrule_module" signature="clips_defrule_module(string defrule)" returns="string" doc="Get the name of the module in which a defrule is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_defrule_list" signature="clips_get_defrule_list([string module])" returns="array" doc="Retrieve an array of the names of the defrules in the&#10;CLIPS environment Limits by module if a module name" ilk="function" src="clips.c"/>
      <scope name="clips_get_incremental_reset" signature="clips_get_incremental_reset()" returns="bool" doc="Get the current value of the incremental reset behavior&#10;Equivalent of the CLIPS get-incremental-reset command" ilk="function" src="clips.c"/>
      <scope name="clips_set_incremental_reset" signature="clips_set_incremental_reset(bool value)" returns="void" doc="Set the incremental reset behavior Equivalent of the&#10;CLIPS set-incremental-reset command" ilk="function" src="clips.c"/>
      <scope name="clips_is_defrule_deletable" signature="clips_is_defrule_deletable(string defrule)" returns="bool" doc="Tell whether or not a defrule can be deleted" ilk="function" src="clips.c"/>
      <scope name="clips_undefrule" signature="clips_undefrule(string defrule)" returns="bool" doc="Removes a defrule construct from CLIPS" ilk="function" src="clips.c"/>
      <scope name="clips_clear_focus_stack" signature="clips_clear_focus_stack()" returns="void" doc="Remove all modules from the focus stack Equivalent of&#10;the CLIPS clear-focus-stack command" ilk="function" src="clips.c"/>
      <scope name="clips_get_agenda_changed" signature="clips_get_agenda_changed()" returns="bool" doc="Tell whether or not there have been any changes to the&#10;agenda of rule activations" ilk="function" src="clips.c"/>
      <scope name="clips_set_agenda_changed" signature="clips_set_agenda_changed(bool value)" returns="void" doc="Set the internal boolean flag indicating that the&#10;agenda of rule activations has been changed" ilk="function" src="clips.c"/>
      <scope name="clips_get_focus" signature="clips_get_focus()" returns="string" doc="Get the name of the module associated with the current&#10;focus" ilk="function" src="clips.c"/>
      <scope name="clips_get_focus_stack" signature="clips_get_focus_stack()" returns="array" doc="Get an array of module names in the focus stack" ilk="function" src="clips.c"/>
      <scope name="clips_get_salience_evaluation" signature="clips_get_salience_evaluation()" returns="int" doc="Get the current value of the salience evaluation&#10;behavior Equivalent of the CLIPS&#10;get-salience-evaluation command" ilk="function" src="clips.c"/>
      <scope name="clips_set_salience_evaluation" signature="clips_set_salience_evaluation(int value)" returns="void" doc="Set the current value of the salience evaluation&#10;behavior Equivalent of the CLIPS&#10;set-salience-evaluation command" ilk="function" src="clips.c"/>
      <scope name="clips_set_strategy" signature="clips_set_strategy(int value)" returns="void" doc="Set the conflict resolution strategy" ilk="function" src="clips.c"/>
      <scope name="clips_get_strategy" signature="clips_get_strategy()" returns="int" doc="Get the current conflict resolution strategy Equivalent&#10;of the CLIPS get-strategy command" ilk="function" src="clips.c"/>
      <scope name="clips_pop_focus" signature="clips_pop_focus()" returns="string" doc="Remove the current focus from the focus stack and&#10;return the module name associated with that focus&#10;Equivalent to the" ilk="function" src="clips.c"/>
      <scope name="clips_focus" signature="clips_focus(string defmodule)" returns="bool" doc="Sets the current focus" ilk="function" src="clips.c"/>
      <scope name="clips_refresh_agenda" signature="clips_refresh_agenda(string defmodule)" returns="void" doc="Recomputes the salience values for all activations on&#10;the agenda and then reorders the agenda" ilk="function" src="clips.c"/>
      <scope name="clips_reorder_agenda" signature="clips_reorder_agenda(string defmodule)" returns="void" doc="Reorders the agenda based on the current conflict&#10;resolution strategy and current activation saliences" ilk="function" src="clips.c"/>
      <scope name="clips_defglobal_module" signature="clips_defglobal_module(string defglobal_name)" returns="string" doc="Get the name of the module in which a defglobal is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_defglobal_value" signature="clips_get_defglobal_value(string defglobal_name)" returns="mixed" doc="Retrieve the value of a defglobal" ilk="function" src="clips.c"/>
      <scope name="clips_get_globals_changed" signature="clips_get_globals_changed()" returns="bool" doc="Tell whether or not any changes to global variables&#10;have occurred" ilk="function" src="clips.c"/>
      <scope name="clips_get_reset_globals" signature="clips_get_reset_globals()" returns="bool" doc="Get the current value of the reset global variables&#10;behavior" ilk="function" src="clips.c"/>
      <scope name="clips_is_defglobal_deletable" signature="clips_is_defglobal_deletable(string defglobal_name)" returns="string" doc="Tell whether or not a particular defglobal can be&#10;deleted" ilk="function" src="clips.c"/>
      <scope name="clips_set_defglobal_value" signature="clips_set_defglobal_value(string defglobal_name, mixed value)" returns="void" doc="Set the value of a defglobal" ilk="function" src="clips.c"/>
      <scope name="clips_undefglobal" signature="clips_undefglobal(string defglobal_name)" returns="bool" doc="Remove a defglobal from the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_deffunction_module" signature="clips_deffunction_module(string deffunction_name)" returns="string" doc="Get the name of the module in which a deffunction is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_deffunction_list" signature="clips_get_deffunction_list([string module])" returns="array" doc="Retrieve a list of the current deffunctions in the&#10;CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_is_deffunction_deletable" signature="clips_is_deffunction_deletable(string deffunction_name)" returns="bool" doc="Tell whether or not a particular deffunction can be&#10;deleted" ilk="function" src="clips.c"/>
      <scope name="clips_undeffunction" signature="clips_undeffunction(string deffunction_name)" returns="bool" doc="Remove a deffunction from the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_defgeneric_module" signature="clips_defgeneric_module(string defgeneric_name)" returns="string" doc="Get the name of the module in which a defgeneric is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_defgeneric_list" signature="clips_get_defgeneric_list([string module])" returns="array" doc="Retrieve a list of the current defgenerics in the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_is_defgeneric_deletable" signature="clips_is_defgeneric_deletable(string defgeneric_name)" returns="bool" doc="Tell whether or not a particular defgeneric can be&#10;deleted" ilk="function" src="clips.c"/>
      <scope name="clips_undefgeneric" signature="clips_undefgeneric(string defgeneric_name)" returns="bool" doc="Remove a defgeneric from the CLIPS environment" ilk="function" src="clips.c"/>
      <scope name="clips_class_abstract" signature="clips_class_abstract(string defclass)" returns="bool" doc="Tell whether or not a class is abstract Equivalent to&#10;the CLIPS class-abstractp command" ilk="function" src="clips.c"/>
      <scope name="clips_class_reactive" signature="clips_class_reactive(string defclass)" returns="bool" doc="Tell whether or not a class is reactive Equivalent to&#10;the CLIPS class-reactivep command" ilk="function" src="clips.c"/>
      <scope name="clips_class_slots" signature="clips_class_slots(string defclass [, bool inherit])" returns="array" doc="Groups the names of the slots of a class into an array" ilk="function" src="clips.c"/>
      <scope name="clips_class_subclasses" signature="clips_class_subclasses(resource defclass [, bool inherit])" returns="array" doc="Groups the names of subclasses of a class into an array" ilk="function" src="clips.c"/>
      <scope name="clips_class_superclasses" signature="clips_class_superclasses(resource defclass [, bool inherit])" returns="array" doc="Groups the names of parent classes of a class into an&#10;array" ilk="function" src="clips.c"/>
      <scope name="clips_defclass_module" signature="clips_defclass_module(string defclass)" returns="string" doc="Get the name of the module in which a defclass is&#10;defined" ilk="function" src="clips.c"/>
      <scope name="clips_get_class_defaults_mode" signature="clips_get_class_defaults_mode()" returns="int" doc="Get the current class defaults mode" ilk="function" src="clips.c"/>
      <scope name="clips_set_class_defaults_mode" signature="clips_set_class_defaults_mode(int mode)" returns="void" doc="Set the current class defaults mode" ilk="function" src="clips.c"/>
      <scope name="clips_get_defclass_list" signature="clips_get_defclass_list([string module])" returns="array" doc="Retrieve a list of the current defclasss in the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_is_defclass_deletable" signature="clips_is_defclass_deletable(string defclass)" returns="bool" doc="Tell whether or not a particular class and all its&#10;subclasses can be deleted" ilk="function" src="clips.c"/>
      <scope name="clips_subclass" signature="clips_subclass(string defclass1, string defclass2)" returns="bool" doc="Returns TRUE if the first defclass is a subclass of the&#10;second defclass FALSE otherwise" ilk="function" src="clips.c"/>
      <scope name="clips_superclass" signature="clips_superclass(string defclass1, string defclass2)" returns="bool" doc="Returns TRUE if the first defclass is a parent to the&#10;second defclass FALSE otherwise" ilk="function" src="clips.c"/>
      <scope name="clips_undefclass" signature="clips_undefclass(string defclass)" returns="bool" doc="Remove a class and all its subclasses from the CLIPS&#10;environment" ilk="function" src="clips.c"/>
      <scope name="clips_get_instances_changed" signature="clips_get_instances_changed()" returns="bool" doc="Determine whether or not any changes to instances of&#10;user-defined instances have occurred" ilk="function" src="clips.c"/>
      <scope name="clips_set_instances_changed" signature="clips_set_instances_changed(bool value)" returns="void" doc="Set the internal boolean flag which indicates when&#10;changes to instances of user-defined classes have&#10;occurred" ilk="function" src="clips.c"/>
      <scope name="clips_get_instance_list" signature="clips_get_instance_list(string class [, bool include_subclasses])" returns="array" doc="Retrieves a list of instances in the CLIPS environment&#10;of the given defclass" ilk="function" src="clips.c"/>
      <scope name="clips_create_instance" signature="clips_create_instance(mixed values, string defclass, string name [, string module])" returns="bool" doc="Create a new instance with the specified name of the&#10;specified class" ilk="function" src="clips.c"/>
      <scope name="clips_make_instance" signature="clips_make_instance(string make_command [, string module])" returns="bool" doc="Create and initialize an instance of a class from a&#10;string" ilk="function" src="clips.c"/>
      <scope name="clips_get_defmodule_list" signature="clips_get_defmodule_list()" returns="array" doc="Retrieve a list of defmodules in the CLIPS environemnt" ilk="function" src="clips.c"/>
      <scope name="clips_set_current_module" signature="clips_set_current_module(string module)" returns="void" doc="Set the current module" ilk="function" src="clips.c"/>
      <scope name="idn_to_ascii" signature="idn_to_ascii(string arg)" returns="string" doc="Converts an UTF- encoded string to corresponding ASCII&#10;name" ilk="function" src="idn.c"/>
      <scope name="idn_to_utf8" signature="idn_to_utf8(string arg)" returns="string" doc="Converts an ASCII compatible domain name to UTF-" ilk="function" src="idn.c"/>
      <scope name="PDF_activate_item" signature="PDF_activate_item(resource p, int id)" returns="bool" doc="Activate a previously created structure element or&#10;other content item" ilk="function" src="pdf.c"/>
      <scope name="PDF_create_3dview" signature="PDF_create_3dview(resource p, string username, string optlist)" returns="int" doc="Create a D view requires PDF Returns A D view handle or&#10;- in PHP on error" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_load_3ddata" signature="PDF_load_3ddata(resource p, string filename, string optlist)" returns="int" doc="Load a D model from a disk-based or virtual file&#10;requires PDF Returns A D handle or - in PHP" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_bookmark" signature="PDF_add_bookmark(resource p, string text, int parent, int open)" returns="int" doc="Deprecated use PDF create bookmark" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_launchlink" signature="PDF_add_launchlink(resource p, double llx, double lly, double urx, double ury, string filename)" returns="bool" doc="Deprecated use PDF create action and PDF create&#10;annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_locallink" signature="PDF_add_locallink(resource p, double llx, double lly, double urx, double ury, int page, string optlist)" returns="bool" doc="Deprecated use PDF create action and PDF create&#10;annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_nameddest" signature="PDF_add_nameddest(resource p, string name, string optlist)" returns="bool" doc="Create a named destination on an arbitrary page in the&#10;current document" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_note" signature="PDF_add_note(resource p, double llx, double lly, double urx, double ury, string contents, string title, string icon, int open)" returns="bool" doc="Deprecated use PDF create annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_pdflink" signature="PDF_add_pdflink(resource p, double llx, double lly, double urx, double ury, string filename, int page, string optlist)" returns="bool" doc="Deprecated use PDF create action and PDF create&#10;annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_table_cell" signature="PDF_add_table_cell(resource p, int table, int column, int row, string text, string optlist)" returns="int" doc="Add a cell to a new or existing table Returns A table&#10;handle which can be used in subsequent table-related" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_textflow" signature="PDF_add_textflow(resource p, int textflow, string text, string optlist)" returns="int" doc="Create a Textflow object or add text and explicit&#10;options to an existing Textflow Returns A Textflow&#10;handle or -" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_thumbnail" signature="PDF_add_thumbnail(resource p, int image)" returns="bool" doc="Add an existing image as thumbnail for the current page" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_add_weblink" signature="PDF_add_weblink(resource p, double llx, double lly, double urx, double ury, string url)" returns="bool" doc="Deprecated use PDF create action and PDF create&#10;annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_arc" signature="PDF_arc(resource p, double x, double y, double r, double alpha, double beta)" returns="bool" doc="Draw a counterclockwise circular arc segment" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_arcn" signature="PDF_arcn(resource p, double x, double y, double r, double alpha, double beta)" returns="bool" doc="Draw a clockwise circular arc segment" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_attach_file" signature="PDF_attach_file(resource p, double llx, double lly, double urx, double ury, string filename, string description, string author, string mimetype, string icon)" returns="bool" doc="Deprecated use PDF create annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_document" signature="PDF_begin_document(resource p, string filename, string optlist)" returns="int" doc="Create a new PDF file subject to various options&#10;Returns - in PHP on error and otherwise" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_font" signature="PDF_begin_font(resource p, string fontname, double a, double b, double c, double d, double e, double f, string optlist)" returns="bool" doc="Start a Type font definition" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_glyph" signature="PDF_begin_glyph(resource p, string glyphname, double wx, double llx, double lly, double urx, double ury)" returns="bool" doc="Start a glyph definition for a Type font" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_item" signature="PDF_begin_item(resource p, string tag, string optlist)" returns="int" doc="Open a structure element or other content item with&#10;attributes supplied as options Returns An item handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_layer" signature="PDF_begin_layer(resource p, int layer)" returns="bool" doc="Start a layer for subsequent output on the page&#10;requires PDF" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_page" signature="PDF_begin_page(resource p, double width, double height)" returns="bool" doc="Deprecated use PDF begin page ext" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_page_ext" signature="PDF_begin_page_ext(resource p, double width, double height, string optlist)" returns="bool" doc="Add a new page to the document and specify various&#10;options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_pattern" signature="PDF_begin_pattern(resource p, double width, double height, double xstep, double ystep, int painttype)" returns="int" doc="Start a pattern definition Returns A pattern handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_template" signature="PDF_begin_template(resource p, double width, double height)" returns="int" doc="Deprecated use PDF begin template ext" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_begin_template_ext" signature="PDF_begin_template_ext(resource p, double width, double height, string optlist)" returns="int" doc="Start a template definition Returns A template handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_circle" signature="PDF_circle(resource p, double x, double y, double r)" returns="bool" doc="Draw a circle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_clip" signature="PDF_clip(resource p)" returns="bool" doc="Use the current path as clipping path and terminate the&#10;path" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_close" signature="PDF_close(resource p)" returns="bool" doc="Deprecated use PDF end document" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_close_image" signature="PDF_close_image(resource p, int image)" returns="bool" doc="Close an image" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_close_pdi" signature="PDF_close_pdi(resource p, int doc)" returns="bool" doc="Deprecated use PDF close pdi document" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_close_pdi_document" signature="PDF_close_pdi_document(resource p, int doc)" returns="bool" doc="Close all open PDI page handles and close the input PDF&#10;document" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_close_pdi_page" signature="PDF_close_pdi_page(resource p, int page)" returns="bool" doc="Close the page handle and free all page-related&#10;resources" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_closepath" signature="PDF_closepath(resource p)" returns="bool" doc="Close the current path" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_closepath_fill_stroke" signature="PDF_closepath_fill_stroke(resource p)" returns="bool" doc="Close the path fill and stroke it" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_closepath_stroke" signature="PDF_closepath_stroke(resource p)" returns="bool" doc="Close the path and stroke it" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_concat" signature="PDF_concat(resource p, double a, double b, double c, double d, double e, double f)" returns="bool" doc="Apply a transformation matrix to the current coordinate&#10;system" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_continue_text" signature="PDF_continue_text(resource p, string text)" returns="bool" doc="Same as PDF continue text but with explicit string&#10;length" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_action" signature="PDF_create_action(resource p, string type, string optlist)" returns="int" doc="Create an action which can be applied to various&#10;objects and events Returns An action handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_annotation" signature="PDF_create_annotation(resource p, double llx, double lly, double urx, double ury, string type, string optlist)" returns="bool" doc="Create a rectangular annotation on the current page" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_bookmark" signature="PDF_create_bookmark(resource p, string text, string optlist)" returns="int" doc="Create a bookmark subject to various options Returns A&#10;handle for the generated bookmark" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_field" signature="PDF_create_field(resource p, double llx, double lly, double urx, double ury, string name, string type, string optlist)" returns="bool" doc="Create a form field on the current page subject to&#10;various options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_fieldgroup" signature="PDF_create_fieldgroup(resource p, string name, string optlist)" returns="bool" doc="Create a form field group subject to various options&#10;Returns A graphics state handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_gstate" signature="PDF_create_gstate(resource p, string optlist)" returns="int" doc="Create a graphics state object subject to various&#10;options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_pvf" signature="PDF_create_pvf(resource p, string filename, string data, string optlist)" returns="bool" doc="Create a named virtual read-only file from data&#10;provided in memory" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_create_textflow" signature="PDF_create_textflow(resource p, string text, string optlist)" returns="int" doc="Create a Textflow object from text contents inline&#10;options and explicit options Returns A Textflow handle&#10;or - in PHP" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_curveto" signature="PDF_curveto(resource p, double x_1, double y_1, double x_2, double y_2, double x_3, double y_3)" returns="bool" doc="Draw a Bezier curve from the current point using more&#10;control points" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_define_layer" signature="PDF_define_layer(resource p, string name, string optlist)" returns="int" doc="Create a new layer definition requires PDF Returns A&#10;layer handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_delete_pvf" signature="PDF_delete_pvf(resource p, string filename)" returns="int" doc="Delete a named virtual file and free its data&#10;structures but not the contents Returns - in PHP if&#10;the" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_delete_table" signature="PDF_delete_table(resource p, int table, string optlist)" returns="bool" doc="Delete a table and all associated data structures" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_delete_textflow" signature="PDF_delete_textflow(resource p, int textflow)" returns="bool" doc="Delete a textflow and all associated data structures" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_encoding_set_char" signature="PDF_encoding_set_char(resource p, string encoding, int slot, string glyphname, int uv)" returns="bool" doc="Add a glyph name and or Unicode value to a custom&#10;encoding" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_document" signature="PDF_end_document(resource p, string optlist)" returns="bool" doc="Close the generated PDF document and apply various&#10;options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_font" signature="PDF_end_font(resource p)" returns="bool" doc="Terminate a Type font definition" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_glyph" signature="PDF_end_glyph(resource p)" returns="bool" doc="Terminate a glyph definition for a Type font" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_item" signature="PDF_end_item(resource p, int id)" returns="bool" doc="Close a structure element or other content item" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_layer" signature="PDF_end_layer(resource p)" returns="bool" doc="Deactivate all active layers requires PDF" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_mc" signature="PDF_end_mc(resource p)" returns="bool" doc="End the least recently opened marked content sequence&#10;unsupported" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_page" signature="PDF_end_page(resource p)" returns="bool" doc="Deprecated use PDF end page ext" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_page_ext" signature="PDF_end_page_ext(resource p, string optlist)" returns="bool" doc="Finish a page and apply various options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_pattern" signature="PDF_end_pattern(resource p)" returns="bool" doc="Finish a pattern definition" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_end_template" signature="PDF_end_template(resource p)" returns="bool" doc="Finish a template definition" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_endpath" signature="PDF_endpath(resource p)" returns="bool" doc="End the current path without filling or stroking it" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fill" signature="PDF_fill(resource p)" returns="bool" doc="Fill the interior of the path with the current fill&#10;color" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fill_imageblock" signature="PDF_fill_imageblock(resource p, int page, string blockname, int image, string optlist)" returns="int" doc="Fill an image block with variable data according to its&#10;properties Returns - in PHP on error and otherwise" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fill_pdfblock" signature="PDF_fill_pdfblock(resource p, int page, string blockname, int contents, string optlist)" returns="int" doc="Fill a PDF block with variable data according to its&#10;properties Returns - in PHP on error and otherwise" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fill_stroke" signature="PDF_fill_stroke(resource p)" returns="bool" doc="Fill and stroke the path with the current fill and&#10;stroke color" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fill_textblock" signature="PDF_fill_textblock(resource p, int page, string blockname, string text, string optlist)" returns="int" doc="Fill a text block with variable data according to its&#10;properties Returns - in PHP on error and otherwise" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_findfont" signature="PDF_findfont(resource p, string fontname, string encoding, int embed)" returns="int" doc="Deprecated use PDF load font" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fit_image" signature="PDF_fit_image(resource p, int image, double x, double y, string optlist)" returns="bool" doc="Place an image or template on the page subject to&#10;various options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fit_pdi_page" signature="PDF_fit_pdi_page(resource p, int page, double x, double y, string optlist)" returns="bool" doc="Place an imported PDF page on the page subject to&#10;various options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fit_table" signature="PDF_fit_table(resource p, int table, double llx, double lly, double urx, double ury, string optlist)" returns="string" doc="Fully or partially place a table on the page Returns A&#10;string which specifies the reason for returning" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fit_textflow" signature="PDF_fit_textflow(resource p, int textflow, double llx, double lly, double urx, double ury, string optlist)" returns="string" doc="Format the next portion of a textflow into a&#10;rectangular area Returns A string which specifies the&#10;reason for returning" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_fit_textline" signature="PDF_fit_textline(resource p, string text, double x, double y, string optlist)" returns="bool" doc="Place a single line of text at position x y subject to&#10;various options" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_apiname" signature="PDF_get_apiname(resource p)" returns="string" doc="Get the name of the API function which threw the last&#10;exception or failed Returns Name of an API function" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_buffer" signature="PDF_get_buffer(resource p)" returns="string" doc="Get the contents of the PDF output buffer Returns A&#10;buffer full of binary PDF data for consumption by the" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_errmsg" signature="PDF_get_errmsg(resource p)" returns="string" doc="Get the text of the last thrown exception or the reason&#10;of a failed function call Returns Text containing the" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_errnum" signature="PDF_get_errnum(resource p)" returns="int" doc="Get the number of the last thrown exception or the&#10;reason of a failed function call Returns The error&#10;code" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_parameter" signature="PDF_get_parameter(resource p, string key, double modifier)" returns="string" doc="Get the contents of some PDFlib parameter with string&#10;type Returns The string value of the parameter as a&#10;hypertext" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_pdi_parameter" signature="PDF_get_pdi_parameter(resource p, string key, int doc, int page, int reserved)" returns="string" doc="Deprecated use PDF pcos get string" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_pdi_value" signature="PDF_get_pdi_value(resource p, string key, int doc, int page, int reserved)" returns="double" doc="Deprecated use PDF pcos get number" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_get_value" signature="PDF_get_value(resource p, string key, double modifier)" returns="double" doc="Get the value of some PDFlib parameter with numerical&#10;type Returns The numerical value of the parameter" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_info_font" signature="PDF_info_font(resource p, int font, string keyword, string optlist)" returns="double" doc="Query detailed information about a loaded font Returns&#10;The value of some font property as requested by&#10;keyword" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_info_matchbox" signature="PDF_info_matchbox(resource p, string boxname, int num, string keyword)" returns="double" doc="Query information about a matchbox on the current page&#10;Returns The value of some matchbox parameter as&#10;requested by keyword" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_info_table" signature="PDF_info_table(resource p, int table, string keyword)" returns="double" doc="Retrieve table information related to the most recently&#10;placed table instance Returns The value of some table&#10;parameter as requested" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_info_textflow" signature="PDF_info_textflow(resource p, int textflow, string keyword)" returns="double" doc="Query the current state of a Textflow Returns The value&#10;of some Textflow parameter as requested by keyword" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_info_textline" signature="PDF_info_textline(resource p, string text, string keyword, string optlist)" returns="double" doc="Query geometrical sizes of a textline at position" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_initgraphics" signature="PDF_initgraphics(resource p)" returns="bool" doc="Perform textline formatting and query the resulting&#10;metrics Returns The value of some text metric value as&#10;requested by keyword" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_lineto" signature="PDF_lineto(resource p, double x, double y)" returns="bool" doc="Draw a line from the current point to another point" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_load_font" signature="PDF_load_font(resource p, string fontname, string encoding, string optlist)" returns="int" doc="Search for a font and prepare it for later use Returns&#10;A font handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_load_iccprofile" signature="PDF_load_iccprofile(resource p, string profilename, string optlist)" returns="int" doc="Search for an ICC profile and prepare it for later use&#10;Returns A profile handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_load_image" signature="PDF_load_image(resource p, string imagetype, string filename, string optlist)" returns="int" doc="Open a disk-based or virtual image file subject to&#10;various options Returns An image handle or - in PHP on" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_makespotcolor" signature="PDF_makespotcolor(resource p, string spotname)" returns="int" doc="Find a built-in spot color name or make a named spot&#10;color from the current fill color Returns A color" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_moveto" signature="PDF_moveto(resource p, double x, double y)" returns="bool" doc="Set the current point" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_open_ccitt" signature="PDF_open_ccitt(resource p, string filename, int width, int height, int BitReverse, int K, int BlackIs1)" returns="int" doc="Deprecated use PDF load image" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_open_file" signature="PDF_open_file(resource p, string filename)" returns="int" doc="Deprecated use PDF begin document" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_open_image_file" signature="PDF_open_image_file(resource p, string imagetype, string filename, string stringparam, int intparam)" returns="int" doc="Deprecated use PDF load image" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_open_pdi_document" signature="PDF_open_pdi_document(resource p, string filename, string optlist)" returns="int" doc="Open a disk-based or virtual PDF document and prepare&#10;it for later use Returns A PDI document handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_open_pdi_page" signature="PDF_open_pdi_page(resource p, int doc, int pagenumber, string optlist)" returns="int" doc="Prepare a page for later use with PDF fit pdi page&#10;Returns A page handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_pcos_get_number" signature="PDF_pcos_get_number(resource p, int doc, string path)" returns="double" doc="Get the value of a pCOS path with type number or&#10;boolean Returns The numerical value of the object&#10;identified" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_pcos_get_string" signature="PDF_pcos_get_string(resource p, int doc, string path)" returns="string" doc="Get the value of a pCOS path with type name string or&#10;boolean Returns A string with the value of" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_pcos_get_stream" signature="PDF_pcos_get_stream(resource p, int doc, string optlist, string path)" returns="string" doc="Get the contents of a pCOS path with type stream&#10;fstream or string Returns The unencrypted data&#10;contained in the" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_place_image" signature="PDF_place_image(resource p, int image, double x, double y, double scale)" returns="bool" doc="Deprecated use PDF fit image" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_place_pdi_page" signature="PDF_place_pdi_page(resource p, int page, double x, double y, double sx, double sy)" returns="bool" doc="Deprecated use PDF fit pdi page" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_process_pdi" signature="PDF_process_pdi(resource p, int doc, int page, string optlist)" returns="int" doc="Process certain elements of an imported PDF document&#10;Returns - in PHP on error and otherwise" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_rect" signature="PDF_rect(resource p, double x, double y, double width, double height)" returns="bool" doc="Draw a rectangle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_restore" signature="PDF_restore(resource p)" returns="bool" doc="Restore the most recently saved graphics state from the&#10;stack" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_resume_page" signature="PDF_resume_page(resource p, string optlist)" returns="bool" doc="Resume a page to add more content to it" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_rotate" signature="PDF_rotate(resource p, double phi)" returns="bool" doc="Rotate the coordinate system" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_save" signature="PDF_save(resource p)" returns="bool" doc="Save the current graphics state to a stack" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_scale" signature="PDF_scale(resource p, double sx, double sy)" returns="bool" doc="Scale the coordinate system" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_border_color" signature="PDF_set_border_color(resource p, double red, double green, double blue)" returns="bool" doc="Deprecated use PDF create annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_border_dash" signature="PDF_set_border_dash(resource p, double b, double w)" returns="bool" doc="Deprecated use PDF create annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_border_style" signature="PDF_set_border_style(resource p, string style, double width)" returns="bool" doc="Deprecated use PDF create annotation" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_gstate" signature="PDF_set_gstate(resource p, int gstate)" returns="bool" doc="Activate a graphics state object" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_info" signature="PDF_set_info(resource p, string key, string value)" returns="bool" doc="Like PDF set info but with explicit string length" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_layer_dependency" signature="PDF_set_layer_dependency(resource p, string type, string optlist)" returns="bool" doc="Define hierarchical group and lock conditions among&#10;layers requires PDF" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_parameter" signature="PDF_set_parameter(resource p, string key, string value)" returns="bool" doc="Set some PDFlib parameter with string type" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_text_pos" signature="PDF_set_text_pos(resource p, double x, double y)" returns="bool" doc="Set the position for text output on the page" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_set_value" signature="PDF_set_value(resource p, string key, double value)" returns="bool" doc="Set the value of some PDFlib parameter with numerical&#10;type" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setcolor" signature="PDF_setcolor(resource p, string fstype, string colorspace, double c1, double c2, double c3, double c4)" returns="bool" doc="Set the current color space and color" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setdash" signature="PDF_setdash(resource p, double b, double w)" returns="bool" doc="Set the current dash pattern" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setdashpattern" signature="PDF_setdashpattern(resource p, string optlist)" returns="bool" doc="Set a dash pattern defined by an option list" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setflat" signature="PDF_setflat(resource p, double flatness)" returns="bool" doc="Set the flatness parameter" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setfont" signature="PDF_setfont(resource p, int font, double fontsize)" returns="bool" doc="Set the current font in the specified size" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setgray" signature="PDF_setgray(resource p, double gray)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setgray_fill" signature="PDF_setgray_fill(resource p, double gray)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setgray_stroke" signature="PDF_setgray_stroke(resource p, double gray)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setlinecap" signature="PDF_setlinecap(resource p, int linecap)" returns="bool" doc="Set the linecap parameter" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setlinejoin" signature="PDF_setlinejoin(resource p, int linejoin)" returns="bool" doc="Set the linejoin parameter" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setlinewidth" signature="PDF_setlinewidth(resource p, double width)" returns="bool" doc="Set the current linewidth" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setmatrix" signature="PDF_setmatrix(resource p, double a, double b, double c, double d, double e, double f)" returns="bool" doc="Explicitly set the current transformation matrix" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setmiterlimit" signature="PDF_setmiterlimit(resource p, double miter)" returns="bool" doc="Set the miter limit" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setrgbcolor" signature="PDF_setrgbcolor(resource p, double red, double green, double blue)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setrgbcolor_fill" signature="PDF_setrgbcolor_fill(resource p, double red, double green, double blue)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_setrgbcolor_stroke" signature="PDF_setrgbcolor_stroke(resource p, double red, double green, double blue)" returns="bool" doc="Deprecated use PDF setcolor" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_shading" signature="PDF_shading(resource p, string shtype, double x_0, double y_0, double x_1, double y_1, double c_1, double c_2, double c_3, double c_4, string optlist)" returns="int" doc="Define a blend from the current fill color to another&#10;color requires PDF or above" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_shading_pattern" signature="PDF_shading_pattern(resource p, int shading, string optlist)" returns="int" doc="Define a shading pattern using a shading object&#10;requires PDF Returns A shading handle" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_shfill" signature="PDF_shfill(resource p, int shading)" returns="bool" doc="Fill an area with a shading based on a shading object&#10;requires PDF" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_show" signature="PDF_show(resource p, string text)" returns="bool" doc="Same as PDF show but with explicit string length" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_show_boxed" signature="PDF_show_boxed(resource p, string text, double left, double top, double width, double height, string hmode, string feature)" returns="int" doc="Deprecated use PDF fit textline or PDF fit textflow" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_show_xy" signature="PDF_show_xy(resource p, string text, double x, double y)" returns="bool" doc="Same as PDF show xy but with explicit string length" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_skew" signature="PDF_skew(resource p, double alpha, double beta)" returns="bool" doc="Skew the coordinate system" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_stringwidth" signature="PDF_stringwidth(resource p, string text, int font, double fontsize)" returns="double" doc="Same as PDF stringwidth but with explicit string length" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_stroke" signature="PDF_stroke(resource p)" returns="bool" doc="Stroke the path with the current color and line width&#10;and clear it" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_suspend_page" signature="PDF_suspend_page(resource p, string optlist)" returns="bool" doc="Suspend the current page so that it can later be&#10;resumed" ilk="function" src="php_wrapped.c"/>
      <scope name="PDF_translate" signature="PDF_translate(resource p, double tx, double ty)" returns="bool" doc="Translate the origin of the coordinate system" ilk="function" src="php_wrapped.c"/>
      <scope name="pdf_add_bookmark" signature="pdf_add_bookmark(int pdfdoc, string text [, int parent, int open])" returns="int" doc="Adds bookmark for current page" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_launchlink" signature="pdf_add_launchlink(int pdfdoc, float llx, float lly, float urx, float ury, string filename)" returns="void" doc="Adds link to web resource" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_locallink" signature="pdf_add_locallink(int pdfdoc, float llx, float lly, float urx, float ury, int page, string dest)" returns="void" doc="Adds link to web resource" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_nameddest" signature="pdf_add_nameddest(resource p, string name, string optlist)" returns="bool" doc="Create a named destination on an arbitrary page in the&#10;current document" ilk="function" src="pdf.c"/>
      <scope name="pdf_add_note" signature="pdf_add_note(int pdfdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)" returns="void" doc="Sets annotation" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_pdflink" signature="pdf_add_pdflink(int pdfdoc, float llx, float lly, float urx, float ury, string filename, int page, string dest)" returns="void" doc="Adds link to PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_thumbnail" signature="pdf_add_thumbnail(int pdf, int image)" returns="void" doc="Add an existing image as thumbnail for the current page" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_weblink" signature="pdf_add_weblink(int pdfdoc, float llx, float lly, float urx, float ury, string url)" returns="void" doc="Adds link to web resource" ilk="function" src="pdf4.c"/>
      <scope name="pdf_arc" signature="pdf_arc(int pdfdoc, float x, float y, float radius, float start, float end)" returns="void" doc="Draws an arc" ilk="function" src="pdf4.c"/>
      <scope name="pdf_arcn" signature="pdf_arcn(int pdf, float x, float y, float r, float alpha, float beta)" returns="void" doc="Draw a clockwise circular arc from alpha to beta&#10;degrees" ilk="function" src="pdf4.c"/>
      <scope name="pdf_attach_file" signature="pdf_attach_file(int pdf, float lly, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon)" returns="void" doc="Adds a file attachment annotation at the rectangle&#10;specified by his lower left and upper right corners" ilk="function" src="pdf4.c"/>
      <scope name="pdf_begin_document" signature="pdf_begin_document(resource p, string filname, string optlist)" returns="int" doc="Create a new PDF file subject to various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_font" signature="pdf_begin_font(string fontname, double a, double b,&#10;    double c, double d, double e, double f, string optlist)" returns="bool" doc="Start a Type font definition" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_glyph" signature="pdf_begin_glyph(resource p, string glyphname, double wx, double llx, double lly, double urx, double ury)" returns="bool" doc="Start a glyph definition for a Type font" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_item" signature="pdf_begin_item(resource p, string tag, string optlist)" returns="int" doc="Open a structure element or other content item with&#10;attributes supplied as options" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_layer" signature="pdf_begin_layer(resource p, int layer)" returns="bool" doc="Start a new layer for subsequent output on the page&#10;requires PDF" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_page" signature="pdf_begin_page(int pdfdoc, float width, float height)" returns="void" doc="Starts page" ilk="function" src="pdf4.c"/>
      <scope name="pdf_begin_page_ext" signature="pdf_begin_page_ext(resource p, double width, double height, string optlist)" returns="bool" doc="Add a new page to the document and specify various&#10;options" ilk="function" src="pdf.c"/>
      <scope name="pdf_begin_pattern" signature="pdf_begin_pattern(int pdf, float width, float height, float xstep, float ystep, int painttype)" returns="int" doc="Start a new pattern definition" ilk="function" src="pdf4.c"/>
      <scope name="pdf_begin_template" signature="pdf_begin_template(int pdf, float width, float height)" returns="int" doc="Start a new template definition" ilk="function" src="pdf4.c"/>
      <scope name="pdf_circle" signature="pdf_circle(int pdfdoc, float x, float y, float radius)" returns="void" doc="Draws a circle" ilk="function" src="pdf4.c"/>
      <scope name="pdf_clip" signature="pdf_clip(int pdfdoc)" returns="void" doc="Clips to current path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_close" signature="pdf_close(int pdfdoc)" returns="void" doc="Closes the pdf document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_close_image" signature="pdf_close_image(int pdf, int pdfimage)" returns="void" doc="Closes the PDF image" ilk="function" src="pdf4.c"/>
      <scope name="pdf_close_pdi" signature="pdf_close_pdi(int pdf, int doc)" returns="void" doc="Close all open page handles and close the input PDF&#10;document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_close_pdi_page" signature="pdf_close_pdi_page(int pdf, int page)" returns="void" doc="Close the page handle and free all page-related&#10;resources" ilk="function" src="pdf4.c"/>
      <scope name="pdf_closepath" signature="pdf_closepath(int pdfdoc)" returns="void" doc="Close path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_closepath_fill_stroke" signature="pdf_closepath_fill_stroke(int pdfdoc)" returns="void" doc="Close fill and stroke current path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_closepath_stroke" signature="pdf_closepath_stroke(int pdfdoc)" returns="void" doc="Close path and draw line along path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_concat" signature="pdf_concat(int pdf, float a, float b, float c, float d, float e, float f)" returns="void" doc="Concatenates a matrix to the current transformation&#10;matrix for text and graphics" ilk="function" src="pdf4.c"/>
      <scope name="pdf_continue_text" signature="pdf_continue_text(int pdfdoc, string text)" returns="void" doc="Output text in next line" ilk="function" src="pdf4.c"/>
      <scope name="pdf_create_action" signature="pdf_create_action(resource p, string type, string optlist)" returns="int" doc="Create an action which can be applied to various&#10;objects and events" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_annotation" signature="pdf_create_annotation(resource p, double llx, double lly, double urx, double ury, string type, string optlist)" returns="bool" doc="Create a rectangular annotation on the current page" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_bookmark" signature="pdf_create_bookmark(resource p, string text, string optlist)" returns="int" doc="Create a bookmark subject to various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_field" signature="pdf_create_field(resource p, double llx, double lly, double urx, double ury, string name, string type, string optlist)" returns="bool" doc="Create a form field on the current page subject to&#10;various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_fieldgroup" signature="pdf_create_fieldgroup(resource p, string name, string optlist)" returns="bool" doc="Create a form field group subject to various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_gstate" signature="pdf_create_gstate(resource p, string optlist)" returns="int" doc="Create a graphics state object subject to various&#10;options" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_pvf" signature="pdf_create_pvf(resource p, string filename, string data, string optlist)" returns="bool" doc="Create a named virtual read-only file from data&#10;provided in memory" ilk="function" src="pdf.c"/>
      <scope name="pdf_create_textflow" signature="pdf_create_textflow(resource p, string text, string optlist)" returns="int" doc="Preprocess text for later formatting and create a&#10;textflow object" ilk="function" src="pdf.c"/>
      <scope name="pdf_curveto" signature="pdf_curveto(int pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3)" returns="void" doc="Draws a curve" ilk="function" src="pdf4.c"/>
      <scope name="pdf_define_layer" signature="pdf_define_layer(resource p, string name, string optlist)" returns="bool" doc="Create a new layer definition requires PDF" ilk="function" src="pdf.c"/>
      <scope name="pdf_delete" signature="pdf_delete(int p)" returns="bool" doc="Delete a PDFlib object and free all internal resources" ilk="function" src="pdf7.c"/>
      <scope name="pdf_delete_pvf" signature="pdf_delete_pvf(resource p, string filname)" returns="int" doc="Delete a named virtual file and free its data&#10;structures but not the contents" ilk="function" src="pdf.c"/>
      <scope name="pdf_delete_textflow" signature="pdf_delete_textflow(resource p, int textflow)" returns="bool" doc="Delete a textflow and the associated data structures" ilk="function" src="pdf.c"/>
      <scope name="pdf_encoding_set_char" signature="pdf_encoding_set_char(resource p, string encoding, int slot, string glyphname, int uv)" returns="bool" doc="Add a glyph name and or Unicode value to a custom&#10;encoding" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_document" signature="pdf_end_document(resource p, string optlist)" returns="bool" doc="Close the generated PDF file and apply various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_font" signature="pdf_end_font(int p)" returns="bool" doc="Terminate a type font definition" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_glyph" signature="pdf_end_glyph(int p)" returns="bool" doc="Terminate a glyph definition for a Type font" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_item" signature="pdf_end_item(resource p, int id)" returns="bool" doc="Close a structure element or other content item" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_layer" signature="pdf_end_layer(int p)" returns="bool" doc="Deactivate all active layers requires PDF" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_page" signature="pdf_end_page(int pdfdoc)" returns="void" doc="Ends page" ilk="function" src="pdf4.c"/>
      <scope name="pdf_end_page_ext" signature="pdf_end_page_ext(resource p, string optlist)" returns="bool" doc="Finish a page and apply various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_end_pattern" signature="pdf_end_pattern(int pdf)" returns="void" doc="Finish the pattern definition" ilk="function" src="pdf4.c"/>
      <scope name="pdf_end_template" signature="pdf_end_template(int pdf)" returns="void" doc="Finish the template definition" ilk="function" src="pdf4.c"/>
      <scope name="pdf_endpath" signature="pdf_endpath(int pdfdoc)" returns="void" doc="Ends current path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_fill" signature="pdf_fill(int pdfdoc)" returns="void" doc="Fill current path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_fill_imageblock" signature="pdf_fill_imageblock(resource p, int page, string blockname, int image, string optlist)" returns="int" doc="Fill an image block with variable data according to its&#10;properties" ilk="function" src="pdf.c"/>
      <scope name="pdf_fill_pdfblock" signature="pdf_fill_pdfblock(resource p, int page, string blockname, int contents, string optlist)" returns="int" doc="Fill a PDF block with variable data according to its&#10;properties" ilk="function" src="pdf.c"/>
      <scope name="pdf_fill_stroke" signature="pdf_fill_stroke(int pdfdoc)" returns="void" doc="Fill and stroke current path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_fill_textblock" signature="pdf_fill_textblock(resource p, int page, string spotname, string text, string optlist)" returns="int" doc="Fill a text block with variable data according to its&#10;properties" ilk="function" src="pdf.c"/>
      <scope name="pdf_findfont" signature="pdf_findfont(int pdfdoc, string fontname, string encoding [, int embed])" returns="int" doc="Prepares the font fontname for later use with pdf&#10;setfont" ilk="function" src="pdf4.c"/>
      <scope name="pdf_fit_image" signature="pdf_fit_image(resource p, int image, double x, double y, string optlist)" returns="bool" doc="Place an image or template at on the page subject to&#10;various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_fit_pdi_page" signature="pdf_fit_pdi_page(resource p, int page, double x, double y, string optlist)" returns="bool" doc="Place an imported PDF page on the page subject to&#10;various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_fit_textflow" signature="pdf_fit_textflow(resource p, int textflow, double llx, double lly, double urx, double ury, string optlist)" returns="string" doc="Format the next portion of a textflow into a&#10;rectangular area" ilk="function" src="pdf.c"/>
      <scope name="pdf_fit_textline" signature="pdf_fit_textline(resource p, string text, double x, double y, string optlist)" returns="bool" doc="Place a single line of text at position x y subject to&#10;various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_get_apiname" signature="pdf_get_apiname(int p)" returns="int" doc="Get the name of the API function which threw the last&#10;exception or failed" ilk="function" src="pdf.c"/>
      <scope name="pdf_get_buffer" signature="pdf_get_buffer(int pdfdoc)" returns="int" doc="Fetches the full buffer containig the generated PDF&#10;data" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_errmsg" signature="pdf_get_errmsg(int p)" returns="int" doc="Get the descriptive text of the last thrown exception&#10;or the reason of a failed function call" ilk="function" src="pdf.c"/>
      <scope name="pdf_get_errnum" signature="pdf_get_errnum(int p)" returns="int" doc="Get the number of the last thrown exception or the&#10;reason of a failed function call" ilk="function" src="pdf.c"/>
      <scope name="pdf_get_parameter" signature="pdf_get_parameter(int pdfdoc, string key, mixed modifier)" returns="string" doc="Gets arbitrary parameters" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_pdi_parameter" signature="pdf_get_pdi_parameter(int pdf, string key, int doc, int page, int index)" returns="string" doc="Get the contents of some PDI document parameter with&#10;string type" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_pdi_value" signature="pdf_get_pdi_value(int pdf, string key, int doc, int page, int index)" returns="float" doc="Get the contents of some PDI document parameter with&#10;numerical type" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_value" signature="pdf_get_value(int pdfdoc, string key, float modifier)" returns="float" doc="Gets arbitrary value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_info_textflow" signature="pdf_info_textflow(resource p, int textflow, string keyword)" returns="double" doc="Query the current state of a textflow" ilk="function" src="pdf.c"/>
      <scope name="pdf_initgraphics" signature="pdf_initgraphics(int pdf)" returns="void" doc="Reset all implicit color and graphics state parameters&#10;to their defaults" ilk="function" src="pdf4.c"/>
      <scope name="pdf_lineto" signature="pdf_lineto(int pdfdoc, float x, float y)" returns="void" doc="Draws a line" ilk="function" src="pdf4.c"/>
      <scope name="pdf_load_font" signature="pdf_load_font(resource p, string fontname, string encoding, string optlist)" returns="int" doc="Search for a font and prepare it for later use" ilk="function" src="pdf.c"/>
      <scope name="pdf_load_iccprofile" signature="pdf_load_iccprofile(resource p, string profilename, string optlist)" returns="int" doc="Search for an ICC profile and prepare it for later use" ilk="function" src="pdf.c"/>
      <scope name="pdf_load_image" signature="pdf_load_image(resource p, string imagetype, string filename, string optlist)" returns="int" doc="Open a disk-based or virtual image file subject to&#10;various options" ilk="function" src="pdf.c"/>
      <scope name="pdf_makespotcolor" signature="pdf_makespotcolor(int pdf, string spotname)" returns="int" doc="Make a named spot color from the current color" ilk="function" src="pdf4.c"/>
      <scope name="pdf_moveto" signature="pdf_moveto(int pdfdoc, float x, float y)" returns="void" doc="Sets current point" ilk="function" src="pdf4.c"/>
      <scope name="pdf_new" signature="pdf_new()" returns="int" doc="Create a new PDFlib object with default settings" ilk="function" src="pdf7.c"/>
      <scope name="pdf_open_ccitt" signature="pdf_open_ccitt(int pdf, string filename, int width, int height, int bitreverse, int k, int blackls1)" returns="int" doc="Opens an image file with raw CCITT G or G compresed&#10;bitmap data" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_file" signature="pdf_open_file(int pdfdoc [, char filename])" returns="int" doc="Opens a new PDF document If filename is NULL document&#10;is created in memory This is not yet fully supported" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_image" signature="pdf_open_image(resource p, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params)" returns="int" doc="Deprecated use PDF load image with virtual files" ilk="function" src="pdf7.c"/>
      <scope name="pdf_open_image_file" signature="pdf_open_image_file(int pdf, string type, string file, string stringparam, int intparam)" returns="int" doc="Opens an image file of the given type and returns an&#10;image for placement in a PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_pdi" signature="pdf_open_pdi(resource p, string filename, string optlist, int reserved)" returns="int" doc="Open a disk-based or virtual PDF document and prepare&#10;it for later use" ilk="function" src="pdf7.c"/>
      <scope name="pdf_open_pdi_page" signature="pdf_open_pdi_page(int pdf, int doc, int page, string label)" returns="int" doc="Prepare a page for later use with PDF place image" ilk="function" src="pdf4.c"/>
      <scope name="pdf_place_image" signature="pdf_place_image(int pdf, int pdfimage, float x, float y, float scale)" returns="void" doc="Places image in the PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_place_pdi_page" signature="pdf_place_pdi_page(int pdf, int page, float x, float y, float sx, float sy)" returns="void" doc="Place a PDF page with the lower left corner at x y and&#10;scale it" ilk="function" src="pdf4.c"/>
      <scope name="pdf_process_pdi" signature="pdf_process_pdi(resource p, int doc, int page, string optlist)" returns="int" doc="Process certain elements of an imported PDF document" ilk="function" src="pdf.c"/>
      <scope name="pdf_rect" signature="pdf_rect(int pdfdoc, float x, float y, float width, float height)" returns="void" doc="Draws a rectangle" ilk="function" src="pdf4.c"/>
      <scope name="pdf_restore" signature="pdf_restore(int pdfdoc)" returns="void" doc="Restores formerly saved enviroment" ilk="function" src="pdf4.c"/>
      <scope name="pdf_resume_page" signature="pdf_resume_page(resource p, string optlist)" returns="bool" doc="Resume a page to add more content to it" ilk="function" src="pdf.c"/>
      <scope name="pdf_rotate" signature="pdf_rotate(int pdfdoc, float angle)" returns="void" doc="Sets rotation" ilk="function" src="pdf4.c"/>
      <scope name="pdf_save" signature="pdf_save(int pdfdoc)" returns="void" doc="Saves current enviroment" ilk="function" src="pdf4.c"/>
      <scope name="pdf_scale" signature="pdf_scale(int pdfdoc, float x_scale, float y_scale)" returns="void" doc="Sets scaling" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_border_color" signature="pdf_set_border_color(int pdfdoc, float red, float green, float blue)" returns="void" doc="Sets color of box surounded all kinds of annotations&#10;and links" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_border_dash" signature="pdf_set_border_dash(int pdfdoc, float black, float white)" returns="void" doc="Sets the border dash style of all kinds of annotations&#10;and links" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_border_style" signature="pdf_set_border_style(int pdfdoc, string style, float width)" returns="void" doc="Sets style of box surounding all kinds of annotations&#10;and link" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_gstate" signature="pdf_set_gstate(resource p, int gstate)" returns="bool" doc="Activate a gstate object" ilk="function" src="pdf.c"/>
      <scope name="pdf_set_info" signature="pdf_set_info(int pdfdoc, string fieldname, string value)" returns="bool" doc="Fills an info field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_layer_dependency" signature="pdf_set_layer_dependency(resource p, string type, string optlist)" returns="bool" doc="Define hierarchical and group relationships among&#10;layers requires PDF" ilk="function" src="pdf.c"/>
      <scope name="pdf_set_parameter" signature="pdf_set_parameter(int pdfdoc, string key, string value)" returns="void" doc="Sets arbitrary parameters" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_text_pos" signature="pdf_set_text_pos(int pdfdoc, float x, float y)" returns="void" doc="Sets the position of text for the next pdf show call" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_value" signature="pdf_set_value(int pdfdoc, string key, float value)" returns="void" doc="Sets arbitrary value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setcolor" signature="pdf_setcolor(int pdf, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]])" returns="void" doc="Set the current color space and color" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setdash" signature="pdf_setdash(int pdfdoc, float black, float white)" returns="void" doc="Sets dash pattern" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setdashpattern" signature="pdf_setdashpattern(resource p, string optlist)" returns="bool" doc="Set a dash pattern defined by an option list" ilk="function" src="pdf.c"/>
      <scope name="pdf_setflat" signature="pdf_setflat(int pdfdoc, float value)" returns="void" doc="Sets flatness" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setfont" signature="pdf_setfont(int pdfdoc, int font, float fontsize)" returns="void" doc="Sets the current font in the fiven fontsize" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setlinecap" signature="pdf_setlinecap(int pdfdoc, int value)" returns="void" doc="Sets linecap parameter" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setlinejoin" signature="pdf_setlinejoin(int pdfdoc, int value)" returns="void" doc="Sets linejoin parameter" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setlinewidth" signature="pdf_setlinewidth(int pdfdoc, float width)" returns="void" doc="Sets line width" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setmatrix" signature="pdf_setmatrix(int pdf, float a, float b, float c, float d, float e, float f)" returns="void" doc="Explicitly set the current transformation matrix" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setmiterlimit" signature="pdf_setmiterlimit(int pdfdoc, float value)" returns="void" doc="Sets miter limit" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setpolydash" signature="pdf_setpolydash(resource p, double darray)" returns="bool" doc="Deprecated use PDF setdashpattern" ilk="function" src="pdf7.c"/>
      <scope name="pdf_shading" signature="pdf_shading(resource p, string type, double x0, double y0, double x1, double y1, double c1, double c2, double c3, double c4, string optlist)" returns="int" doc="Define a blend from the current fill color to another&#10;color requires PDF or above" ilk="function" src="pdf.c"/>
      <scope name="pdf_shading_pattern" signature="pdf_shading_pattern(resource p, int shading, string optlist)" returns="int" doc="Define a shading pattern using a shading object&#10;requires PDF or above" ilk="function" src="pdf.c"/>
      <scope name="pdf_shfill" signature="pdf_shfill(resource p, int shading)" returns="bool" doc="Fill an area with a shading based on a shading object&#10;requires PDF or above" ilk="function" src="pdf.c"/>
      <scope name="pdf_show" signature="pdf_show(int pdfdoc, string text)" returns="void" doc="Output text at current position" ilk="function" src="pdf4.c"/>
      <scope name="pdf_show_boxed" signature="pdf_show_boxed(int pdfdoc, string text, float x_koor, float y_koor, float width, float height, string mode [, string feature])" returns="int" doc="Output text formated in a boxed" ilk="function" src="pdf4.c"/>
      <scope name="pdf_show_xy" signature="pdf_show_xy(int pdfdoc, string text, float x_koor, float y_koor)" returns="void" doc="Output text at position" ilk="function" src="pdf4.c"/>
      <scope name="pdf_skew" signature="pdf_skew(int pdfdoc, float xangle, float yangle)" returns="void" doc="Skew the coordinate system" ilk="function" src="pdf4.c"/>
      <scope name="pdf_stringwidth" signature="pdf_stringwidth(int pdfdoc, string text [, int font, float size])" returns="float" doc="Returns width of text in current font" ilk="function" src="pdf4.c"/>
      <scope name="pdf_stroke" signature="pdf_stroke(int pdfdoc)" returns="void" doc="Draw line along path path" ilk="function" src="pdf4.c"/>
      <scope name="pdf_suspend_page" signature="pdf_suspend_page(resource p, string optlist)" returns="bool" doc="Suspend the current page so that it can later be&#10;resumed" ilk="function" src="pdf.c"/>
      <scope name="pdf_translate" signature="pdf_translate(int pdfdoc, float x, float y)" returns="void" doc="Sets origin of coordinate system" ilk="function" src="pdf4.c"/>
      <scope name="PDF_utf16_to_utf8" signature="PDF_utf16_to_utf8(resource p, string utf16string)" returns="string" doc="Convert a string from UTF- format to UTF-" ilk="function" src="pdf7.c"/>
      <scope name="PDF_utf8_to_utf16" signature="PDF_utf8_to_utf16(resource p, string utf8string, string ordering)" returns="string" doc="Convert a string from UTF- format to UTF-" ilk="function" src="pdf7.c"/>
      <scope name="pdf_open_memory_image" signature="pdf_open_memory_image(int pdf, int image)" returns="int" doc="Takes an GD image and returns an image for placement in&#10;a PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_info_creator" signature="pdf_set_info_creator(int pdfdoc, string creator)" returns="bool" doc="Fills the creator field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_info_title" signature="pdf_set_info_title(int pdfdoc, string title)" returns="bool" doc="Fills the title field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_info_subject" signature="pdf_set_info_subject(int pdfdoc, string subject)" returns="bool" doc="Fills the subject field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_info_author" signature="pdf_set_info_author(int pdfdoc, string author)" returns="bool" doc="Fills the author field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_info_keywords" signature="pdf_set_info_keywords(int pdfdoc, string keywords)" returns="bool" doc="Fills the keywords field of the document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open" signature="pdf_open([int filedesc])" returns="int" doc="Opens a new pdf document If filedesc is NULL document&#10;is created in memory This is the old interface only" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_font" signature="pdf_set_font(int pdfdoc, string font, float size, string encoding [, int embed])" returns="void" doc="Select the current font face size and encoding" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_font" signature="pdf_get_font(int pdfdoc)" returns="int" doc="Gets the current font" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_fontname" signature="pdf_get_fontname(int pdfdoc)" returns="string" doc="Gets the current font name" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_fontsize" signature="pdf_get_fontsize(int pdfdoc)" returns="float" doc="Gets the current font size" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_leading" signature="pdf_set_leading(int pdfdoc, float distance)" returns="void" doc="Sets distance between text lines" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_text_rendering" signature="pdf_set_text_rendering(int pdfdoc, int mode)" returns="void" doc="Determines how text is rendered" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_horiz_scaling" signature="pdf_set_horiz_scaling(int pdfdoc, float scale)" returns="void" doc="Sets horizontal scaling of text" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_text_rise" signature="pdf_set_text_rise(int pdfdoc, float value)" returns="void" doc="Sets the text rise" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_char_spacing" signature="pdf_set_char_spacing(int pdfdoc, float space)" returns="void" doc="Sets character spacing" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_word_spacing" signature="pdf_set_word_spacing(int pdfdoc, float space)" returns="void" doc="Sets spacing between words" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setgray_fill" signature="pdf_setgray_fill(int pdfdoc, float value)" returns="void" doc="Sets filling color to gray value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setgray_stroke" signature="pdf_setgray_stroke(int pdfdoc, float value)" returns="void" doc="Sets drawing color to gray value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setgray" signature="pdf_setgray(int pdfdoc, float value)" returns="void" doc="Sets drawing and filling color to gray value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setrgbcolor_fill" signature="pdf_setrgbcolor_fill(int pdfdoc, float red, float green, float blue)" returns="void" doc="Sets filling color to RGB color value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setrgbcolor_stroke" signature="pdf_setrgbcolor_stroke(int pdfdoc, float red, float green, float blue)" returns="void" doc="Sets drawing color to RGB color value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_setrgbcolor" signature="pdf_setrgbcolor(int pdfdoc, float red, float green, float blue)" returns="void" doc="Sets drawing and filling color to RGB color value" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_transition" signature="pdf_set_transition(int pdfdoc, int transition)" returns="void" doc="Sets transition between pages" ilk="function" src="pdf4.c"/>
      <scope name="pdf_set_duration" signature="pdf_set_duration(int pdfdoc, float duration)" returns="void" doc="Sets duration between pages" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_gif" signature="pdf_open_gif(int pdf, string giffile)" returns="int" doc="Opens a GIF file and returns an image for placement in&#10;a pdf object" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_jpeg" signature="pdf_open_jpeg(int pdf, string jpegfile)" returns="int" doc="Opens a JPEG file and returns an image for placement in&#10;a PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_png" signature="pdf_open_png(int pdf, string pngfile)" returns="int" doc="Opens a PNG file and returns an image for placement in&#10;a PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_open_tiff" signature="pdf_open_tiff(int pdf, string tifffile)" returns="int" doc="Opens a TIFF file and returns an image for placement in&#10;a PDF document" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_image_width" signature="pdf_get_image_width(int pdf, int pdfimage)" returns="int" doc="Returns the width of an image" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_image_height" signature="pdf_get_image_height(int pdf, int pdfimage)" returns="int" doc="Returns the height of an image" ilk="function" src="pdf4.c"/>
      <scope name="pdf_add_annotation" signature="pdf_add_annotation(int pdfdoc, float xll, float yll, float xur, float xur, string title, string text)" returns="void" doc="Sets annotation depreciated use pdf add note instead" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_majorversion" signature="pdf_get_majorversion()" returns="int" doc="Returns the major version number of the PDFlib" ilk="function" src="pdf4.c"/>
      <scope name="pdf_get_minorversion" signature="pdf_get_minorversion()" returns="int" doc="Returns the minor version number of the PDFlib" ilk="function" src="pdf4.c"/>
      <scope name="tcpwrap_check" signature="tcpwrap_check(string daemon, string address [, string user, [int nodns]])" returns="bool" doc="Check if client has access according to tcp wrappers&#10;table" ilk="function" src="tcpwrap.c"/>
      <scope name="xmms_start" signature="xmms_start(void)" returns="int" doc="Start up XMMS if it is not already running" ilk="function" src="xmms.c"/>
      <scope name="xmms_is_running" signature="xmms_is_running(void)" returns="bool" doc="Check if XMMS is running" ilk="function" src="xmms.c"/>
      <scope name="xmms_playlist_length" signature="xmms_playlist_length(void)" returns="int" doc="Get the number of songs in the playlist" ilk="function" src="xmms.c"/>
      <scope name="xmms_playlist_pos" signature="xmms_playlist_pos(void)" returns="int" doc="Get current playlist position" ilk="function" src="xmms.c"/>
      <scope name="xmms_playlist" signature="xmms_playlist([mixed pos])" returns="array" doc="Get full or partial playlist info" ilk="function" src="xmms.c"/>
      <scope name="xmms_play" signature="xmms_play([int pos])" returns="void" doc="Play current or provided song position" ilk="function" src="xmms.c"/>
      <scope name="xmms_stop" signature="xmms_stop(void)" returns="void" doc="Stop playing current song" ilk="function" src="xmms.c"/>
      <scope name="xmms_quit" signature="xmms_quit(void)" returns="void" doc="Force XMMS to terminate" ilk="function" src="xmms.c"/>
      <scope name="xmms_version" signature="xmms_version(void)" returns="int" doc="Get the XMMS version" ilk="function" src="xmms.c"/>
      <scope name="xmms_next" signature="xmms_next(void)" returns="void" doc="Go to next song in playlist" ilk="function" src="xmms.c"/>
      <scope name="xmms_prev" signature="xmms_prev(void)" returns="void" doc="Go to previous song in playlist" ilk="function" src="xmms.c"/>
      <scope name="xmms_status" signature="xmms_status(void)" returns="string" doc="Returns current XMMS status" ilk="function" src="xmms.c"/>
      <scope name="xmms_is_repeat" signature="xmms_is_repeat(void)" returns="bool" doc="Get repeat setting" ilk="function" src="xmms.c"/>
      <scope name="xmms_repeat" signature="xmms_repeat([bool setting])" returns="int" doc="Toggle Set repeat setting" ilk="function" src="xmms.c"/>
      <scope name="xmms_is_shuffle" signature="xmms_is_shuffle(void)" returns="bool" doc="Get shuffle setting" ilk="function" src="xmms.c"/>
      <scope name="xmms_shuffle" signature="xmms_shuffle([bool setting])" returns="int" doc="Toggle Set shuffle setting" ilk="function" src="xmms.c"/>
      <scope name="xmms_current" signature="xmms_current(void)" returns="array" doc="Get current song info" ilk="function" src="xmms.c"/>
      <scope name="xmms_url" signature="xmms_url(string url)" returns="void" doc="Play from url" ilk="function" src="xmms.c"/>
      <scope name="xmms_time" signature="xmms_time([float time_pos])" returns="float" doc="Get Set output time position" ilk="function" src="xmms.c"/>
      <scope name="xmms_main_win" signature="xmms_main_win(bool setting)" returns="void" doc="Hide Unhide main xmms window" ilk="function" src="xmms.c"/>
      <scope name="xmms_pl_win" signature="xmms_pl_win(bool setting)" returns="void" doc="Hide Unhide playlist xmms window" ilk="function" src="xmms.c"/>
      <scope name="xmms_eq_win" signature="xmms_eq_win(bool setting)" returns="void" doc="Hide Unhide equalizer xmms window" ilk="function" src="xmms.c"/>
      <scope name="xmms" signature="xmms([bool start])" returns="object" doc="XMMS class constructor" ilk="function" src="xmms.c"/>
      <scope name="shp_open" signature="shp_open(string filename, string access)" returns="resource" doc="Opens a SHP handle" ilk="function" src="shp.c"/>
      <scope name="shp_create" signature="shp_create(string filename, string access)" returns="resource" doc="Creates a SHP handle" ilk="function" src="shp.c"/>
      <scope name="shp_close" signature="shp_close(resource shp)" returns="bool" doc="Close a SHP handle" ilk="function" src="shp.c"/>
      <scope name="shp_read_object" signature="shp_read_object(resource shp, int ord)" returns="resource" doc="Reads an object from a handle The numbering starts from" ilk="function" src="shp.c"/>
      <scope name="shp_destroy_object" signature="shp_destroy_object(resource shp_object)" returns="bool" doc="This function should be used to deallocate the&#10;resources associated with a SHPObject when it is no&#10;longer needed including" ilk="function" src="shp.c"/>
      <scope name="shp_rewind_object" signature="shp_rewind_object(resource shp_handle, resource shp_object)" returns="bool" doc="This function will reverse any rings necessary in order&#10;to enforce the shapefile restrictions on the required&#10;order of inner" ilk="function" src="shp.c"/>
      <scope name="shp_write_object" signature="shp_write_object(resource shp_handle, int entity_num, resource shp_object)" returns="int" doc="The shp write object call is used to write a single&#10;structure or entity to the shapefile See the&#10;definition" ilk="function" src="shp.c"/>
      <scope name="shp_get_info" signature="shp_get_info(resource shp_handle)" returns="mixed" doc="Retrieves various information about shapefile as a&#10;whole The bounds are read from the file header and may&#10;be inaccurate" ilk="function" src="shp.c"/>
      <scope name="shp_compute_extents" signature="shp_compute_extents(resource shp_object)" returns="bool" doc="This function will recompute the extents of this shape&#10;replacing the existing values of the dfXMin dfYMin&#10;dfZMin dfMMin dfXMax" ilk="function" src="shp.c"/>
      <scope name="shp_create_object" signature="shp_create_object(...)" returns="resource" doc="" ilk="function" src="shp.c"/>
      <scope name="shp_create_simple_object" signature="shp_create_simple_object(...)" returns="resource" doc="" ilk="function" src="shp.c"/>
      <scope name="html_parser_create" signature="html_parser_create(void)" returns="html_parser" doc="create an HTML parser" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_free" signature="html_parser_free(resource html_parser parser)" returns="bool" doc="free an HTML parser" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_starttag_handler" signature="html_parser_starttag_handler(resource html_parser parser, callback handler)" returns="bool" doc="set callback function for start tags" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_endtag_handler" signature="html_parser_endtag_handler(resource html_parser parser, callback handler)" returns="bool" doc="set callback function for end tags" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_data_handler" signature="html_parser_data_handler(resource html_parser parser, callback handler)" returns="bool" doc="set callback function for character data" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_comment_handler" signature="html_parser_comment_handler(resource html_parser parser, callback handler)" returns="bool" doc="set callback function for HTML comments" ilk="function" src="html_parse.c"/>
      <scope name="html_parser_parse" signature="html_parser_parse(resource html_parser parser, string data [, bool finish])" returns="bool" doc="feed input into parser" ilk="function" src="html_parse.c"/>
      <scope name="memcache_connect" signature="memcache_connect( string host [, int port [, int timeout ] ])" returns="object" doc="Connects to server and returns a Memcache object" ilk="function" src="memcache.c"/>
      <scope name="memcache_pconnect" signature="memcache_pconnect( string host [, int port [, int timeout ] ])" returns="object" doc="Connects to server and returns a Memcache object" ilk="function" src="memcache.c"/>
      <scope name="memcache_add_server" signature="memcache_add_server( string host [, int port [, bool persistent [, int weight [, int timeout [, int retry_interval [, bool status [, callback failure_callback ] ] ] ] ] ] ])" returns="bool" doc="Adds a connection to the pool The order in which this&#10;function is called is significant" ilk="function" src="memcache.c"/>
      <scope name="memcache_set_server_params" signature="memcache_set_server_params( string host [, int port [, int timeout [, int retry_interval [, bool status [, callback failure_callback ] ] ] ] ])" returns="bool" doc="Changes server parameters at runtime" ilk="function" src="memcache.c"/>
      <scope name="memcache_get_server_status" signature="memcache_get_server_status( string host [, int port ])" returns="int" doc="Returns server status if server is failed otherwise&#10;non-zero" ilk="function" src="memcache.c"/>
      <scope name="memcache_get_version" signature="memcache_get_version( object memcache )" returns="string" doc="Returns server's version" ilk="function" src="memcache.c"/>
      <scope name="memcache_add" signature="memcache_add( object memcache, string key, mixed var [, int flag [, int expire ] ] )" returns="bool" doc="Adds new item Item with such key should not exist" ilk="function" src="memcache.c"/>
      <scope name="memcache_set" signature="memcache_set( object memcache, string key, mixed var [, int flag [, int expire ] ] )" returns="bool" doc="Sets the value of an item Item may exist or not" ilk="function" src="memcache.c"/>
      <scope name="memcache_replace" signature="memcache_replace( object memcache, string key, mixed var [, int flag [, int expire ] ] )" returns="bool" doc="Replaces existing item Returns false if item doesn't&#10;exist" ilk="function" src="memcache.c"/>
      <scope name="memcache_get" signature="memcache_get( object memcache, mixed key )" returns="mixed" doc="Returns value of existing item or false" ilk="function" src="memcache.c"/>
      <scope name="memcache_delete" signature="memcache_delete( object memcache, string key [, int expire ])" returns="bool" doc="Deletes existing item" ilk="function" src="memcache.c"/>
      <scope name="memcache_debug" signature="memcache_debug( bool onoff )" returns="bool" doc="Turns on off internal debugging" ilk="function" src="memcache.c"/>
      <scope name="memcache_get_stats" signature="memcache_get_stats( object memcache [, string type [, int slabid [, int limit ] ] ])" returns="array" doc="Returns server's statistics" ilk="function" src="memcache.c"/>
      <scope name="memcache_get_extended_stats" signature="memcache_get_extended_stats( object memcache [, string type [, int slabid [, int limit ] ] ])" returns="array" doc="Returns statistics for each server in the pool" ilk="function" src="memcache.c"/>
      <scope name="memcache_set_compress_threshold" signature="memcache_set_compress_threshold( object memcache, int threshold [, float min_savings ] )" returns="array" doc="Set automatic compress threshold" ilk="function" src="memcache.c"/>
      <scope name="memcache_increment" signature="memcache_increment( object memcache, string key [, int value ] )" returns="int" doc="Increments existing variable" ilk="function" src="memcache.c"/>
      <scope name="memcache_decrement" signature="memcache_decrement( object memcache, string key [, int value ] )" returns="int" doc="Decrements existing variable" ilk="function" src="memcache.c"/>
      <scope name="memcache_close" signature="memcache_close( object memcache )" returns="bool" doc="Closes connection to memcached" ilk="function" src="memcache.c"/>
      <scope name="memcache_flush" signature="memcache_flush( object memcache )" returns="bool" doc="Flushes cache" ilk="function" src="memcache.c"/>
      <scope name="vpopmail_add_domain" signature="vpopmail_add_domain(string domain, string dir, int uid, int gid)" returns="bool" doc="Adds a new virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_del_domain" signature="vpopmail_del_domain(string domain)" returns="bool" doc="Deletes a virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_add_alias_domain" signature="vpopmail_add_alias_domain(string domain, string aliasdomain)" returns="bool" doc="Adds an alias for a virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_add_domain_ex" signature="vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop]]])" returns="bool" doc="Adds a new virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_del_domain_ex" signature="vpopmail_del_domain_ex(string domain)" returns="bool" doc="Deletes a virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_add_alias_domain_ex" signature="vpopmail_add_alias_domain_ex(string olddomain, string newdomain)" returns="bool" doc="Adds an alias to an existing virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_add_user" signature="vpopmail_add_user(string user, string domain, string password[, string gecos[, bool apop]])" returns="bool" doc="Adds a new user to the specified virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_del_user" signature="vpopmail_del_user(string user, string domain)" returns="bool" doc="Deletes a user from a virtual domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_passwd" signature="vpopmail_passwd(string user, string domain, string password)" returns="bool" doc="Changes user's password" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_set_user_quota" signature="vpopmail_set_user_quota(string user, string domain, string quota)" returns="bool" doc="Sets user's quota" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_auth_user" signature="vpopmail_auth_user(string user, string domain, string password[, string apop])" returns="bool" doc="Attempts to validate a username domain password Returns&#10;true false" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_alias_add" signature="vpopmail_alias_add(string user, string domain, string alias)" returns="bool" doc="Inserts a virtual alias" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_alias_del" signature="vpopmail_alias_del(string user, string domain)" returns="bool" doc="Deletes all virtual aliases of a given user" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_alias_del_domain" signature="vpopmail_alias_del_domain(string domain)" returns="bool" doc="Deletes all virtual aliases of a given domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_alias_get" signature="vpopmail_alias_get(string alias, string domain)" returns="array" doc="Returns all lines of an alias for a given domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_alias_get_all" signature="vpopmail_alias_get_all(string domain)" returns="array" doc="Returns all lines of all aliases for a given domain" ilk="function" src="php_vpopmail.c"/>
      <scope name="vpopmail_error" signature="vpopmail_error(void)" returns="string" doc="Returns text message for last vpopmail error" ilk="function" src="php_vpopmail.c"/>
      <scope name="res_open" signature="res_open( module_name )" returns="resource" doc="Return a PHP resource that identify the WIN resource&#10;module handle" ilk="function" src="res.c"/>
      <scope name="res_close" signature="res_close( resouce module )" returns="bool" doc="Close a module handle" ilk="function" src="res.c"/>
      <scope name="res_set" signature="res_set( string file, string type, string name, string data[, int lang] )" returns="bool" doc="Add or modify a resource in 'file' dll or exe lang is&#10;experimental is neutral is user default is system" ilk="function" src="res.c"/>
      <scope name="res_list" signature="res_list( resource module, string type )" returns="array" doc="return the resource list for a given type" ilk="function" src="res.c"/>
      <scope name="res_list_type" signature="res_list_type( resource module [, bool as_string=true] )" returns="array" doc="return the resource type list for a given module as&#10;string specify if known type should be translated to&#10;string" ilk="function" src="res.c"/>
      <scope name="win_shell_execute" signature="win_shell_execute(string absolute_path[, string action, string args, string dir])" returns="bool" doc="Execute a shell action on a file or directory Common&#10;actions open edit explore find print properties The&#10;shell act" ilk="function" src="win32std.c"/>
      <scope name="win_beep" signature="win_beep(string type)" returns="bool" doc="plays the system sound used by default for pre-defined&#10;events ' ' System Asterisk ' ' System Exclamation 'H'&#10;System" ilk="function" src="win32std.c"/>
      <scope name="win_create_link" signature="win_create_link( file, link_file, args, descr, workingdir )" returns="int" doc="Create a MS link file lnk Don't forget the lnk at the&#10;end of link file" ilk="function" src="win32std.c"/>
      <scope name="win_message_box" signature="win_message_box( text[, type, caption] )" returns="int" doc="Prompt a typical Win message box Use the Messages Box&#10;Constants to modify the appearance of the message box" ilk="function" src="win32std.c"/>
      <scope name="win_browse_folder" signature="win_browse_folder( [string dir, string caption=&quot;&quot;] )" returns="int" doc="Prompt a quot browse for folder quot message box" ilk="function" src="win32std.c"/>
      <scope name="win_browse_file" signature="win_browse_file( [open, path, filename, ext, filter] )" returns="string" doc="open or save dialog box starting path default filename&#10;default extension filter in M format Filter exemple&#10;quot HTML File" ilk="function" src="win32std.c"/>
      <scope name="confirm_win32std_compiled" signature="confirm_win32std_compiled(string arg)" returns="string" doc="Return a string to confirm that the module is compiled&#10;in" ilk="function" src="win32std.c"/>
      <scope name="reg_close_key" signature="reg_close_key(resource hKey)" returns="void" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_create_key" signature="reg_create_key(mixed hKey, string subkey [, int samDesired = KEY_ALL_ACCESS])" returns="resource" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_enum_key" signature="reg_enum_key(mixed hKey[, int index=1])" returns="mixed" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_enum_value" signature="reg_enum_value(mixed hKey[, int index=-1])" returns="mixed" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_open_key" signature="reg_open_key(mixed hKey, string subkey [, int samDesired = KEY_ALL_ACCESS])" returns="resource" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_set_value" signature="reg_set_value(mixed hKey, string value_name, int type, mixed value)" returns="bool" doc="" ilk="function" src="registry.c"/>
      <scope name="reg_get_value" signature="reg_get_value(mixed hKey, string value_name)" returns="mixed" doc="" ilk="function" src="registry.c"/>
      <scope name="eci_last_string_list_item" signature="eci_last_string_list_item(int item_number)" returns="string" doc="returns the nth string item that was returned by eci&#10;command" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_string_list_count" signature="eci_last_string_list_count(void)" returns="int" doc="Returns the number of strings returned by the last&#10;command" ilk="function" src="ecasound.c"/>
      <scope name="eci_command_float_arg" signature="eci_command_float_arg(String command, Double argument)" returns="void" doc="Issue an EIAM command This function can be used instead&#10;of command string if the command in question requires&#10;exactly" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_long_integer" signature="eci_last_long_integer(void)" returns="int" doc="Returns the last long integer return value" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_integer" signature="eci_last_integer(void)" returns="int" doc="Returns the last integer return value" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_float" signature="eci_last_float(void)" returns="float" doc="Returns the last float return value" ilk="function" src="ecasound.c"/>
      <scope name="eci_init" signature="eci_init(void)" returns="void" doc="Reserve resources for Ecasound" ilk="function" src="ecasound.c"/>
      <scope name="eci_cleanup" signature="eci_cleanup(void)" returns="void" doc="Free all reserved resources" ilk="function" src="ecasound.c"/>
      <scope name="eci_command" signature="eci_command(void)" returns="void" doc="Issue an Ecasound Interactive Mode command" ilk="function" src="ecasound.c"/>
      <scope name="eci_error" signature="eci_error(void) Returns true (!= 0) if error has occured during the execution of last  command.  Otherwise returns false (= 0)" returns="int" doc="" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_string" signature="eci_last_string(void)" returns="string" doc="Returns the last string return value" ilk="function" src="ecasound.c"/>
      <scope name="eci_last_error" signature="eci_last_error(void)" returns="String" doc="Returns a string describing the last error If the last&#10;EIAM command was executed succesfully returns an empty&#10;string" ilk="function" src="ecasound.c"/>
      <scope name="gopher_parsedir" signature="gopher_parsedir(string dirent)" returns="array" doc="Returns an array containing the directory reference&#10;described in dirent" ilk="function" src="gopher_fopen_wrapper.c"/>
      <scope name="xdiff_string_diff" signature="xdiff_string_diff(string str1, string str2, [int context, [bool minimal]])" returns="mixed" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_file_diff" signature="xdiff_file_diff(string file1, string file2, string dest, [int context, [bool minimal]])" returns="bool" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_string_diff_binary" signature="xdiff_string_diff_binary(string str1, string str2)" returns="mixed" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_file_diff_binary" signature="xdiff_file_diff_binary(string file1, string file2, string dest)" returns="bool" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_file_patch" signature="xdiff_file_patch(string file, string patch, string dest [, int flags])" returns="mixed" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_string_patch" signature="xdiff_string_patch(string file, string patch [, int flags, [string error]])" returns="string" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_file_patch_binary" signature="xdiff_file_patch_binary(string file, string patch, string dest)" returns="bool" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_string_patch_binary" signature="xdiff_string_patch_binary(string str, string patch)" returns="string" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_file_merge3" signature="xdiff_file_merge3(string file1, string file2, string file3, string dest)" returns="mixed" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xdiff_string_merge3" signature="xdiff_string_merge3(string str1, string str2, string str3 [, string error])" returns="string" doc="" ilk="function" src="xdiff.c"/>
      <scope name="xattr_set" signature="xattr_set(string path, string name, string value [, int flags])" returns="bool" doc="Set an extended attribute of file" ilk="function" src="xattr.c"/>
      <scope name="xattr_get" signature="xattr_get(string path, string name [, int flags])" returns="string" doc="Returns a value of an extended attribute" ilk="function" src="xattr.c"/>
      <scope name="xattr_supported" signature="xattr_supported(string path)" returns="bool" doc="Checks if filesystem supports extended attributes" ilk="function" src="xattr.c"/>
      <scope name="xattr_remove" signature="xattr_remove(string path, string name [, int flags])" returns="string" doc="Remove an extended attribute of file" ilk="function" src="xattr.c"/>
      <scope name="xattr_list" signature="xattr_list(string path [, int flags])" returns="array" doc="Get list of extended attributes of file" ilk="function" src="xattr.c"/>
      <scope name="m_initengine" signature="m_initengine(string location)" returns="int" doc="Ready the client for IP SSL Communication" ilk="function" src="mcve.c"/>
      <scope name="m_initconn" signature="m_initconn(void)" returns="resource" doc="Create and initialize an MCVE CONN structure" ilk="function" src="mcve.c"/>
      <scope name="m_deleteresponse" signature="m_deleteresponse(resource conn, int identifier)" returns="bool" doc="Delete specified transaction from MCVE CONN structure" ilk="function" src="mcve.c"/>
      <scope name="m_deletetrans" signature="m_deletetrans(resource conn, int identifier)" returns="bool" doc="Delete specified transaction from MCVE CONN structure" ilk="function" src="mcve.c"/>
      <scope name="m_destroyconn" signature="m_destroyconn(resource conn)" returns="void" doc="Destroy the connection and MCVE CONN structure" ilk="function" src="mcve.c"/>
      <scope name="m_setdropfile" signature="m_setdropfile(resource conn, string directory)" returns="int" doc="Set the connection method to Drop-File" ilk="function" src="mcve.c"/>
      <scope name="m_setip" signature="m_setip(resource conn, string host, int port)" returns="int" doc="Set the connection method to IP" ilk="function" src="mcve.c"/>
      <scope name="m_setssl" signature="m_setssl(resource conn, string host, int port)" returns="int" doc="Set the connection method to SSL" ilk="function" src="mcve.c"/>
      <scope name="m_setssl_cafile" signature="m_setssl_cafile(resource conn, string cafile)" returns="int" doc="Set SSL CA Certificate Authority file for verification&#10;of server certificate" ilk="function" src="mcve.c"/>
      <scope name="m_setssl_files" signature="m_setssl_files(resource conn, string sslkeyfile, string sslcertfile)" returns="int" doc="Set certificate key files and certificates if server&#10;requires client certificate verification" ilk="function" src="mcve.c"/>
      <scope name="m_settimeout" signature="m_settimeout(resource conn, int seconds)" returns="int" doc="Set maximum transaction time per trans" ilk="function" src="mcve.c"/>
      <scope name="m_setblocking" signature="m_setblocking(resource conn, int tf)" returns="int" doc="Set blocking non-blocking mode for connection" ilk="function" src="mcve.c"/>
      <scope name="m_verifyconnection" signature="m_verifyconnection(resource conn, int tf)" returns="bool" doc="Set whether or not to PING upon connect to verify&#10;connection" ilk="function" src="mcve.c"/>
      <scope name="m_verifysslcert" signature="m_verifysslcert(resource conn, int tf)" returns="bool" doc="Set whether or not to verify the server ssl certificate" ilk="function" src="mcve.c"/>
      <scope name="m_maxconntimeout" signature="m_maxconntimeout(resource conn, int secs)" returns="bool" doc="The maximum amount of time the API will attempt a&#10;connection to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_connect" signature="m_connect(resource conn)" returns="int" doc="Establish the connection to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_connectionerror" signature="m_connectionerror(resource conn)" returns="string" doc="Get a textual representation of why a connection failed" ilk="function" src="mcve.c"/>
      <scope name="m_transactionssent" signature="m_transactionssent(resource conn)" returns="int" doc="Check to see if outgoing buffer is clear" ilk="function" src="mcve.c"/>
      <scope name="m_ping" signature="m_ping(resource conn)" returns="int" doc="Send a ping request to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_transnew" signature="m_transnew(resource conn)" returns="int" doc="Start a new transaction" ilk="function" src="mcve.c"/>
      <scope name="m_validateidentifier" signature="m_validateidentifier(resource conn, int tf)" returns="int" doc="Whether or not to validate the passed identifier on any&#10;transaction it is passed to" ilk="function" src="mcve.c"/>
      <scope name="m_transkeyval" signature="m_transkeyval(resource conn, long identifier, string key, string value)" returns="int" doc="Add key value pair to a transaction Replaces deprecated&#10;transparam" ilk="function" src="mcve.c"/>
      <scope name="m_transparam" signature="m_transparam(resource conn, long identifier, int key, ...)" returns="int" doc="Add a parameter to a transaction deprecated" ilk="function" src="mcve.c"/>
      <scope name="m_transsend" signature="m_transsend(resource conn, long identifier)" returns="int" doc="Finalize and send the transaction" ilk="function" src="mcve.c"/>
      <scope name="m_responseparam" signature="m_responseparam(resource conn, long identifier, string key)" returns="string" doc="Get a custom response parameter" ilk="function" src="mcve.c"/>
      <scope name="m_responsekeys" signature="m_responsekeys(resource conn, long identifier)" returns="array" doc="Returns array of strings which represents the keys that&#10;can be used for response parameters on this transaction" ilk="function" src="mcve.c"/>
      <scope name="m_getuserparam" signature="m_getuserparam(resource conn, long identifier, int key)" returns="string" doc="Get a user response parameter" ilk="function" src="mcve.c"/>
      <scope name="m_returnstatus" signature="m_returnstatus(resource conn, int identifier)" returns="int" doc="Check to see if the transaction was successful" ilk="function" src="mcve.c"/>
      <scope name="m_returncode" signature="m_returncode(resource conn, int identifier)" returns="int" doc="Grab the exact return code from the transaction" ilk="function" src="mcve.c"/>
      <scope name="m_transactionitem" signature="m_transactionitem(resource conn, int identifier)" returns="int" doc="Get the ITEM number in the associated batch for this&#10;transaction" ilk="function" src="mcve.c"/>
      <scope name="m_transactionavs" signature="m_transactionavs(resource conn, int identifier)" returns="int" doc="Get the Address Verification return status" ilk="function" src="mcve.c"/>
      <scope name="m_transactioncv" signature="m_transactioncv(resource conn, int identifier)" returns="int" doc="Get the CVC CVV CID return status" ilk="function" src="mcve.c"/>
      <scope name="m_transactionbatch" signature="m_transactionbatch(resource conn, int identifier)" returns="int" doc="Get the batch number associated with the transaction" ilk="function" src="mcve.c"/>
      <scope name="m_transactionid" signature="m_transactionid(resource conn, int identifier)" returns="int" doc="Get the unique system id for the transaction" ilk="function" src="mcve.c"/>
      <scope name="m_transactionauth" signature="m_transactionauth(resource conn, int identifier)" returns="string" doc="Get the authorization number returned for the&#10;transaction alpha-numeric" ilk="function" src="mcve.c"/>
      <scope name="m_transactiontext" signature="m_transactiontext(resource conn, int identifier)" returns="string" doc="Get verbiage text return from MCVE or processing&#10;institution" ilk="function" src="mcve.c"/>
      <scope name="m_monitor" signature="m_monitor(resource conn)" returns="int" doc="Perform communication with MCVE send receive data&#10;Non-blocking" ilk="function" src="mcve.c"/>
      <scope name="m_transinqueue" signature="m_transinqueue(resource conn)" returns="int" doc="Number of transactions in client-queue" ilk="function" src="mcve.c"/>
      <scope name="m_checkstatus" signature="m_checkstatus(resource conn, int identifier)" returns="int" doc="Check to see if a transaction has completed" ilk="function" src="mcve.c"/>
      <scope name="m_completeauthorizations" signature="m_completeauthorizations(resource conn, int &amp;array)" returns="int" doc="Number of complete authorizations in queue returning an&#10;array of their identifiers" ilk="function" src="mcve.c"/>
      <scope name="m_sale" signature="m_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)" returns="int" doc="Send a SALE to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_preauth" signature="m_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments,&#9;string clerkid, string stationid, int ptrannum)" returns="int" doc="Send a PREAUTHORIZATION to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_override" signature="m_override(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)" returns="int" doc="Send an OVERRIDE to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_void" signature="m_void(resource conn, string username, string password, int sid, int ptrannum)" returns="int" doc="VOID a transaction in the settlement queue" ilk="function" src="mcve.c"/>
      <scope name="m_preauthcompletion" signature="m_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum)" returns="int" doc="Complete a PREAUTHORIZATION Ready it for settlement" ilk="function" src="mcve.c"/>
      <scope name="m_force" signature="m_force(resiurce conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum)" returns="int" doc="Send a FORCE to MCVE typically a phone-authorization" ilk="function" src="mcve.c"/>
      <scope name="m_return" signature="m_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum)" returns="int" doc="Issue a RETURN or CREDIT to MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_settle" signature="m_settle(resource conn, string username, string password, string batch)" returns="int" doc="Issue a settlement command to do a batch deposit" ilk="function" src="mcve.c"/>
      <scope name="m_ub" signature="m_ub(resource conn, string username, string password)" returns="int" doc="Get a list of all Unsettled batches" ilk="function" src="mcve.c"/>
      <scope name="m_qc" signature="m_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)" returns="int" doc="Audit MCVE for a list of transactions in the outgoing&#10;queue" ilk="function" src="mcve.c"/>
      <scope name="m_gut" signature="m_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)" returns="int" doc="Audit MCVE for Unsettled Transactions" ilk="function" src="mcve.c"/>
      <scope name="m_gl" signature="m_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)" returns="int" doc="Audit MCVE for settled transactions" ilk="function" src="mcve.c"/>
      <scope name="m_gft" signature="m_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)" returns="int" doc="Audit MCVE for Failed transactions" ilk="function" src="mcve.c"/>
      <scope name="m_chkpwd" signature="m_chkpwd(resource conn, string username, string password)" returns="int" doc="Verify Password" ilk="function" src="mcve.c"/>
      <scope name="m_bt" signature="m_bt(resource conn, string username, string password)" returns="int" doc="Get unsettled batch totals" ilk="function" src="mcve.c"/>
      <scope name="m_getcell" signature="m_getcell(resource conn, int identifier, string column, int row)" returns="string" doc="Get a specific cell from a comma delimited response by&#10;column name" ilk="function" src="mcve.c"/>
      <scope name="m_getcellbynum" signature="m_getcellbynum(resource conn, int identifier, int column, int row)" returns="string" doc="Get a specific cell from a comma delimited response by&#10;column number" ilk="function" src="mcve.c"/>
      <scope name="m_numcolumns" signature="m_numcolumns(resource conn, int identifier)" returns="int" doc="Number of columns returned in a comma delimited&#10;response" ilk="function" src="mcve.c"/>
      <scope name="m_numrows" signature="m_numrows(resource conn, int identifier)" returns="int" doc="Number of rows returned in a comma delimited response" ilk="function" src="mcve.c"/>
      <scope name="m_iscommadelimited" signature="m_iscommadelimited(resource conn, int identifier)" returns="int" doc="Checks to see if response is comma delimited" ilk="function" src="mcve.c"/>
      <scope name="m_parsecommadelimited" signature="m_parsecommadelimited(resource conn, int identifier)" returns="int" doc="Parse the comma delimited response so m getcell etc&#10;will work" ilk="function" src="mcve.c"/>
      <scope name="m_getcommadelimited" signature="m_getcommadelimited(resource conn, int identifier)" returns="string" doc="Get the RAW comma delimited data returned from MCVE" ilk="function" src="mcve.c"/>
      <scope name="m_getheader" signature="m_getheader(resource conn, int identifier, int column_num)" returns="string" doc="Get the name of the column in a comma-delimited&#10;response" ilk="function" src="mcve.c"/>
      <scope name="m_destroyengine" signature="m_destroyengine(void)" returns="void" doc="Free memory associated with IP SSL connectivity" ilk="function" src="mcve.c"/>
      <scope name="m_chngpwd" signature="m_chngpwd(resource conn, string admin_password, string new_password)" returns="int" doc="Change the system administrator's password" ilk="function" src="mcve.c"/>
      <scope name="m_listusers" signature="m_listusers(resource conn, string admin_password)" returns="int" doc="List all users on MCVE system" ilk="function" src="mcve.c"/>
      <scope name="m_enableuser" signature="m_enableuser(resource conn, string admin_password, string username)" returns="int" doc="Enable an inactive MCVE user account" ilk="function" src="mcve.c"/>
      <scope name="m_disableuser" signature="m_disableuser(resource conn, string admin_password, string username)" returns="int" doc="Disable an active MCVE user account" ilk="function" src="mcve.c"/>
      <scope name="m_deluser" signature="m_deluser(resource conn, string admin_password, string username)" returns="int" doc="Delete an MCVE user account" ilk="function" src="mcve.c"/>
      <scope name="m_liststats" signature="m_liststats(resource conn, string admin_password)" returns="int" doc="List statistics for all users on MCVE system" ilk="function" src="mcve.c"/>
      <scope name="m_initusersetup" signature="m_initusersetup(void)" returns="resource" doc="Initialize structure to store user data" ilk="function" src="mcve.c"/>
      <scope name="m_deleteusersetup" signature="m_deleteusersetup(resource usersetup)" returns="void" doc="Deallocate data associated with usersetup structure" ilk="function" src="mcve.c"/>
      <scope name="m_adduserarg" signature="m_adduserarg(resource usersetup, int argtype, string argval)" returns="int" doc="Add a value to user configuration structure" ilk="function" src="mcve.c"/>
      <scope name="m_getuserarg" signature="m_getuserarg(resource usersetup, int argtype)" returns="string" doc="Grab a value from usersetup structure" ilk="function" src="mcve.c"/>
      <scope name="m_adduser" signature="m_adduser(resource conn, string admin_password, int usersetup)" returns="int" doc="Add an MCVE user using usersetup structure" ilk="function" src="mcve.c"/>
      <scope name="m_edituser" signature="m_edituser(resource conn, string admin_password, int usersetup)" returns="int" doc="Edit MCVE user using usersetup structure" ilk="function" src="mcve.c"/>
      <scope name="m_uwait" signature="m_uwait(long microsecs)" returns="int" doc="Wait x microsecs" ilk="function" src="mcve.c"/>
      <scope name="m_text_code" signature="m_text_code(string code)" returns="string" doc="Get a textual representation of the return code" ilk="function" src="mcve.c"/>
      <scope name="m_text_avs" signature="m_text_avs(string code)" returns="string" doc="Get a textual representation of the return avs" ilk="function" src="mcve.c"/>
      <scope name="m_sslcert_gen_hash" signature="m_sslcert_gen_hash(string filename)" returns="string" doc="Generate hash for SSL client certificate verification" ilk="function" src="mcve.c"/>
      <scope name="m_text_cv" signature="m_text_cv(int code)" returns="string" doc="Get a textual representation of the return cv" ilk="function" src="mcve.c"/>
      <scope name="ps_set_info" signature="ps_set_info(int psdoc, string fieldname, string value)" returns="bool" doc="Fills an info field of the document" ilk="function" src="ps.c"/>
      <scope name="ps_close" signature="ps_close(int psdoc)" returns="void" doc="Closes the ps document" ilk="function" src="ps.c"/>
      <scope name="ps_begin_page" signature="ps_begin_page(int psdoc, double width, double height)" returns="void" doc="Starts page" ilk="function" src="ps.c"/>
      <scope name="ps_end_page" signature="ps_end_page(int psdoc)" returns="void" doc="Ends page" ilk="function" src="ps.c"/>
      <scope name="ps_set_parameter" signature="ps_set_parameter(int psdoc, string key, string value)" returns="void" doc="Sets arbitrary parameters" ilk="function" src="ps.c"/>
      <scope name="ps_get_parameter" signature="ps_get_parameter(int psdoc, string key[, mixed modifier])" returns="string" doc="Gets arbitrary parameters" ilk="function" src="ps.c"/>
      <scope name="ps_set_value" signature="ps_set_value(int psdoc, string key, float value)" returns="void" doc="Sets arbitrary value" ilk="function" src="ps.c"/>
      <scope name="ps_get_value" signature="ps_get_value(int psdoc, string key[, mixed modifier])" returns="float" doc="Gets arbitrary value" ilk="function" src="ps.c"/>
      <scope name="ps_show" signature="ps_show(int psdoc, string text)" returns="void" doc="Output text at current position" ilk="function" src="ps.c"/>
      <scope name="ps_show2" signature="ps_show2(int psdoc, string text, int len)" returns="void" doc="Output text at current position" ilk="function" src="ps.c"/>
      <scope name="ps_show_xy" signature="ps_show_xy(int psdoc, string text, double x-koor, double y-koor)" returns="void" doc="Output text at position" ilk="function" src="ps.c"/>
      <scope name="ps_show_xy2" signature="ps_show_xy2(int psdoc, string text, int len, double x-koor, double y-koor)" returns="void" doc="Output text at position" ilk="function" src="ps.c"/>
      <scope name="ps_findfont" signature="ps_findfont(int psdoc, string fontname, string encoding [, bool embed])" returns="int" doc="Prepares the font fontname for later use with ps&#10;setfont" ilk="function" src="ps.c"/>
      <scope name="ps_setfont" signature="ps_setfont(int psdoc, int font, float fontsize)" returns="void" doc="Sets the current font in the fiven fontsize" ilk="function" src="ps.c"/>
      <scope name="ps_rotate" signature="ps_rotate(int psdoc, double angle)" returns="void" doc="Sets rotation" ilk="function" src="ps.c"/>
      <scope name="ps_rect" signature="ps_rect(int psdoc, double x, double y, double width, double height)" returns="void" doc="Draws a rectangle" ilk="function" src="ps.c"/>
      <scope name="ps_setlinewidth" signature="ps_setlinewidth(int psdoc, double width)" returns="void" doc="Sets line width" ilk="function" src="ps.c"/>
      <scope name="ps_setoverprintmode" signature="ps_setoverprintmode(int psdoc, long mode)" returns="void" doc="Sets overprint mode" ilk="function" src="ps.c"/>
      <scope name="ps_setdash" signature="ps_setdash(int psdoc, float black, float white)" returns="void" doc="Sets dash pattern" ilk="function" src="ps.c"/>
      <scope name="ps_stroke" signature="ps_stroke(int psdoc)" returns="void" doc="Draw line along path path" ilk="function" src="ps.c"/>
      <scope name="ps_fill" signature="ps_fill(int psdoc)" returns="void" doc="Fill current path" ilk="function" src="ps.c"/>
      <scope name="ps_fill_stroke" signature="ps_fill_stroke(int psdoc)" returns="void" doc="Fill and stroke current path" ilk="function" src="ps.c"/>
      <scope name="ps_save" signature="ps_save(int psdoc)" returns="void" doc="Saves current enviroment" ilk="function" src="ps.c"/>
      <scope name="ps_restore" signature="ps_restore(int psdoc)" returns="void" doc="Restores formerly saved enviroment" ilk="function" src="ps.c"/>
      <scope name="ps_lineto" signature="ps_lineto(int psdoc, double x, double y)" returns="void" doc="Draws a line" ilk="function" src="ps.c"/>
      <scope name="ps_moveto" signature="ps_moveto(int psdoc, double x, double y)" returns="void" doc="Sets current point" ilk="function" src="ps.c"/>
      <scope name="ps_closepath" signature="ps_closepath(int psdoc)" returns="void" doc="Close path" ilk="function" src="ps.c"/>
      <scope name="ps_closepath_stroke" signature="ps_closepath_stroke(int psdoc)" returns="void" doc="Close path and draw line along path" ilk="function" src="ps.c"/>
      <scope name="ps_translate" signature="ps_translate(int psdoc, double x, double y)" returns="void" doc="Sets origin of coordinate system" ilk="function" src="ps.c"/>
      <scope name="ps_scale" signature="ps_scale(int psdoc, double x-scale, double y-scale)" returns="void" doc="Sets scaling" ilk="function" src="ps.c"/>
      <scope name="ps_setlinejoin" signature="ps_setlinejoin(int psdoc, int value)" returns="void" doc="Sets linejoin parameter" ilk="function" src="ps.c"/>
      <scope name="ps_setlinecap" signature="ps_setlinecap(int psdoc, int value)" returns="void" doc="Sets linecap parameter" ilk="function" src="ps.c"/>
      <scope name="ps_setmiterlimit" signature="ps_setmiterlimit(int psdoc, double value)" returns="void" doc="Sets miter limit" ilk="function" src="ps.c"/>
      <scope name="ps_curveto" signature="ps_curveto(int psdoc, double x1, double y1, double x2, double y2, double x3, double y3)" returns="void" doc="Draws a curve" ilk="function" src="ps.c"/>
      <scope name="ps_show_boxed" signature="ps_show_boxed(int psdoc, string text, double x-koor, double y-koor, double width, double height, string mode [, string feature])" returns="int" doc="Output text formated in a boxed" ilk="function" src="ps.c"/>
      <scope name="ps_set_text_pos" signature="ps_set_text_pos(int psdoc, double x, double y)" returns="void" doc="Sets the position of text for the next ps show call" ilk="function" src="ps.c"/>
      <scope name="ps_continue_text" signature="ps_continue_text(int psdoc, string text)" returns="void" doc="Output text in next line" ilk="function" src="ps.c"/>
      <scope name="ps_stringwidth" signature="ps_stringwidth(int psdoc, string text [, int font, double size])" returns="double" doc="Returns width of text in current font" ilk="function" src="ps.c"/>
      <scope name="ps_string_geometry" signature="ps_string_geometry(int psdoc, string text [, int font, double size])" returns="array" doc="Returns geometry of text in current font" ilk="function" src="ps.c"/>
      <scope name="ps_setflat" signature="ps_setflat(int psdoc, double value)" returns="void" doc="Sets flatness" ilk="function" src="ps.c"/>
      <scope name="ps_circle" signature="ps_circle(int psdoc, double x, double y, double radius)" returns="void" doc="Draws a circle" ilk="function" src="ps.c"/>
      <scope name="ps_arc" signature="ps_arc(int psdoc, double x, double y, double radius, double start, double end)" returns="void" doc="Draws an arc" ilk="function" src="ps.c"/>
      <scope name="ps_skew" signature="ps_skew(int psdoc, double xangle, double yangle)" returns="void" doc="Skew the coordinate system" ilk="function" src="ps.c"/>
      <scope name="ps_closepath_fill_stroke" signature="ps_closepath_fill_stroke(int psdoc)" returns="void" doc="Close fill and stroke current path" ilk="function" src="ps.c"/>
      <scope name="ps_endpath" signature="ps_endpath(int psdoc)" returns="void" doc="Ends current path" ilk="function" src="ps.c"/>
      <scope name="ps_clip" signature="ps_clip(int psdoc)" returns="void" doc="Clips to current path" ilk="function" src="ps.c"/>
      <scope name="ps_add_bookmark" signature="ps_add_bookmark(int psdoc, string text [, int parent, int open])" returns="int" doc="Adds bookmark for current page" ilk="function" src="ps.c"/>
      <scope name="ps_open_image_file" signature="ps_open_image_file(int ps, string type, string file[, string stringparam, int intparam])" returns="int" doc="Opens an image file of the given type and returns an&#10;image for placement in a PS document" ilk="function" src="ps.c"/>
      <scope name="ps_open_memory_image" signature="ps_open_memory_image(int ps, int image)" returns="int" doc="Takes an GD image and returns an image for placement in&#10;a PS document" ilk="function" src="ps.c"/>
      <scope name="ps_close_image" signature="ps_close_image(int ps, int psimage)" returns="void" doc="Closes the PS image" ilk="function" src="ps.c"/>
      <scope name="ps_place_image" signature="ps_place_image(int ps, int psimage, double x, double y, double scale)" returns="void" doc="Places image in the PS document" ilk="function" src="ps.c"/>
      <scope name="ps_shading" signature="ps_shading(int ps, string type, double x0, double y0, double x1, double y1, double c1, double c2, double c3, double c4, string optlist)" returns="int" doc="Define a shading from the current fill color to another&#10;color" ilk="function" src="ps.c"/>
      <scope name="ps_shfill" signature="ps_shfill(int ps, int psshading)" returns="void" doc="Fill an area with a gradient fill" ilk="function" src="ps.c"/>
      <scope name="ps_shading_pattern" signature="ps_shading_pattern(int ps, int psshading)" returns="int" doc="Create a shading pattern" ilk="function" src="ps.c"/>
      <scope name="ps_add_weblink" signature="ps_add_weblink(int psdoc, double llx, double lly, double urx, double ury, string url)" returns="void" doc="Adds link to web resource" ilk="function" src="ps.c"/>
      <scope name="ps_add_pdflink" signature="ps_add_pdflink(int psdoc, double llx, double lly, double urx, double ury, string filename, int page, string dest)" returns="void" doc="Adds link to PS document" ilk="function" src="ps.c"/>
      <scope name="ps_set_border_style" signature="ps_set_border_style(int psdoc, string style, double width)" returns="void" doc="Sets style of box surounding all kinds of annotations&#10;and link" ilk="function" src="ps.c"/>
      <scope name="ps_set_border_color" signature="ps_set_border_color(int psdoc, double red, double green, double blue)" returns="void" doc="Sets color of box surounded all kinds of annotations&#10;and links" ilk="function" src="ps.c"/>
      <scope name="ps_set_border_dash" signature="ps_set_border_dash(int psdoc, double black, double white)" returns="void" doc="Sets the border dash style of all kinds of annotations&#10;and links" ilk="function" src="ps.c"/>
      <scope name="ps_add_annotation" signature="ps_add_annotation(int psdoc, double llx, double lly, double urx, double ury, string title, string text)" returns="void" doc="Sets annotation depreciated use ps add note instead" ilk="function" src="ps.c"/>
      <scope name="ps_new" signature="ps_new()" returns="int" doc="Creates a new PS object" ilk="function" src="ps.c"/>
      <scope name="ps_delete" signature="ps_delete(int psdoc)" returns="void" doc="Deletes the PS object" ilk="function" src="ps.c"/>
      <scope name="ps_open_file" signature="ps_open_file(int psdoc [, char filename])" returns="int" doc="Opens a new PS document If filename is NULL document is&#10;created in memory This is not yet fully supported" ilk="function" src="ps.c"/>
      <scope name="ps_get_buffer" signature="ps_get_buffer(int psdoc)" returns="int" doc="Fetches the full buffer containig the generated PS data" ilk="function" src="ps.c"/>
      <scope name="ps_setpolydash" signature="ps_setpolydash(int psdoc, double darray)" returns="void" doc="Sets more complicated dash pattern" ilk="function" src="ps.c"/>
      <scope name="ps_concat" signature="ps_concat(int ps, double a, double b, double c, double d, double e, double f)" returns="void" doc="Concatenates a matrix to the current transformation&#10;matrix for text and graphics" ilk="function" src="ps.c"/>
      <scope name="ps_open_ccitt" signature="ps_open_ccitt(int ps, string filename, int width, int height, int bitreverse, int k, int blackls1)" returns="int" doc="Opens an image file with raw CCITT G or G compresed&#10;bitmap data" ilk="function" src="ps.c"/>
      <scope name="ps_open_image" signature="ps_open_image(int ps, string type, string source, string data, long length, int width, int height, int components, int bpc, string params)" returns="int" doc="Opens an image of the given type and returns an image&#10;for placement in a PS document" ilk="function" src="ps.c"/>
      <scope name="ps_attach_file" signature="ps_attach_file(int ps, double lly, double lly, double urx, double ury, string filename, string description, string author, string mimetype, string icon)" returns="void" doc="Adds a file attachment annotation at the rectangle&#10;specified by his lower left and upper right corners" ilk="function" src="ps.c"/>
      <scope name="ps_include_file" signature="ps_include_file(int psdoc, string file)" returns="void" doc="Reads an external file with raw PostScript code" ilk="function" src="ps.c"/>
      <scope name="ps_add_note" signature="ps_add_note(int psdoc, double llx, double lly, double urx, double ury, string contents, string title, string icon, int open)" returns="void" doc="Sets annotation" ilk="function" src="ps.c"/>
      <scope name="ps_add_locallink" signature="ps_add_locallink(int psdoc, double llx, double lly, double urx, double ury, int page, string dest)" returns="void" doc="Adds link to web resource" ilk="function" src="ps.c"/>
      <scope name="ps_add_launchlink" signature="ps_add_launchlink(int psdoc, double llx, double lly, double urx, double ury, string filename)" returns="void" doc="Adds link to web resource" ilk="function" src="ps.c"/>
      <scope name="ps_setcolor" signature="ps_setcolor(int ps, string type, string colorspace, double c1, double c2, double c3, double c4)" returns="void" doc="Set the current color space and color" ilk="function" src="ps.c"/>
      <scope name="ps_makespotcolor" signature="ps_makespotcolor(int ps, string spotname)" returns="int" doc="Make a named spot color from the current color" ilk="function" src="ps.c"/>
      <scope name="ps_arcn" signature="ps_arcn(int ps, double x, double y, double r, double alpha, double beta)" returns="void" doc="Draw a clockwise circular arc from alpha to beta&#10;degrees" ilk="function" src="ps.c"/>
      <scope name="ps_initgraphics" signature="ps_initgraphics(int ps)" returns="void" doc="Reset all implicit color and graphics state parameters&#10;to their defaults" ilk="function" src="ps.c"/>
      <scope name="ps_add_thumbnail" signature="ps_add_thumbnail(int ps, int image)" returns="void" doc="Add an existing image as thumbnail for the current page" ilk="function" src="ps.c"/>
      <scope name="ps_setmatrix" signature="ps_setmatrix(int ps, double a, double b, double c, double d, double e, double f)" returns="void" doc="Explicitly set the current transformation matrix" ilk="function" src="ps.c"/>
      <scope name="ps_begin_pattern" signature="ps_begin_pattern(int psdoc, double width, double height, double xstep, double ystep, int painttype)" returns="int" doc="Starts pattern" ilk="function" src="ps.c"/>
      <scope name="ps_end_pattern" signature="ps_end_pattern(int psdoc)" returns="void" doc="Ends pattern" ilk="function" src="ps.c"/>
      <scope name="ps_begin_template" signature="ps_begin_template(int psdoc, double width, double height)" returns="int" doc="Starts template" ilk="function" src="ps.c"/>
      <scope name="ps_end_template" signature="ps_end_template(int psdoc)" returns="void" doc="Ends template" ilk="function" src="ps.c"/>
      <scope name="ps_hyphenate" signature="ps_hyphenate(int ps, string word)" returns="void" doc="Hyphenate a given word" ilk="function" src="ps.c"/>
      <scope name="ps_symbol" signature="ps_symbol(int ps, int ord)" returns="void" doc="Output single char by its value in the font encoding" ilk="function" src="ps.c"/>
      <scope name="ps_symbol_width" signature="ps_symbol_width(int psdoc, int ord [, int font, double size])" returns="double" doc="Returns width of a glyph in current font" ilk="function" src="ps.c"/>
      <scope name="ps_symbol_name" signature="ps_symbol_name(int psdoc, int ord [, int font])" returns="string" doc="Returns name of a glyph in current font" ilk="function" src="ps.c"/>
    </scope>
  </file>
</codeintel>
