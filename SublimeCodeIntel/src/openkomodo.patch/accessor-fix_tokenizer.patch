--- openkomodo/src/codeintel/lib/codeintel2/accessor.py
+++ openkomodo/src/codeintel/lib/codeintel2/accessor.py
     def _token_at_pos(self, pos):
         #XXX Locality of reference should offer an optimization here.
         # Binary search for appropriate token.
-        lower, upper = 0, len(self.tokens)  # [lower-limit, upper-limit)
+        lower, upper = 0, len(self.tokens) - 1  # [lower-limit, upper-limit)
         sentinel = 15
         while sentinel > 0:
             idx = ((upper - lower) / 2) + lower
             token = self.tokens[idx]
-            #print "_token_at_pos %d: token idx=%d text[%d:%d]=%r"\
+            # print "_token_at_pos %d: token idx=%d text[%d:%d]=%r"\
             #      % (pos, idx, token["start_index"], token["end_index"],
             #         token["text"])
-            start, end = token["start_index"], token["end_index"]
-            if pos < token["start_index"]:
+            # start, end = token["start_index"], token["end_index"]
+            if lower == upper:
+                return token
+            elif pos < token["start_index"]:
                 upper = idx
             elif pos > token["end_index"]:
                 lower = idx + 1
